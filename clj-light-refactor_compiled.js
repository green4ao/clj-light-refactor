if(!lt.util.load.provided_QMARK_('cljs.extended.reader')) {
goog.provide('cljs.extended.reader');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('goog.string');
goog.require('goog.string');
cljs.extended.reader.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"deftype*","deftype*",-978581244,null),null,new cljs.core.Symbol(null,"new","new",-1640422567,null),null,new cljs.core.Symbol(null,"try*","try*",-1636962424,null),null,new cljs.core.Symbol(null,"quote","quote",-1532577739,null),null,new cljs.core.Symbol(null,"&","&",-1640531489,null),null,new cljs.core.Symbol(null,"set!","set!",-1637004872,null),null,new cljs.core.Symbol(null,"recur","recur",-1532142362,null),null,new cljs.core.Symbol(null,".",".",-1640531481,null),null,new cljs.core.Symbol(null,"ns","ns",-1640528002,null),null,new cljs.core.Symbol(null,"do","do",-1640528316,null),null,new cljs.core.Symbol(null,"fn*","fn*",-1640430053,null),null,new cljs.core.Symbol(null,"throw","throw",-1530191713,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",1548249632,null),null,new cljs.core.Symbol(null,"js*","js*",-1640426054,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",774272013,null),null,new cljs.core.Symbol(null,"let*","let*",-1637213400,null),null,new cljs.core.Symbol(null,"loop*","loop*",-1537374273,null),null,new cljs.core.Symbol(null,"if","if",-1640528170,null),null,new cljs.core.Symbol(null,"def","def",-1640432194,null),null], null), null);
cljs.extended.reader.symbol_pattern = cljs.core.re_pattern.call(null,"^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.extended.reader.Reader = (function (){var obj9394 = {};return obj9394;
})();
cljs.extended.reader.read_char = (function read_char(reader){if((function (){var and__6486__auto__ = reader;if(and__6486__auto__)
{return reader.cljs$extended$reader$Reader$read_char$arity$1;
} else
{return and__6486__auto__;
}
})())
{return reader.cljs$extended$reader$Reader$read_char$arity$1(reader);
} else
{var x__7125__auto__ = (((reader == null))?null:reader);return (function (){var or__6498__auto__ = (cljs.extended.reader.read_char[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (cljs.extended.reader.read_char["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Reader.read-char",reader);
}
}
})().call(null,reader);
}
});
cljs.extended.reader.peek_char = (function peek_char(reader){if((function (){var and__6486__auto__ = reader;if(and__6486__auto__)
{return reader.cljs$extended$reader$Reader$peek_char$arity$1;
} else
{return and__6486__auto__;
}
})())
{return reader.cljs$extended$reader$Reader$peek_char$arity$1(reader);
} else
{var x__7125__auto__ = (((reader == null))?null:reader);return (function (){var or__6498__auto__ = (cljs.extended.reader.peek_char[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (cljs.extended.reader.peek_char["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Reader.peek-char",reader);
}
}
})().call(null,reader);
}
});
cljs.extended.reader.IPushbackReader = (function (){var obj9396 = {};return obj9396;
})();
cljs.extended.reader.unread = (function unread(reader,ch){if((function (){var and__6486__auto__ = reader;if(and__6486__auto__)
{return reader.cljs$extended$reader$IPushbackReader$unread$arity$2;
} else
{return and__6486__auto__;
}
})())
{return reader.cljs$extended$reader$IPushbackReader$unread$arity$2(reader,ch);
} else
{var x__7125__auto__ = (((reader == null))?null:reader);return (function (){var or__6498__auto__ = (cljs.extended.reader.unread[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (cljs.extended.reader.unread["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"IPushbackReader.unread",reader);
}
}
})().call(null,reader,ch);
}
});
cljs.extended.reader.IndexingReader = (function (){var obj9398 = {};return obj9398;
})();
cljs.extended.reader.get_line_number = (function get_line_number(reader){if((function (){var and__6486__auto__ = reader;if(and__6486__auto__)
{return reader.cljs$extended$reader$IndexingReader$get_line_number$arity$1;
} else
{return and__6486__auto__;
}
})())
{return reader.cljs$extended$reader$IndexingReader$get_line_number$arity$1(reader);
} else
{var x__7125__auto__ = (((reader == null))?null:reader);return (function (){var or__6498__auto__ = (cljs.extended.reader.get_line_number[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (cljs.extended.reader.get_line_number["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"IndexingReader.get-line-number",reader);
}
}
})().call(null,reader);
}
});
cljs.extended.reader.get_column_number = (function get_column_number(reader){if((function (){var and__6486__auto__ = reader;if(and__6486__auto__)
{return reader.cljs$extended$reader$IndexingReader$get_column_number$arity$1;
} else
{return and__6486__auto__;
}
})())
{return reader.cljs$extended$reader$IndexingReader$get_column_number$arity$1(reader);
} else
{var x__7125__auto__ = (((reader == null))?null:reader);return (function (){var or__6498__auto__ = (cljs.extended.reader.get_column_number[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (cljs.extended.reader.get_column_number["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"IndexingReader.get-column-number",reader);
}
}
})().call(null,reader);
}
});

/**
* @constructor
*/
cljs.extended.reader.StringReader = (function (s,s_len,s_pos){
this.s = s;
this.s_len = s_len;
this.s_pos = s_pos;
})
cljs.extended.reader.StringReader.cljs$lang$type = true;
cljs.extended.reader.StringReader.cljs$lang$ctorStr = "cljs.extended.reader/StringReader";
cljs.extended.reader.StringReader.cljs$lang$ctorPrWriter = (function (this__7065__auto__,writer__7066__auto__,opt__7067__auto__){return cljs.core._write.call(null,writer__7066__auto__,"cljs.extended.reader/StringReader");
});
cljs.extended.reader.StringReader.prototype.cljs$extended$reader$Reader$ = true;
cljs.extended.reader.StringReader.prototype.cljs$extended$reader$Reader$read_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;if((self__.s_len > self__.s_pos))
{var r = (self__.s[self__.s_pos]);self__.s_pos = (self__.s_pos + 1);
return r;
} else
{return null;
}
});
cljs.extended.reader.StringReader.prototype.cljs$extended$reader$Reader$peek_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;if((self__.s_len > self__.s_pos))
{return (self__.s[self__.s_pos]);
} else
{return null;
}
});
cljs.extended.reader.__GT_StringReader = (function __GT_StringReader(s,s_len,s_pos){return (new cljs.extended.reader.StringReader(s,s_len,s_pos));
});

/**
* @constructor
*/
cljs.extended.reader.PushbackReader = (function (rdr,buf,buf_len,buf_pos){
this.rdr = rdr;
this.buf = buf;
this.buf_len = buf_len;
this.buf_pos = buf_pos;
})
cljs.extended.reader.PushbackReader.cljs$lang$type = true;
cljs.extended.reader.PushbackReader.cljs$lang$ctorStr = "cljs.extended.reader/PushbackReader";
cljs.extended.reader.PushbackReader.cljs$lang$ctorPrWriter = (function (this__7065__auto__,writer__7066__auto__,opt__7067__auto__){return cljs.core._write.call(null,writer__7066__auto__,"cljs.extended.reader/PushbackReader");
});
cljs.extended.reader.PushbackReader.prototype.cljs$extended$reader$IPushbackReader$ = true;
cljs.extended.reader.PushbackReader.prototype.cljs$extended$reader$IPushbackReader$unread$arity$2 = (function (reader,ch){var self__ = this;
var reader__$1 = this;if(cljs.core.truth_(ch))
{if((self__.buf_pos === 0))
{throw (new Error("Pushback buffer is full"));
} else
{}
self__.buf_pos = (self__.buf_pos - 1);
return (self__.buf[self__.buf_pos] = ch);
} else
{return null;
}
});
cljs.extended.reader.PushbackReader.prototype.cljs$extended$reader$Reader$ = true;
cljs.extended.reader.PushbackReader.prototype.cljs$extended$reader$Reader$read_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;if((self__.buf_pos < self__.buf_len))
{var r = (self__.buf[self__.buf_pos]);self__.buf_pos = (self__.buf_pos + 1);
return r;
} else
{return cljs.extended.reader.read_char.call(null,self__.rdr);
}
});
cljs.extended.reader.PushbackReader.prototype.cljs$extended$reader$Reader$peek_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;if((self__.buf_pos < self__.buf_len))
{return (self__.buf[self__.buf_pos]);
} else
{return cljs.extended.reader.peek_char.call(null,self__.rdr);
}
});
cljs.extended.reader.__GT_PushbackReader = (function __GT_PushbackReader(rdr,buf,buf_len,buf_pos){return (new cljs.extended.reader.PushbackReader(rdr,buf,buf_len,buf_pos));
});
cljs.extended.reader.normalize_newline = (function normalize_newline(rdr,ch){if(("\r" === ch))
{var c = cljs.extended.reader.peek_char.call(null,rdr);if(("\f" === c))
{cljs.extended.reader.read_char.call(null,rdr);
} else
{}
return "\n";
} else
{return ch;
}
});

/**
* @constructor
*/
cljs.extended.reader.IndexingPushbackReader = (function (rdr,line,column,line_start_QMARK_,prev){
this.rdr = rdr;
this.line = line;
this.column = column;
this.line_start_QMARK_ = line_start_QMARK_;
this.prev = prev;
})
cljs.extended.reader.IndexingPushbackReader.cljs$lang$type = true;
cljs.extended.reader.IndexingPushbackReader.cljs$lang$ctorStr = "cljs.extended.reader/IndexingPushbackReader";
cljs.extended.reader.IndexingPushbackReader.cljs$lang$ctorPrWriter = (function (this__7065__auto__,writer__7066__auto__,opt__7067__auto__){return cljs.core._write.call(null,writer__7066__auto__,"cljs.extended.reader/IndexingPushbackReader");
});
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$IndexingReader$ = true;
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$IndexingReader$get_line_number$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;return (self__.line + 1);
});
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$IndexingReader$get_column_number$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;return self__.column;
});
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$IPushbackReader$ = true;
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$IPushbackReader$unread$arity$2 = (function (reader,ch){var self__ = this;
var reader__$1 = this;if(cljs.core.truth_(self__.line_start_QMARK_))
{self__.line = (self__.line - 1);
} else
{}
self__.line_start_QMARK_ = self__.prev;
self__.column = (self__.column - 1);
return cljs.extended.reader.unread.call(null,self__.rdr,ch);
});
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$Reader$ = true;
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$Reader$read_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;var temp__4092__auto__ = cljs.extended.reader.read_char.call(null,self__.rdr);if(cljs.core.truth_(temp__4092__auto__))
{var ch = temp__4092__auto__;var ch__$1 = cljs.extended.reader.normalize_newline.call(null,self__.rdr,ch);self__.prev = self__.line_start_QMARK_;
self__.line_start_QMARK_ = cljs.extended.reader.newline_QMARK_.call(null,ch__$1);
if(cljs.core.truth_(self__.line_start_QMARK_))
{self__.column = 0;
self__.line = (self__.line + 1);
} else
{}
self__.column = (self__.column + 1);
return ch__$1;
} else
{return null;
}
});
cljs.extended.reader.IndexingPushbackReader.prototype.cljs$extended$reader$Reader$peek_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;return cljs.extended.reader.peek_char.call(null,self__.rdr);
});
cljs.extended.reader.__GT_IndexingPushbackReader = (function __GT_IndexingPushbackReader(rdr,line,column,line_start_QMARK_,prev){return (new cljs.extended.reader.IndexingPushbackReader(rdr,line,column,line_start_QMARK_,prev));
});
/**
* Returns an object of the same type and value as `obj`, with its metadata merged over `m`.
*/
cljs.extended.reader.merge_meta = (function merge_meta(obj,m){var orig_meta = cljs.core.meta.call(null,obj);return cljs.core.with_meta.call(null,obj,cljs.core.merge.call(null,m,cljs.core.dissoc.call(null,orig_meta,new cljs.core.Keyword(null,"source","source",4412365709))));
});
/**
* Returns a string containing the contents of the top most source logging frame.
*/
cljs.extended.reader.peek_source_log = (function peek_source_log(source_log_frames){var current_frame = cljs.core.deref.call(null,source_log_frames);return new cljs.core.Keyword(null,"buffer","buffer",3930752946).cljs$core$IFn$_invoke$arity$1(current_frame).toString().substring(new cljs.core.Keyword(null,"offset","offset",4289091589).cljs$core$IFn$_invoke$arity$1(current_frame));
});
/**
* Logs `char` to all currently active source logging frames.
*/
cljs.extended.reader.log_source_char = (function log_source_char(source_log_frames,char$){var temp__4092__auto__ = new cljs.core.Keyword(null,"buffer","buffer",3930752946).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,source_log_frames));if(cljs.core.truth_(temp__4092__auto__))
{var buffer = temp__4092__auto__;return buffer.append(char$);
} else
{return null;
}
});
/**
* Removes the last logged character from all currently active source logging frames. Called when pushing a character back.
*/
cljs.extended.reader.drop_last_logged_char = (function drop_last_logged_char(source_log_frames){var temp__4092__auto__ = new cljs.core.Keyword(null,"buffer","buffer",3930752946).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,source_log_frames));if(cljs.core.truth_(temp__4092__auto__))
{var buffer = temp__4092__auto__;var s = buffer.toString();return buffer.set(s.substring(0,(buffer.getLength() - 1)));
} else
{return null;
}
});

/**
* @constructor
*/
cljs.extended.reader.SourceLoggingPushbackReader = (function (rdr,line,column,line_start_QMARK_,prev,source_log_frames){
this.rdr = rdr;
this.line = line;
this.column = column;
this.line_start_QMARK_ = line_start_QMARK_;
this.prev = prev;
this.source_log_frames = source_log_frames;
})
cljs.extended.reader.SourceLoggingPushbackReader.cljs$lang$type = true;
cljs.extended.reader.SourceLoggingPushbackReader.cljs$lang$ctorStr = "cljs.extended.reader/SourceLoggingPushbackReader";
cljs.extended.reader.SourceLoggingPushbackReader.cljs$lang$ctorPrWriter = (function (this__7065__auto__,writer__7066__auto__,opt__7067__auto__){return cljs.core._write.call(null,writer__7066__auto__,"cljs.extended.reader/SourceLoggingPushbackReader");
});
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$IndexingReader$ = true;
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$IndexingReader$get_line_number$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;return (self__.line | 0);
});
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$IndexingReader$get_column_number$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;return (self__.column | 0);
});
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$IPushbackReader$ = true;
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$IPushbackReader$unread$arity$2 = (function (reader,ch){var self__ = this;
var reader__$1 = this;if(cljs.core.truth_(self__.line_start_QMARK_))
{self__.line = (self__.line - 1);
} else
{self__.column = (self__.column - 1);
}
self__.line_start_QMARK_ = self__.prev;
if(cljs.core.truth_(ch))
{cljs.extended.reader.drop_last_logged_char.call(null,self__.source_log_frames);
} else
{}
return cljs.extended.reader.unread.call(null,self__.rdr,ch);
});
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$Reader$ = true;
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$Reader$read_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;var temp__4092__auto__ = cljs.extended.reader.read_char.call(null,self__.rdr);if(cljs.core.truth_(temp__4092__auto__))
{var ch = temp__4092__auto__;var ch__$1 = cljs.extended.reader.normalize_newline.call(null,self__.rdr,ch);self__.prev = self__.line_start_QMARK_;
self__.line_start_QMARK_ = cljs.extended.reader.newline_QMARK_.call(null,ch__$1);
if(cljs.core.truth_(self__.line_start_QMARK_))
{self__.column = 0;
self__.line = (self__.line + 1);
} else
{}
self__.column = (self__.column + 1);
cljs.extended.reader.log_source_char.call(null,self__.source_log_frames,ch__$1);
return ch__$1;
} else
{return null;
}
});
cljs.extended.reader.SourceLoggingPushbackReader.prototype.cljs$extended$reader$Reader$peek_char$arity$1 = (function (reader){var self__ = this;
var reader__$1 = this;return cljs.extended.reader.peek_char.call(null,self__.rdr);
});
cljs.extended.reader.__GT_SourceLoggingPushbackReader = (function __GT_SourceLoggingPushbackReader(rdr,line,column,line_start_QMARK_,prev,source_log_frames){return (new cljs.extended.reader.SourceLoggingPushbackReader(rdr,line,column,line_start_QMARK_,prev,source_log_frames));
});
/**
* Creates a StringReader from a given string
*/
cljs.extended.reader.string_reader = (function string_reader(s){return (new cljs.extended.reader.StringReader(s,cljs.core.count.call(null,s),0));
});
/**
* Creates a PushbackReader from a given string
*/
cljs.extended.reader.string_push_back_reader = (function() {
var string_push_back_reader = null;
var string_push_back_reader__1 = (function (s){return string_push_back_reader.call(null,s,1);
});
var string_push_back_reader__2 = (function (s,buf_len){return (new cljs.extended.reader.PushbackReader(cljs.extended.reader.string_reader.call(null,s),cljs.core.object_array.call(null,buf_len),buf_len,buf_len));
});
string_push_back_reader = function(s,buf_len){
switch(arguments.length){
case 1:
return string_push_back_reader__1.call(this,s);
case 2:
return string_push_back_reader__2.call(this,s,buf_len);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
string_push_back_reader.cljs$core$IFn$_invoke$arity$1 = string_push_back_reader__1;
string_push_back_reader.cljs$core$IFn$_invoke$arity$2 = string_push_back_reader__2;
return string_push_back_reader;
})()
;
/**
* Creates an IndexingPushbackReader from a given string
*/
cljs.extended.reader.indexing_push_back_reader = (function() {
var indexing_push_back_reader = null;
var indexing_push_back_reader__1 = (function (s){return (new cljs.extended.reader.IndexingPushbackReader(cljs.extended.reader.string_push_back_reader.call(null,s),0,1,true,null));
});
var indexing_push_back_reader__2 = (function (s,buf_len){return (new cljs.extended.reader.IndexingPushbackReader(cljs.extended.reader.string_push_back_reader.call(null,s,buf_len),0,1,true,null));
});
indexing_push_back_reader = function(s,buf_len){
switch(arguments.length){
case 1:
return indexing_push_back_reader__1.call(this,s);
case 2:
return indexing_push_back_reader__2.call(this,s,buf_len);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
indexing_push_back_reader.cljs$core$IFn$_invoke$arity$1 = indexing_push_back_reader__1;
indexing_push_back_reader.cljs$core$IFn$_invoke$arity$2 = indexing_push_back_reader__2;
return indexing_push_back_reader;
})()
;
/**
* Creates a SourceLoggingPushbackReader from a given string or PushbackReader
*/
cljs.extended.reader.source_logging_push_back_reader = (function() {
var source_logging_push_back_reader = null;
var source_logging_push_back_reader__1 = (function (s_or_rdr){return source_logging_push_back_reader.call(null,s_or_rdr,1);
});
var source_logging_push_back_reader__2 = (function (s_or_rdr,buf_len){return source_logging_push_back_reader.call(null,s_or_rdr,buf_len,null);
});
var source_logging_push_back_reader__3 = (function (s_or_rdr,buf_len,file_name){return (new cljs.extended.reader.SourceLoggingPushbackReader(((typeof s_or_rdr === 'string')?cljs.extended.reader.string_push_back_reader.call(null,s_or_rdr,buf_len):s_or_rdr),1,1,true,null,cljs.core.atom.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"buffer","buffer",3930752946),(new goog.string.StringBuffer()),new cljs.core.Keyword(null,"offset","offset",4289091589),0], null))));
});
source_logging_push_back_reader = function(s_or_rdr,buf_len,file_name){
switch(arguments.length){
case 1:
return source_logging_push_back_reader__1.call(this,s_or_rdr);
case 2:
return source_logging_push_back_reader__2.call(this,s_or_rdr,buf_len);
case 3:
return source_logging_push_back_reader__3.call(this,s_or_rdr,buf_len,file_name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$1 = source_logging_push_back_reader__1;
source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$2 = source_logging_push_back_reader__2;
source_logging_push_back_reader.cljs$core$IFn$_invoke$arity$3 = source_logging_push_back_reader__3;
return source_logging_push_back_reader;
})()
;
cljs.extended.reader.js_whitespaces = ["\r","\n","\t"," ",","];
/**
* Checks whether a given character is whitespace
*/
cljs.extended.reader.whitespace_QMARK_ = (function whitespace_QMARK_(ch){return (-1 < cljs.extended.reader.js_whitespaces.indexOf(ch));
});
/**
* Checks whether a given character is numeric
*/
cljs.extended.reader.numeric_QMARK_ = (function numeric_QMARK_(ch){return goog.string.isNumeric(ch);
});
/**
* Checks whether the character is a newline.
*/
cljs.extended.reader.newline_QMARK_ = (function newline_QMARK_(ch){return ("\n" === ch);
});
/**
* Checks whether the character begins a comment.
*/
cljs.extended.reader.comment_prefix_QMARK_ = (function comment_prefix_QMARK_(ch){return (";" === ch);
});
/**
* Checks whether the reader is at the start of a number literal
*/
cljs.extended.reader.number_literal_QMARK_ = (function number_literal_QMARK_(reader,initch){return (cljs.extended.reader.numeric_QMARK_.call(null,initch)) || (((("+" === initch)) || (("-" === initch))) && (cljs.extended.reader.numeric_QMARK_.call(null,cljs.extended.reader.peek_char.call(null,reader))));
});
/**
* @param {...*} var_args
*/
cljs.extended.reader.reader_error = (function() { 
var reader_error__delegate = function (rdr,msg){var error_msg = cljs.core.apply.call(null,cljs.core.str,msg);throw (new Error([cljs.core.str(error_msg),cljs.core.str((((function (){var G__9400 = rdr;if(G__9400)
{var bit__7148__auto__ = null;if(cljs.core.truth_((function (){var or__6498__auto__ = bit__7148__auto__;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return G__9400.cljs$extended$reader$IndexingReader$;
}
})()))
{return true;
} else
{if((!G__9400.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.extended.reader.IndexingReader,G__9400);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.extended.reader.IndexingReader,G__9400);
}
})())?[cljs.core.str(", on line: "),cljs.core.str(cljs.extended.reader.get_line_number.call(null,rdr)),cljs.core.str(", on column: "),cljs.core.str(cljs.extended.reader.get_column_number.call(null,rdr))].join(''):null))].join('')));
};
var reader_error = function (rdr,var_args){
var msg = null;if (arguments.length > 1) {
  msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return reader_error__delegate.call(this,rdr,msg);};
reader_error.cljs$lang$maxFixedArity = 1;
reader_error.cljs$lang$applyTo = (function (arglist__9492){
var rdr = cljs.core.first(arglist__9492);
var msg = cljs.core.rest(arglist__9492);
return reader_error__delegate(rdr,msg);
});
reader_error.cljs$core$IFn$_invoke$arity$variadic = reader_error__delegate;
return reader_error;
})()
;
cljs.extended.reader.macro_terminating_QMARK_ = (function macro_terminating_QMARK_(ch){var and__6486__auto__ = !((ch === "#"));if(and__6486__auto__)
{var and__6486__auto____$1 = !((ch === "'"));if(and__6486__auto____$1)
{var and__6486__auto____$2 = !((ch === ":"));if(and__6486__auto____$2)
{return cljs.extended.reader.macros.call(null,ch);
} else
{return and__6486__auto____$2;
}
} else
{return and__6486__auto____$1;
}
} else
{return and__6486__auto__;
}
});
cljs.extended.reader.read_token = (function read_token(rdr,initch){var sb = (new goog.string.StringBuffer(initch));var ch = cljs.extended.reader.read_char.call(null,rdr);while(true){
if(((ch == null)) || (cljs.extended.reader.whitespace_QMARK_.call(null,ch)) || (cljs.extended.reader.macro_terminating_QMARK_.call(null,ch)))
{cljs.extended.reader.unread.call(null,rdr,ch);
return sb.toString();
} else
{{
var G__9493 = (function (){sb.append(ch);
return sb;
})();
var G__9494 = cljs.extended.reader.read_char.call(null,rdr);
sb = G__9493;
ch = G__9494;
continue;
}
}
break;
}
});
/**
* Reads to the end of a line and returns the line.
*/
cljs.extended.reader.read_line = (function read_line(rdr){var sb = (new goog.string.StringBuffer());var ch = cljs.extended.reader.read_char.call(null,rdr);while(true){
if(((ch == null)) && (cljs.core._EQ_.call(null,0,sb.getLength())))
{return null;
} else
{if(((ch === "\n")) || ((ch === "\r")) || ((ch == null)))
{return sb.toString();
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{{
var G__9495 = (function (){sb.append(ch);
return sb;
})();
var G__9496 = cljs.extended.reader.read_char.call(null,rdr);
sb = G__9495;
ch = G__9496;
continue;
}
} else
{return null;
}
}
}
break;
}
});
cljs.extended.reader.line_seq = (function line_seq(rdr){var temp__4092__auto__ = cljs.extended.reader.read_line.call(null,rdr);if(cljs.core.truth_(temp__4092__auto__))
{var line = temp__4092__auto__;return cljs.core.cons.call(null,line,(new cljs.core.LazySeq(null,((function (line,temp__4092__auto__){
return (function (){return line_seq.call(null,rdr);
});})(line,temp__4092__auto__))
,null,null)));
} else
{return null;
}
});
/**
* Advances the reader to the end of a line. Returns the reader
*/
cljs.extended.reader.skip_line = (function skip_line(reader,_){while(true){
var ch = cljs.extended.reader.read_char.call(null,reader);if(((ch === "\n")) || ((ch === "\r")) || ((ch == null)))
{return reader;
} else
{{
continue;
}
}
break;
}
});
cljs.extended.reader.int_pattern = cljs.core.re_pattern.call(null,"^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?$");
cljs.extended.reader.ratio_pattern = cljs.core.re_pattern.call(null,"([-+]?[0-9]+)/([0-9]+)");
cljs.extended.reader.float_pattern = cljs.core.re_pattern.call(null,"([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.extended.reader.re_find_STAR_ = (function re_find_STAR_(re,s){var matches = re.exec(s);if((matches == null))
{return null;
} else
{if((matches.length === 1))
{return (matches[0]);
} else
{return matches;
}
}
});
cljs.extended.reader.match_int = (function match_int(s){var groups = cljs.extended.reader.re_find_STAR_.call(null,cljs.extended.reader.int_pattern,s);var group3 = (groups[2]);if(!(((group3 == null)) || ((group3.length < 1))))
{return 0;
} else
{var negate = ((("-" === (groups[1])))?-1:1);var a = (cljs.core.truth_((groups[3]))?[(groups[3]),10]:(cljs.core.truth_((groups[4]))?[(groups[4]),16]:(cljs.core.truth_((groups[5]))?[(groups[5]),8]:(cljs.core.truth_((groups[7]))?[(groups[7]),parseInt((groups[7]))]:((new cljs.core.Keyword(null,"default","default",2558708147))?[null,null]:null)))));var n = (a[0]);var radix = (a[1]);if((n == null))
{return null;
} else
{return (negate * parseInt(n,radix));
}
}
});
cljs.extended.reader.match_ratio = (function match_ratio(s){var groups = cljs.extended.reader.re_find_STAR_.call(null,cljs.extended.reader.ratio_pattern,s);var numinator = (groups[1]);var denominator = (groups[2]);return (parseInt(numinator) / parseInt(denominator));
});
cljs.extended.reader.match_float = (function match_float(s){return parseFloat(s);
});
cljs.extended.reader.re_matches_STAR_ = (function re_matches_STAR_(re,s){var matches = re.exec(s);if((!((matches == null))) && (((matches[0]) === s)))
{if((matches.length === 1))
{return (matches[0]);
} else
{return matches;
}
} else
{return null;
}
});
cljs.extended.reader.match_number = (function match_number(s){if(cljs.core.truth_(cljs.extended.reader.re_matches_STAR_.call(null,cljs.extended.reader.int_pattern,s)))
{return cljs.extended.reader.match_int.call(null,s);
} else
{if(cljs.core.truth_(cljs.extended.reader.re_matches_STAR_.call(null,cljs.extended.reader.ratio_pattern,s)))
{return cljs.extended.reader.match_ratio.call(null,s);
} else
{if(cljs.core.truth_(cljs.extended.reader.re_matches_STAR_.call(null,cljs.extended.reader.float_pattern,s)))
{return cljs.extended.reader.match_float.call(null,s);
} else
{return null;
}
}
}
});
cljs.extended.reader.escape_char_map = (function escape_char_map(c){if((c === "t"))
{return "\t";
} else
{if((c === "r"))
{return "\r";
} else
{if((c === "n"))
{return "\n";
} else
{if((c === "\\"))
{return "\\";
} else
{if((c === "\""))
{return "\"";
} else
{if((c === "b"))
{return "\b";
} else
{if((c === "f"))
{return "\f";
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return null;
} else
{return null;
}
}
}
}
}
}
}
}
});
cljs.extended.reader.read_2_chars = (function read_2_chars(reader){return (new goog.string.StringBuffer(cljs.extended.reader.read_char.call(null,reader),cljs.extended.reader.read_char.call(null,reader))).toString();
});
cljs.extended.reader.read_4_chars = (function read_4_chars(reader){return (new goog.string.StringBuffer(cljs.extended.reader.read_char.call(null,reader),cljs.extended.reader.read_char.call(null,reader),cljs.extended.reader.read_char.call(null,reader),cljs.extended.reader.read_char.call(null,reader))).toString();
});
cljs.extended.reader.unicode_2_pattern = cljs.core.re_pattern.call(null,"[0-9A-Fa-f]{2}");
cljs.extended.reader.octal_pattern = cljs.core.re_pattern.call(null,"[0-7]{1,3}");
cljs.extended.reader.unicode_4_pattern = cljs.core.re_pattern.call(null,"[0-9A-Fa-f]{4}");
cljs.extended.reader.validate_unicode_escape = (function validate_unicode_escape(unicode_pattern,reader,escape_char,unicode_str){if(cljs.core.truth_(cljs.core.re_matches.call(null,unicode_pattern,unicode_str)))
{return unicode_str;
} else
{return cljs.extended.reader.reader_error.call(null,reader,"Unexpected unicode escape \\",escape_char,unicode_str);
}
});
/**
* @param {...*} var_args
*/
cljs.extended.reader.make_unicode_char = (function() { 
var make_unicode_char__delegate = function (code_str,p__9401){var vec__9403 = p__9401;var base = cljs.core.nth.call(null,vec__9403,0,null);var base__$1 = (function (){var or__6498__auto__ = base;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return 16;
}
})();var code = parseInt(code_str,base__$1);return String.fromCharCode(code);
};
var make_unicode_char = function (code_str,var_args){
var p__9401 = null;if (arguments.length > 1) {
  p__9401 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return make_unicode_char__delegate.call(this,code_str,p__9401);};
make_unicode_char.cljs$lang$maxFixedArity = 1;
make_unicode_char.cljs$lang$applyTo = (function (arglist__9497){
var code_str = cljs.core.first(arglist__9497);
var p__9401 = cljs.core.rest(arglist__9497);
return make_unicode_char__delegate(code_str,p__9401);
});
make_unicode_char.cljs$core$IFn$_invoke$arity$variadic = make_unicode_char__delegate;
return make_unicode_char;
})()
;
cljs.extended.reader.escape_char = (function escape_char(buffer,reader){var ch = cljs.extended.reader.read_char.call(null,reader);var mapresult = cljs.extended.reader.escape_char_map.call(null,ch);if(cljs.core.truth_(mapresult))
{return mapresult;
} else
{if((ch === "x"))
{return cljs.extended.reader.make_unicode_char.call(null,cljs.extended.reader.validate_unicode_escape.call(null,cljs.extended.reader.unicode_2_pattern,reader,ch,cljs.extended.reader.read_2_chars.call(null,reader)));
} else
{if((ch === "u"))
{return cljs.extended.reader.make_unicode_char.call(null,cljs.extended.reader.validate_unicode_escape.call(null,cljs.extended.reader.unicode_4_pattern,reader,ch,cljs.extended.reader.read_4_chars.call(null,reader)));
} else
{if(cljs.extended.reader.numeric_QMARK_.call(null,ch))
{return String.fromCharCode(ch);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.extended.reader.reader_error.call(null,reader,"Unexpected unicode escape \\",ch);
} else
{return null;
}
}
}
}
}
});
/**
* Read until first character that doesn't match pred, returning
* char.
*/
cljs.extended.reader.read_past = (function read_past(pred,rdr){var ch = cljs.extended.reader.read_char.call(null,rdr);while(true){
if(cljs.core.truth_(pred.call(null,ch)))
{{
var G__9498 = cljs.extended.reader.read_char.call(null,rdr);
ch = G__9498;
continue;
}
} else
{return ch;
}
break;
}
});
cljs.extended.reader.read_delimited_list = (function read_delimited_list(delim,rdr,recursive_QMARK_){var a = cljs.core.transient$.call(null,cljs.core.PersistentVector.EMPTY);while(true){
var ch = cljs.extended.reader.read_past.call(null,cljs.extended.reader.whitespace_QMARK_,rdr);if(cljs.core.truth_(ch))
{} else
{cljs.extended.reader.reader_error.call(null,rdr,"EOF while reading");
}
if((delim === ch))
{return cljs.core.persistent_BANG_.call(null,a);
} else
{var temp__4090__auto__ = cljs.extended.reader.macros.call(null,ch);if(cljs.core.truth_(temp__4090__auto__))
{var macrofn = temp__4090__auto__;var mret = macrofn.call(null,rdr,ch);{
var G__9499 = (((mret === rdr))?a:cljs.core.conj_BANG_.call(null,a,mret));
a = G__9499;
continue;
}
} else
{cljs.extended.reader.unread.call(null,rdr,ch);
var o = cljs.extended.reader.read.call(null,rdr,true,null,recursive_QMARK_);{
var G__9500 = (((o === rdr))?a:cljs.core.conj_BANG_.call(null,a,o));
a = G__9500;
continue;
}
}
}
break;
}
});
cljs.extended.reader.not_implemented = (function not_implemented(rdr,ch){return cljs.extended.reader.reader_error.call(null,rdr,"Reader for ",ch," not implemented yet");
});
cljs.extended.reader.read_dispatch = (function read_dispatch(rdr,_){var ch = cljs.extended.reader.read_char.call(null,rdr);var dm = cljs.extended.reader.dispatch_macros.call(null,ch);if(cljs.core.truth_(dm))
{return dm.call(null,rdr,_);
} else
{var temp__4090__auto__ = cljs.extended.reader.maybe_read_tagged_type.call(null,rdr,ch);if(cljs.core.truth_(temp__4090__auto__))
{var obj = temp__4090__auto__;return obj;
} else
{return cljs.extended.reader.reader_error.call(null,rdr,"No dispatch macro for ",ch);
}
}
});
cljs.extended.reader.read_unmatched_delimiter = (function read_unmatched_delimiter(rdr,ch){return cljs.extended.reader.reader_error.call(null,rdr,"Unmatched delimiter ",ch);
});
cljs.extended.reader.maybe_get_pos = (function maybe_get_pos(rdr){if((function (){var G__9405 = rdr;if(G__9405)
{var bit__7148__auto__ = null;if(cljs.core.truth_((function (){var or__6498__auto__ = bit__7148__auto__;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return G__9405.cljs$extended$reader$IndexingReader$;
}
})()))
{return true;
} else
{if((!G__9405.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.extended.reader.IndexingReader,G__9405);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.extended.reader.IndexingReader,G__9405);
}
})())
{return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),cljs.extended.reader.get_line_number.call(null,rdr),new cljs.core.Keyword(null,"column","column",3954034376),(cljs.extended.reader.get_column_number.call(null,rdr) - 1)], null);
} else
{return null;
}
});
cljs.extended.reader.prep_meta = (function prep_meta(rdr,pos,source){if(cljs.core.truth_(pos))
{return cljs.core.merge.call(null,pos,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"end-line","end-line",2693041432),cljs.extended.reader.get_line_number.call(null,rdr),new cljs.core.Keyword(null,"end-column","end-column",3799845882),cljs.extended.reader.get_column_number.call(null,rdr),new cljs.core.Keyword(null,"source","source",4412365709),source], null));
} else
{return null;
}
});
cljs.extended.reader.with_source_log = (function with_source_log(rdr,f,prefix){if(cljs.core._EQ_.call(null,cljs.extended.reader.SourceLoggingPushbackReader,cljs.core.type.call(null,rdr)))
{var frame = rdr.source_log_frames;var new_frame = cljs.core.atom.call(null,cljs.core.assoc_in.call(null,cljs.core.deref.call(null,frame),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"offset","offset",4289091589)], null),new cljs.core.Keyword(null,"buffer","buffer",3930752946).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,frame)).getLength()));var ret = f.call(null);var source = [cljs.core.str(prefix),cljs.core.str(cljs.extended.reader.peek_source_log.call(null,new_frame))].join('');return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ret,source], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null),null], null);
}
});
cljs.extended.reader.read_list = (function read_list(rdr,_){var pos = cljs.extended.reader.maybe_get_pos.call(null,rdr);var vec__9407 = cljs.extended.reader.with_source_log.call(null,rdr,((function (pos){
return (function (){return cljs.extended.reader.read_delimited_list.call(null,")",rdr,true);
});})(pos))
,"(");var the_list = cljs.core.nth.call(null,vec__9407,0,null);var source = cljs.core.nth.call(null,vec__9407,1,null);return cljs.core.with_meta.call(null,cljs.core.apply.call(null,cljs.core.list,the_list),cljs.extended.reader.prep_meta.call(null,rdr,pos,source));
});
cljs.extended.reader.read_comment = cljs.extended.reader.skip_line;
cljs.extended.reader.read_vector = (function read_vector(rdr,_){var pos = cljs.extended.reader.maybe_get_pos.call(null,rdr);var vec__9409 = cljs.extended.reader.with_source_log.call(null,rdr,((function (pos){
return (function (){return cljs.extended.reader.read_delimited_list.call(null,"]",rdr,true);
});})(pos))
,"[");var the_vec = cljs.core.nth.call(null,vec__9409,0,null);var source = cljs.core.nth.call(null,vec__9409,1,null);return cljs.core.with_meta.call(null,cljs.core.identity.call(null,the_vec),cljs.extended.reader.prep_meta.call(null,rdr,pos,source));
});
cljs.extended.reader.read_map = (function read_map(rdr,_){var pos = cljs.extended.reader.maybe_get_pos.call(null,rdr);var vec__9411 = cljs.extended.reader.with_source_log.call(null,rdr,((function (pos){
return (function (){return cljs.extended.reader.read_delimited_list.call(null,"}",rdr,true);
});})(pos))
,"{");var l = cljs.core.nth.call(null,vec__9411,0,null);var source = cljs.core.nth.call(null,vec__9411,1,null);if(cljs.core.odd_QMARK_.call(null,cljs.core.count.call(null,l)))
{cljs.extended.reader.reader_error.call(null,rdr,"Map literal must contain an even number of forms");
} else
{}
return cljs.core.with_meta.call(null,cljs.core.apply.call(null,cljs.core.hash_map,l),cljs.extended.reader.prep_meta.call(null,rdr,pos,source));
});
cljs.extended.reader.read_number = (function read_number(reader,initch){var buffer = (new goog.string.StringBuffer(initch));var ch = cljs.extended.reader.read_char.call(null,reader);while(true){
if(cljs.core.truth_((function (){var or__6498__auto__ = (ch == null);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = cljs.extended.reader.whitespace_QMARK_.call(null,ch);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{return cljs.extended.reader.macros.call(null,ch);
}
}
})()))
{cljs.extended.reader.unread.call(null,reader,ch);
var s = buffer.toString();var or__6498__auto__ = cljs.extended.reader.match_number.call(null,s);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return cljs.extended.reader.reader_error.call(null,reader,"Invalid number format [",s,"]");
}
} else
{{
var G__9501 = (function (){buffer.append(ch);
return buffer;
})();
var G__9502 = cljs.extended.reader.read_char.call(null,reader);
buffer = G__9501;
ch = G__9502;
continue;
}
}
break;
}
});
cljs.extended.reader.read_string_STAR_ = (function read_string_STAR_(reader,_){var buffer = (new goog.string.StringBuffer());var ch = cljs.extended.reader.read_char.call(null,reader);while(true){
if((ch == null))
{return cljs.extended.reader.reader_error.call(null,reader,"EOF while reading");
} else
{if(("\\" === ch))
{{
var G__9503 = (function (){buffer.append(cljs.extended.reader.escape_char.call(null,buffer,reader));
return buffer;
})();
var G__9504 = cljs.extended.reader.read_char.call(null,reader);
buffer = G__9503;
ch = G__9504;
continue;
}
} else
{if(("\"" === ch))
{return buffer.toString();
} else
{if(new cljs.core.Keyword(null,"default","default",2558708147))
{{
var G__9505 = (function (){buffer.append(ch);
return buffer;
})();
var G__9506 = cljs.extended.reader.read_char.call(null,reader);
buffer = G__9505;
ch = G__9506;
continue;
}
} else
{return null;
}
}
}
}
break;
}
});
cljs.extended.reader.special_symbols = (function special_symbols(t,not_found){if((t === "nil"))
{return null;
} else
{if((t === "true"))
{return true;
} else
{if((t === "false"))
{return false;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return not_found;
} else
{return null;
}
}
}
}
});
cljs.extended.reader.parse_symbol = (function parse_symbol(token){if(cljs.core.truth_(goog.string.contains(token,"/")))
{return cljs.core.symbol.call(null,cljs.core.subs.call(null,token,0,token.indexOf("/")),cljs.core.subs.call(null,token,(token.indexOf("/") + 1),token.length));
} else
{return cljs.extended.reader.special_symbols.call(null,token,cljs.core.symbol.call(null,token));
}
});
cljs.extended.reader.read_symbol = (function read_symbol(reader,initch){var pos = cljs.extended.reader.maybe_get_pos.call(null,reader);var vec__9414 = cljs.extended.reader.with_source_log.call(null,reader,((function (pos){
return (function (){return cljs.extended.reader.read_token.call(null,reader,initch);
});})(pos))
,initch);var token = cljs.core.nth.call(null,vec__9414,0,null);var source = cljs.core.nth.call(null,vec__9414,1,null);if((function (){var G__9415 = token;if(G__9415)
{var bit__7148__auto__ = (G__9415.cljs$lang$protocol_mask$partition0$ & 262144);if((bit__7148__auto__) || (G__9415.cljs$core$IWithMeta$))
{return true;
} else
{if((!G__9415.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9415);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9415);
}
})())
{return cljs.core.with_meta.call(null,cljs.extended.reader.parse_symbol.call(null,token),cljs.extended.reader.prep_meta.call(null,reader,pos,source));
} else
{return cljs.extended.reader.parse_symbol.call(null,token);
}
});
cljs.extended.reader.read_keyword = (function read_keyword(reader,initch){var tok = cljs.extended.reader.read_token.call(null,reader,cljs.extended.reader.read_char.call(null,reader));var a = cljs.extended.reader.re_matches_STAR_.call(null,cljs.extended.reader.symbol_pattern,tok);var token = (a[0]);var ns = (a[1]);var name = (a[2]);if(((!((void 0 === ns))) && ((ns.substring((ns.length - 2),ns.length) === ":/"))) || (((name[(name.length - 1)]) === ":")) || (!((token.indexOf("::",1) === -1))))
{return cljs.extended.reader.reader_error.call(null,reader,"Invalid token: ",token);
} else
{if((!((ns == null))) && ((ns.length > 0)))
{return cljs.core.keyword.call(null,ns.substring(0,ns.indexOf("/")),name);
} else
{return cljs.core.keyword.call(null,token.substring(1));
}
}
});
cljs.extended.reader.desugar_meta = (function desugar_meta(f){if((f instanceof cljs.core.Symbol))
{return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",1014018828),f], null);
} else
{if(typeof f === 'string')
{return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tag","tag",1014018828),f], null);
} else
{if((f instanceof cljs.core.Keyword))
{return new cljs.core.PersistentArrayMap.fromArray([f,true], true, false);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return f;
} else
{return null;
}
}
}
}
});
cljs.extended.reader.wrapping_reader = (function wrapping_reader(sym){return (function (rdr,_){return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.extended.reader.read.call(null,rdr,true,null,true)),sym);
});
});
cljs.extended.reader.throwing_reader = (function throwing_reader(msg){return (function (rdr,_){return cljs.extended.reader.reader_error.call(null,rdr,msg);
});
});
cljs.extended.reader.read_meta = (function read_meta(rdr,_){var vec__9419 = (((function (){var G__9420 = rdr;if(G__9420)
{var bit__7148__auto__ = null;if(cljs.core.truth_((function (){var or__6498__auto__ = bit__7148__auto__;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return G__9420.cljs$extended$reader$IndexingReader$;
}
})()))
{return true;
} else
{if((!G__9420.cljs$lang$protocol_mask$partition$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.extended.reader.IndexingReader,G__9420);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.extended.reader.IndexingReader,G__9420);
}
})())?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.extended.reader.get_line_number.call(null,rdr),(cljs.extended.reader.get_column_number.call(null,rdr) - 1)], null):null);var line = cljs.core.nth.call(null,vec__9419,0,null);var column = cljs.core.nth.call(null,vec__9419,1,null);var m = cljs.extended.reader.desugar_meta.call(null,cljs.extended.reader.read.call(null,rdr,true,null,true));if(cljs.core.map_QMARK_.call(null,m))
{} else
{cljs.extended.reader.reader_error.call(null,rdr,"Metadata must be Symbol,Keyword,String or Map");
}
var o = cljs.extended.reader.read.call(null,rdr,true,null,true);if((function (){var G__9421 = o;if(G__9421)
{var bit__7148__auto__ = (G__9421.cljs$lang$protocol_mask$partition0$ & 262144);if((bit__7148__auto__) || (G__9421.cljs$core$IWithMeta$))
{return true;
} else
{if((!G__9421.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9421);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9421);
}
})())
{var m__$1 = (cljs.core.truth_((function (){var and__6486__auto__ = line;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.seq_QMARK_.call(null,o);
} else
{return and__6486__auto__;
}
})())?cljs.core.assoc.call(null,m,new cljs.core.Keyword(null,"line","line",1017226086),line,new cljs.core.Keyword(null,"column","column",3954034376),column):m);return cljs.core.with_meta.call(null,o,cljs.core.merge.call(null,cljs.core.meta.call(null,o),m__$1));
} else
{return cljs.extended.reader.reader_error.call(null,rdr,"Metadata can only be applied to IWithMetas");
}
});
cljs.extended.reader.UNQUOTE = new cljs.core.Keyword(null,"__thisInternalKeywordRepresentsUnquoteToTheReader__","__thisInternalKeywordRepresentsUnquoteToTheReader__",2893248321);
cljs.extended.reader.UNQUOTE_SPLICING = new cljs.core.Keyword(null,"__thisInternalKeywordRepresentsUnquoteSplicingToTheReader__","__thisInternalKeywordRepresentsUnquoteSplicingToTheReader__",556409224);
cljs.extended.reader._STAR_gensym_env_STAR_ = cljs.core.atom.call(null,null);
cljs.extended.reader._STAR_arg_env_STAR_ = cljs.core.atom.call(null,null);
cljs.extended.reader.isUnquote_QMARK_ = (function isUnquote_QMARK_(form){var and__6486__auto__ = (function (){var G__9425 = form;if(G__9425)
{var bit__7148__auto__ = (G__9425.cljs$lang$protocol_mask$partition0$ & 64);if((bit__7148__auto__) || (G__9425.cljs$core$ISeq$))
{return true;
} else
{if((!G__9425.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISeq,G__9425);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISeq,G__9425);
}
})();if(and__6486__auto__)
{return cljs.core._EQ_.call(null,cljs.core.first.call(null,form),cljs.extended.reader.UNQUOTE);
} else
{return and__6486__auto__;
}
});
cljs.extended.reader.isUnquoteSplicing_QMARK_ = (function isUnquoteSplicing_QMARK_(form){var and__6486__auto__ = (function (){var G__9429 = form;if(G__9429)
{var bit__7148__auto__ = (G__9429.cljs$lang$protocol_mask$partition0$ & 64);if((bit__7148__auto__) || (G__9429.cljs$core$ISeq$))
{return true;
} else
{if((!G__9429.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISeq,G__9429);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISeq,G__9429);
}
})();if(and__6486__auto__)
{return cljs.core._EQ_.call(null,cljs.core.first.call(null,form),cljs.extended.reader.UNQUOTE_SPLICING);
} else
{return and__6486__auto__;
}
});
cljs.extended.reader.sqExpandList = (function sqExpandList(sq){return cljs.core.doall.call(null,(function (){var iter__7215__auto__ = (function iter__9434(s__9435){return (new cljs.core.LazySeq(null,(function (){var s__9435__$1 = s__9435;while(true){
var temp__4092__auto__ = cljs.core.seq.call(null,s__9435__$1);if(temp__4092__auto__)
{var s__9435__$2 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__9435__$2))
{var c__7213__auto__ = cljs.core.chunk_first.call(null,s__9435__$2);var size__7214__auto__ = cljs.core.count.call(null,c__7213__auto__);var b__9437 = cljs.core.chunk_buffer.call(null,size__7214__auto__);if((function (){var i__9436 = 0;while(true){
if((i__9436 < size__7214__auto__))
{var item = cljs.core._nth.call(null,c__7213__auto__,i__9436);cljs.core.chunk_append.call(null,b__9437,((cljs.extended.reader.isUnquote_QMARK_.call(null,item))?cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.second.call(null,item)),new cljs.core.Symbol(null,"list","list",-1637209513,null)):((cljs.extended.reader.isUnquoteSplicing_QMARK_.call(null,item))?cljs.core.second.call(null,item):((new cljs.core.Keyword(null,"else","else",1017020587))?cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.extended.reader.syntaxQuote.call(null,item)),new cljs.core.Symbol(null,"list","list",-1637209513,null)):null))));
{
var G__9507 = (i__9436 + 1);
i__9436 = G__9507;
continue;
}
} else
{return true;
}
break;
}
})())
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9437),iter__9434.call(null,cljs.core.chunk_rest.call(null,s__9435__$2)));
} else
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9437),null);
}
} else
{var item = cljs.core.first.call(null,s__9435__$2);return cljs.core.cons.call(null,((cljs.extended.reader.isUnquote_QMARK_.call(null,item))?cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.second.call(null,item)),new cljs.core.Symbol(null,"list","list",-1637209513,null)):((cljs.extended.reader.isUnquoteSplicing_QMARK_.call(null,item))?cljs.core.second.call(null,item):((new cljs.core.Keyword(null,"else","else",1017020587))?cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.extended.reader.syntaxQuote.call(null,item)),new cljs.core.Symbol(null,"list","list",-1637209513,null)):null))),iter__9434.call(null,cljs.core.rest.call(null,s__9435__$2)));
}
} else
{return null;
}
break;
}
}),null,null));
});return iter__7215__auto__.call(null,sq);
})());
});
cljs.extended.reader.syntaxQuote = (function syntaxQuote(form){if(cljs.core.truth_(cljs.core.get.call(null,cljs.extended.reader.specials,form)))
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,form),new cljs.core.Symbol(null,"quote","quote",-1532577739,null));
} else
{if((form instanceof cljs.core.Symbol))
{var sym = form;var name = cljs.core.name.call(null,sym);var ns = cljs.core.namespace.call(null,sym);if((cljs.core.not.call(null,ns)) && (cljs.core._EQ_.call(null,"#",cljs.core.last.call(null,name))))
{var new_name = cljs.core.subs.call(null,name,0,(cljs.core.count.call(null,name) - 1));var gmap = cljs.core.deref.call(null,cljs.extended.reader._STAR_gensym_env_STAR_);if(cljs.core.not.call(null,gmap))
{cljs.extended.reader.reader_error.call(null,null,"Gensym literal not in syntax-quote");
} else
{}
var gs = (function (){var or__6498__auto__ = cljs.core.get.call(null,gmap,sym);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return cljs.core.gensym.call(null,[cljs.core.str(new_name),cljs.core.str("__auto__")].join(''));
}
})();cljs.core.swap_BANG_.call(null,cljs.extended.reader._STAR_gensym_env_STAR_,cljs.core.assoc,sym,gs);
return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,gs),new cljs.core.Symbol(null,"quote","quote",-1532577739,null));
} else
{if((cljs.core.not.call(null,ns)) && (cljs.core._EQ_.call(null,".",cljs.core.last.call(null,name))))
{throw (new Error("Syntax quote with no namespace ending with . not supported"));
} else
{if((cljs.core.not.call(null,ns)) && (cljs.core._EQ_.call(null,".",cljs.core.first.call(null,name))))
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,sym),new cljs.core.Symbol(null,"quote","quote",-1532577739,null));
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{throw (new Error("Syntax quote resolving existing var not supported"));
} else
{return null;
}
}
}
}
} else
{if(cljs.extended.reader.isUnquote_QMARK_.call(null,form))
{return cljs.core.second.call(null,form);
} else
{if(cljs.extended.reader.isUnquoteSplicing_QMARK_.call(null,form))
{throw (new Error("Reader ~@ splice not in list"));
} else
{if((form == null))
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,form),new cljs.core.Symbol(null,"quote","quote",-1532577739,null));
} else
{if((function (){var G__9446 = form;if(G__9446)
{var bit__7148__auto__ = (G__9446.cljs$lang$protocol_mask$partition0$ & 8);if((bit__7148__auto__) || (G__9446.cljs$core$ICollection$))
{return true;
} else
{if((!G__9446.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ICollection,G__9446);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ICollection,G__9446);
}
})())
{if((function (){var G__9447 = form;if(G__9447)
{var bit__7148__auto__ = (G__9447.cljs$lang$protocol_mask$partition0$ & 67108864);if((bit__7148__auto__) || (G__9447.cljs$core$IRecord$))
{return true;
} else
{if((!G__9447.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IRecord,G__9447);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IRecord,G__9447);
}
})())
{return form;
} else
{if((function (){var G__9448 = form;if(G__9448)
{var bit__7148__auto__ = (G__9448.cljs$lang$protocol_mask$partition0$ & 1024);if((bit__7148__auto__) || (G__9448.cljs$core$IMap$))
{return true;
} else
{if((!G__9448.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IMap,G__9448);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IMap,G__9448);
}
})())
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.cons.call(null,new cljs.core.Symbol(null,"concat","concat",1299640525,null),cljs.extended.reader.sqExpandList.call(null,cljs.core.apply.call(null,cljs.core.concat,cljs.core.seq.call(null,form))))),new cljs.core.Symbol(null,"seq","seq",-1640417768,null))),new cljs.core.Symbol(null,"hash-map","hash-map",-1493492266,null)),new cljs.core.Symbol(null,"apply","apply",-1547502297,null));
} else
{if((function (){var G__9449 = form;if(G__9449)
{var bit__7148__auto__ = (G__9449.cljs$lang$protocol_mask$partition0$ & 16384);if((bit__7148__auto__) || (G__9449.cljs$core$IVector$))
{return true;
} else
{if((!G__9449.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IVector,G__9449);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IVector,G__9449);
}
})())
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.cons.call(null,new cljs.core.Symbol(null,"concat","concat",1299640525,null),cljs.extended.reader.sqExpandList.call(null,form))),new cljs.core.Symbol(null,"seq","seq",-1640417768,null))),new cljs.core.Symbol(null,"vector","vector",1834048252,null)),new cljs.core.Symbol(null,"apply","apply",-1547502297,null));
} else
{if((function (){var G__9450 = form;if(G__9450)
{var bit__7148__auto__ = (G__9450.cljs$lang$protocol_mask$partition0$ & 4096);if((bit__7148__auto__) || (G__9450.cljs$core$ISet$))
{return true;
} else
{if((!G__9450.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISet,G__9450);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISet,G__9450);
}
})())
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.cons.call(null,new cljs.core.Symbol(null,"concat","concat",1299640525,null),cljs.extended.reader.sqExpandList.call(null,cljs.core.seq.call(null,form)))),new cljs.core.Symbol(null,"seq","seq",-1640417768,null))),new cljs.core.Symbol(null,"hash-set","hash-set",-1493486372,null)),new cljs.core.Symbol(null,"apply","apply",-1547502297,null));
} else
{if((function (){var or__6498__auto__ = (function (){var G__9452 = form;if(G__9452)
{var bit__7148__auto__ = (G__9452.cljs$lang$protocol_mask$partition0$ & 64);if((bit__7148__auto__) || (G__9452.cljs$core$ISeq$))
{return true;
} else
{if((!G__9452.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISeq,G__9452);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.ISeq,G__9452);
}
})();if(or__6498__auto__)
{return or__6498__auto__;
} else
{var G__9453 = form;if(G__9453)
{var bit__7148__auto__ = (G__9453.cljs$lang$protocol_mask$partition0$ & 33554432);if((bit__7148__auto__) || (G__9453.cljs$core$IList$))
{return true;
} else
{if((!G__9453.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IList,G__9453);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IList,G__9453);
}
}
})())
{var temp__4090__auto__ = cljs.core.seq.call(null,form);if(temp__4090__auto__)
{var sq = temp__4090__auto__;return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.cons.call(null,new cljs.core.Symbol(null,"concat","concat",1299640525,null),cljs.extended.reader.sqExpandList.call(null,sq))),new cljs.core.Symbol(null,"seq","seq",-1640417768,null));
} else
{return cljs.core.cons.call(null,new cljs.core.Symbol(null,"list","list",-1637209513,null),null);
}
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{throw (new Error("Unknown Collection type"));
} else
{return null;
}
}
}
}
}
}
} else
{if(((form instanceof cljs.core.Keyword)) || (typeof form === 'number') || (typeof form === 'string'))
{return form;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,form),new cljs.core.Symbol(null,"quote","quote",-1532577739,null));
} else
{return null;
}
}
}
}
}
}
}
}
});
cljs.extended.reader.read_syntax_quote = (function read_syntax_quote(rdr,_){var _STAR_gensym_env_STAR_9455 = cljs.extended.reader._STAR_gensym_env_STAR_;try{cljs.extended.reader._STAR_gensym_env_STAR_ = cljs.core.atom.call(null,cljs.core.PersistentArrayMap.EMPTY);
var form = cljs.extended.reader.read.call(null,rdr,true,null,true);return cljs.extended.reader.syntaxQuote.call(null,form);
}finally {cljs.extended.reader._STAR_gensym_env_STAR_ = _STAR_gensym_env_STAR_9455;
}});
cljs.extended.reader.read_unquote = (function read_unquote(rdr,_){var ch = cljs.extended.reader.read_char.call(null,rdr);if(cljs.core._EQ_.call(null,null,ch))
{return cljs.extended.reader.reader_error.call(null,rdr,"EOF while reading unquote character");
} else
{if(cljs.core._EQ_.call(null,"@",ch))
{var o = cljs.extended.reader.read.call(null,rdr,true,null,true);return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,o),cljs.extended.reader.UNQUOTE_SPLICING);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{cljs.extended.reader.unread.call(null,rdr,ch);
var o = cljs.extended.reader.read.call(null,rdr,true,null,true);return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,o),cljs.extended.reader.UNQUOTE);
} else
{return null;
}
}
}
});
cljs.extended.reader.read_character = (function read_character(rdr,_){var ch = cljs.extended.reader.read_char.call(null,rdr);if(cljs.core._EQ_.call(null,null,ch))
{cljs.extended.reader.reader_error.call(null,rdr,"EOF while reading character constant");
} else
{}
var token = cljs.extended.reader.read_token.call(null,rdr,ch);if(cljs.core._EQ_.call(null,1,cljs.core.count.call(null,token)))
{return token;
} else
{if(cljs.core._EQ_.call(null,"newline",token))
{return "\n";
} else
{if(cljs.core._EQ_.call(null,"space",token))
{return " ";
} else
{if(cljs.core._EQ_.call(null,"tab",token))
{return "\t";
} else
{if(cljs.core._EQ_.call(null,"backspace",token))
{return "\b";
} else
{if(cljs.core._EQ_.call(null,"formfeed",token))
{return "\f";
} else
{if(cljs.core._EQ_.call(null,"return",token))
{return "\r";
} else
{if(cljs.core._EQ_.call(null,"u",cljs.core.first.call(null,token)))
{var chars = cljs.core.apply.call(null,cljs.core.str,cljs.core.rest.call(null,token));cljs.extended.reader.validate_unicode_escape.call(null,cljs.extended.reader.unicode_4_pattern,rdr,"u",chars);
var c = cljs.extended.reader.make_unicode_char.call(null,chars,16);var cval = parseInt(chars,16);if(((cval >= 55296)) && ((cval <= 57343)))
{cljs.extended.reader.reader_error.call(null,rdr,"Invalid character constant: \\",token);
} else
{}
return c;
} else
{if(cljs.core._EQ_.call(null,"o",cljs.core.first.call(null,token)))
{var chars = cljs.core.apply.call(null,cljs.core.str,cljs.core.rest.call(null,token));cljs.extended.reader.validate_unicode_escape.call(null,cljs.extended.reader.octal_pattern,rdr,"o",chars);
var c = cljs.extended.reader.make_unicode_char.call(null,chars,8);var cval = parseInt(chars,8);if((cval > 255))
{cljs.extended.reader.reader_error.call(null,rdr,"Octal escape sequence must be in range [0, 377].");
} else
{}
return c;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.extended.reader.reader_error.call(null,rdr,"Unsupported character: \\",token);
} else
{return null;
}
}
}
}
}
}
}
}
}
}
});
cljs.extended.reader.garg = (function garg(n){var pre = ((cljs.core._EQ_.call(null,n,-1))?"rest":[cljs.core.str("p"),cljs.core.str(n)].join(''));return cljs.core.symbol.call(null,[cljs.core.str(cljs.core.gensym.call(null,pre)),cljs.core.str("#")].join(''));
});
cljs.extended.reader.read_fn = (function read_fn(rdr,_){if(cljs.core.truth_(cljs.core.deref.call(null,cljs.extended.reader._STAR_arg_env_STAR_)))
{cljs.extended.reader.reader_error.call(null,null,"nested #()s are not allowed");
} else
{}
var _STAR_arg_env_STAR_9462 = cljs.extended.reader._STAR_arg_env_STAR_;try{cljs.extended.reader._STAR_arg_env_STAR_ = cljs.core.atom.call(null,cljs.core.sorted_map.call(null));
cljs.extended.reader.unread.call(null,rdr,"(");
var pos = cljs.extended.reader.maybe_get_pos.call(null,rdr);var vec__9463 = cljs.extended.reader.with_source_log.call(null,rdr,((function (pos,_STAR_arg_env_STAR_9462){
return (function (){return cljs.extended.reader.read.call(null,rdr,true,null,true);
});})(pos,_STAR_arg_env_STAR_9462))
,"#");var form = cljs.core.nth.call(null,vec__9463,0,null);var source = cljs.core.nth.call(null,vec__9463,1,null);var argsyms = cljs.core.deref.call(null,cljs.extended.reader._STAR_arg_env_STAR_);var rargs = cljs.core.rseq.call(null,argsyms);var highpair = cljs.core.first.call(null,rargs);var higharg = (cljs.core.truth_(highpair)?cljs.core.key.call(null,highpair):0);var args = (((higharg > 0))?cljs.core.doall.call(null,(function (){var iter__7215__auto__ = ((function (pos,vec__9463,form,source,argsyms,rargs,highpair,higharg,_STAR_arg_env_STAR_9462){
return (function iter__9464(s__9465){return (new cljs.core.LazySeq(null,((function (pos,vec__9463,form,source,argsyms,rargs,highpair,higharg,_STAR_arg_env_STAR_9462){
return (function (){var s__9465__$1 = s__9465;while(true){
var temp__4092__auto__ = cljs.core.seq.call(null,s__9465__$1);if(temp__4092__auto__)
{var s__9465__$2 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__9465__$2))
{var c__7213__auto__ = cljs.core.chunk_first.call(null,s__9465__$2);var size__7214__auto__ = cljs.core.count.call(null,c__7213__auto__);var b__9467 = cljs.core.chunk_buffer.call(null,size__7214__auto__);if((function (){var i__9466 = 0;while(true){
if((i__9466 < size__7214__auto__))
{var i = cljs.core._nth.call(null,c__7213__auto__,i__9466);cljs.core.chunk_append.call(null,b__9467,(function (){var or__6498__auto__ = cljs.core.get.call(null,argsyms,i);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return cljs.extended.reader.garg.call(null,i);
}
})());
{
var G__9508 = (i__9466 + 1);
i__9466 = G__9508;
continue;
}
} else
{return true;
}
break;
}
})())
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9467),iter__9464.call(null,cljs.core.chunk_rest.call(null,s__9465__$2)));
} else
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9467),null);
}
} else
{var i = cljs.core.first.call(null,s__9465__$2);return cljs.core.cons.call(null,(function (){var or__6498__auto__ = cljs.core.get.call(null,argsyms,i);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return cljs.extended.reader.garg.call(null,i);
}
})(),iter__9464.call(null,cljs.core.rest.call(null,s__9465__$2)));
}
} else
{return null;
}
break;
}
});})(pos,vec__9463,form,source,argsyms,rargs,highpair,higharg,_STAR_arg_env_STAR_9462))
,null,null));
});})(pos,vec__9463,form,source,argsyms,rargs,highpair,higharg,_STAR_arg_env_STAR_9462))
;return iter__7215__auto__.call(null,cljs.core.range.call(null,1,(1 + higharg)));
})()):rargs);var restsym = cljs.core.get.call(null,argsyms,-1);var args__$1 = (cljs.core.truth_(restsym)?cljs.core.concat.call(null,args,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"&","&",-1640531489,null),restsym], null)):args);return cljs.core.with_meta.call(null,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,form),cljs.core.vec.call(null,args__$1)),new cljs.core.Symbol(null,"fn*","fn*",-1640430053,null)),cljs.extended.reader.prep_meta.call(null,rdr,pos,source));
}finally {cljs.extended.reader._STAR_arg_env_STAR_ = _STAR_arg_env_STAR_9462;
}});
cljs.extended.reader.registerArg = (function registerArg(n){var argsyms = cljs.core.deref.call(null,cljs.extended.reader._STAR_arg_env_STAR_);if(cljs.core.truth_(argsyms))
{} else
{cljs.extended.reader.reader_error.call(null,null,"arg literal not in #()");
}
var ret = cljs.core.get.call(null,argsyms,n);if(cljs.core.truth_(ret))
{return ret;
} else
{var ret__$1 = cljs.extended.reader.garg.call(null,n);cljs.core.swap_BANG_.call(null,cljs.extended.reader._STAR_arg_env_STAR_,cljs.core.assoc,n,ret__$1);
return ret__$1;
}
});
cljs.extended.reader.read_arg = (function read_arg(rdr,pct){if(cljs.core.not.call(null,cljs.core.deref.call(null,cljs.extended.reader._STAR_arg_env_STAR_)))
{return cljs.extended.reader.read_symbol.call(null,rdr,"%");
} else
{var ch = cljs.extended.reader.peek_char.call(null,rdr);if(((ch == null)) || (cljs.extended.reader.whitespace_QMARK_.call(null,ch)) || (cljs.extended.reader.macro_terminating_QMARK_.call(null,ch)))
{return cljs.extended.reader.registerArg.call(null,1);
} else
{var n = cljs.extended.reader.read.call(null,rdr,true,null,true);if(cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"&","&",-1640531489,null),n))
{return cljs.extended.reader.registerArg.call(null,-1);
} else
{if(!(typeof n === 'number'))
{return cljs.extended.reader.reader_error.call(null,rdr,"arg literal must be %, %& or %integer");
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.extended.reader.registerArg.call(null,(n | 0));
} else
{return null;
}
}
}
}
}
});
cljs.extended.reader.read_set = (function read_set(rdr,_){var pos = cljs.extended.reader.maybe_get_pos.call(null,rdr);var vec__9469 = cljs.extended.reader.with_source_log.call(null,rdr,((function (pos){
return (function (){return cljs.extended.reader.read_delimited_list.call(null,"}",rdr,true);
});})(pos))
,"#{");var the_set = cljs.core.nth.call(null,vec__9469,0,null);var source = cljs.core.nth.call(null,vec__9469,1,null);return cljs.core.with_meta.call(null,cljs.core.identity.call(null,the_set),cljs.extended.reader.prep_meta.call(null,rdr,cljs.core.update_in.call(null,pos,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"column","column",3954034376)], null),cljs.core.dec),source));
});
cljs.extended.reader.read_regex = (function read_regex(reader){var buffer = "";var ch = cljs.extended.reader.read_char.call(null,reader);while(true){
if((ch == null))
{return cljs.extended.reader.reader_error.call(null,reader,"EOF while reading regex");
} else
{if(("\\" === ch))
{{
var G__9509 = [cljs.core.str(buffer),cljs.core.str(ch),cljs.core.str(cljs.extended.reader.read_char.call(null,reader))].join('');
var G__9510 = cljs.extended.reader.read_char.call(null,reader);
buffer = G__9509;
ch = G__9510;
continue;
}
} else
{if(("\"" === ch))
{return cljs.core.re_pattern.call(null,buffer);
} else
{if(new cljs.core.Keyword(null,"default","default",2558708147))
{{
var G__9511 = [cljs.core.str(buffer),cljs.core.str(ch)].join('');
var G__9512 = cljs.extended.reader.read_char.call(null,reader);
buffer = G__9511;
ch = G__9512;
continue;
}
} else
{return null;
}
}
}
}
break;
}
});
cljs.extended.reader.read_discard = (function read_discard(rdr,_){cljs.extended.reader.read.call(null,rdr,true,null,true);
return rdr;
});
cljs.extended.reader.macros = (function macros(c){if((c === "\""))
{return cljs.extended.reader.read_string_STAR_;
} else
{if((c === ":"))
{return cljs.extended.reader.read_keyword;
} else
{if((c === ";"))
{return cljs.extended.reader.read_comment;
} else
{if((c === "'"))
{return cljs.extended.reader.wrapping_reader.call(null,new cljs.core.Symbol(null,"quote","quote",-1532577739,null));
} else
{if((c === "@"))
{return cljs.extended.reader.wrapping_reader.call(null,new cljs.core.Symbol(null,"deref","deref",-1545057749,null));
} else
{if((c === "^"))
{return cljs.extended.reader.read_meta;
} else
{if((c === "`"))
{return cljs.extended.reader.not_implemented;
} else
{if((c === "~"))
{return cljs.extended.reader.read_unquote;
} else
{if((c === "("))
{return cljs.extended.reader.read_list;
} else
{if((c === ")"))
{return cljs.extended.reader.read_unmatched_delimiter;
} else
{if((c === "["))
{return cljs.extended.reader.read_vector;
} else
{if((c === "]"))
{return cljs.extended.reader.read_unmatched_delimiter;
} else
{if((c === "{"))
{return cljs.extended.reader.read_map;
} else
{if((c === "}"))
{return cljs.extended.reader.read_unmatched_delimiter;
} else
{if((c === "\\"))
{return cljs.extended.reader.read_character;
} else
{if((c === "%"))
{return cljs.extended.reader.read_arg;
} else
{if((c === "#"))
{return cljs.extended.reader.read_dispatch;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return null;
} else
{return null;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});
cljs.extended.reader.dispatch_macros = (function dispatch_macros(s){if((s === "{"))
{return cljs.extended.reader.read_set;
} else
{if((s === "("))
{return cljs.extended.reader.read_fn;
} else
{if((s === "<"))
{return cljs.extended.reader.throwing_reader.call(null,"Unreadable form");
} else
{if((s === "\""))
{return cljs.extended.reader.read_regex;
} else
{if((s === "!"))
{return cljs.extended.reader.read_comment;
} else
{if((s === "_"))
{return cljs.extended.reader.read_discard;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return null;
} else
{return null;
}
}
}
}
}
}
}
});
/**
* Reads the first object from a PushbackReader. Returns the object read.
* If EOF, throws if eof-is-error is true. Otherwise returns sentinel.
*/
cljs.extended.reader.read = (function() {
var read = null;
var read__1 = (function (reader){return read.call(null,reader,true,null);
});
var read__3 = (function (reader,eof_is_error,sentinel){return read.call(null,reader,eof_is_error,sentinel,false);
});
var read__4 = (function (reader,eof_is_error,sentinel,is_recursive){while(true){
var ch = cljs.extended.reader.read_char.call(null,reader);if((ch == null))
{if(cljs.core.truth_(eof_is_error))
{return cljs.extended.reader.reader_error.call(null,reader,"EOF while reading");
} else
{return sentinel;
}
} else
{if(cljs.extended.reader.whitespace_QMARK_.call(null,ch))
{{
var G__9513 = reader;
var G__9514 = eof_is_error;
var G__9515 = sentinel;
var G__9516 = is_recursive;
reader = G__9513;
eof_is_error = G__9514;
sentinel = G__9515;
is_recursive = G__9516;
continue;
}
} else
{if(cljs.extended.reader.comment_prefix_QMARK_.call(null,ch))
{{
var G__9517 = cljs.extended.reader.read_comment.call(null,reader,ch);
var G__9518 = eof_is_error;
var G__9519 = sentinel;
var G__9520 = is_recursive;
reader = G__9517;
eof_is_error = G__9518;
sentinel = G__9519;
is_recursive = G__9520;
continue;
}
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{var f = cljs.extended.reader.macros.call(null,ch);var res = (cljs.core.truth_(f)?f.call(null,reader,ch):((cljs.extended.reader.number_literal_QMARK_.call(null,reader,ch))?cljs.extended.reader.read_number.call(null,reader,ch):((new cljs.core.Keyword(null,"else","else",1017020587))?cljs.extended.reader.read_symbol.call(null,reader,ch):null)));if((res === reader))
{{
var G__9521 = reader;
var G__9522 = eof_is_error;
var G__9523 = sentinel;
var G__9524 = is_recursive;
reader = G__9521;
eof_is_error = G__9522;
sentinel = G__9523;
is_recursive = G__9524;
continue;
}
} else
{return res;
}
} else
{return null;
}
}
}
}
break;
}
});
read = function(reader,eof_is_error,sentinel,is_recursive){
switch(arguments.length){
case 1:
return read__1.call(this,reader);
case 3:
return read__3.call(this,reader,eof_is_error,sentinel);
case 4:
return read__4.call(this,reader,eof_is_error,sentinel,is_recursive);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
read.cljs$core$IFn$_invoke$arity$1 = read__1;
read.cljs$core$IFn$_invoke$arity$3 = read__3;
read.cljs$core$IFn$_invoke$arity$4 = read__4;
return read;
})()
;
/**
* Reads one object from the string s
*/
cljs.extended.reader.read_string = (function read_string(s){var r = cljs.extended.reader.string_push_back_reader.call(null,s);return cljs.extended.reader.read.call(null,r,true,null,false);
});
/**
* Reads one object indexed from the string s
*/
cljs.extended.reader.read_string_indexed = (function read_string_indexed(s){var r = cljs.extended.reader.indexing_push_back_reader.call(null,s);return cljs.extended.reader.read.call(null,r,true,null,false);
});
/**
* Reads one object indexed and source-logged for the string s (source and bounds only for colls)
*/
cljs.extended.reader.read_string_source_logged = (function read_string_source_logged(s){var r = cljs.extended.reader.source_logging_push_back_reader.call(null,s);return cljs.extended.reader.read.call(null,r,true,null,false);
});
cljs.extended.reader.zero_fill_right = (function zero_fill_right(s,width){if(cljs.core._EQ_.call(null,width,cljs.core.count.call(null,s)))
{return s;
} else
{if((width < cljs.core.count.call(null,s)))
{return s.substring(0,width);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{var b = (new goog.string.StringBuffer(s));while(true){
if((b.getLength() < width))
{{
var G__9525 = b.append("0");
b = G__9525;
continue;
}
} else
{return b.toString();
}
break;
}
} else
{return null;
}
}
}
});
cljs.extended.reader.divisible_QMARK_ = (function divisible_QMARK_(num,div){return (cljs.core.mod.call(null,num,div) === 0);
});
cljs.extended.reader.indivisible_QMARK_ = (function indivisible_QMARK_(num,div){return !(cljs.extended.reader.divisible_QMARK_.call(null,num,div));
});
cljs.extended.reader.leap_year_QMARK_ = (function leap_year_QMARK_(year){return (cljs.extended.reader.divisible_QMARK_.call(null,year,4)) && ((cljs.extended.reader.indivisible_QMARK_.call(null,year,100)) || (cljs.extended.reader.divisible_QMARK_.call(null,year,400)));
});
cljs.extended.reader.days_in_month = (function (){var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,31,28,31,30,31,30,31,31,30,31,30,31], null);var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,31,29,31,30,31,30,31,31,30,31,30,31], null);return ((function (dim_norm,dim_leap){
return (function (month,leap_year_QMARK_){return cljs.core.get.call(null,(cljs.core.truth_(leap_year_QMARK_)?dim_leap:dim_norm),month);
});
;})(dim_norm,dim_leap))
})();
cljs.extended.reader.parse_and_validate_timestamp = (function (){var timestamp = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;var check = ((function (timestamp){
return (function (low,n,high,msg){if(((low <= n)) && ((n <= high)))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str([cljs.core.str(msg),cljs.core.str(" Failed:  "),cljs.core.str(low),cljs.core.str("<="),cljs.core.str(n),cljs.core.str("<="),cljs.core.str(high)].join('')),cljs.core.str("\n"),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"<=","<=",-1640529606,null),new cljs.core.Symbol(null,"low","low",-1640424179,null),new cljs.core.Symbol(null,"n","n",-1640531417,null),new cljs.core.Symbol(null,"high","high",-1637329061,null))))].join('')));
}
return n;
});})(timestamp))
;return ((function (timestamp,check){
return (function (ts){var temp__4092__auto__ = cljs.core.map.call(null,cljs.core.vec,cljs.core.split_at.call(null,8,cljs.core.re_matches.call(null,timestamp,ts)));if(cljs.core.truth_(temp__4092__auto__))
{var vec__9474 = temp__4092__auto__;var vec__9475 = cljs.core.nth.call(null,vec__9474,0,null);var _ = cljs.core.nth.call(null,vec__9475,0,null);var years = cljs.core.nth.call(null,vec__9475,1,null);var months = cljs.core.nth.call(null,vec__9475,2,null);var days = cljs.core.nth.call(null,vec__9475,3,null);var hours = cljs.core.nth.call(null,vec__9475,4,null);var minutes = cljs.core.nth.call(null,vec__9475,5,null);var seconds = cljs.core.nth.call(null,vec__9475,6,null);var milliseconds = cljs.core.nth.call(null,vec__9475,7,null);var vec__9476 = cljs.core.nth.call(null,vec__9474,1,null);var ___$1 = cljs.core.nth.call(null,vec__9476,0,null);var ___$2 = cljs.core.nth.call(null,vec__9476,1,null);var ___$3 = cljs.core.nth.call(null,vec__9476,2,null);var V = vec__9474;var vec__9477 = cljs.core.map.call(null,((function (vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check){
return (function (v){return cljs.core.map.call(null,((function (vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check){
return (function (p1__9473_SHARP_){return parseInt(p1__9473_SHARP_,10);
});})(vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check))
,v);
});})(vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check))
,cljs.core.map.call(null,((function (vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check){
return (function (p1__9471_SHARP_,p2__9470_SHARP_){return cljs.core.update_in.call(null,p2__9470_SHARP_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [0], null),p1__9471_SHARP_);
});})(vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check))
,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.constantly.call(null,null),((function (vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check){
return (function (p1__9472_SHARP_){if(cljs.core._EQ_.call(null,p1__9472_SHARP_,"-"))
{return "-1";
} else
{return "1";
}
});})(vec__9474,vec__9475,_,years,months,days,hours,minutes,seconds,milliseconds,vec__9476,___$1,___$2,___$3,V,temp__4092__auto__,timestamp,check))
], null),V));var vec__9478 = cljs.core.nth.call(null,vec__9477,0,null);var ___$4 = cljs.core.nth.call(null,vec__9478,0,null);var y = cljs.core.nth.call(null,vec__9478,1,null);var mo = cljs.core.nth.call(null,vec__9478,2,null);var d = cljs.core.nth.call(null,vec__9478,3,null);var h = cljs.core.nth.call(null,vec__9478,4,null);var m = cljs.core.nth.call(null,vec__9478,5,null);var s = cljs.core.nth.call(null,vec__9478,6,null);var ms = cljs.core.nth.call(null,vec__9478,7,null);var vec__9479 = cljs.core.nth.call(null,vec__9477,1,null);var offset_sign = cljs.core.nth.call(null,vec__9479,0,null);var offset_hours = cljs.core.nth.call(null,vec__9479,1,null);var offset_minutes = cljs.core.nth.call(null,vec__9479,2,null);var offset = (offset_sign * ((offset_hours * 60) + offset_minutes));return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [((cljs.core.not.call(null,years))?1970:y),((cljs.core.not.call(null,months))?1:check.call(null,1,mo,12,"timestamp month field must be in range 1..12")),((cljs.core.not.call(null,days))?1:check.call(null,1,d,cljs.extended.reader.days_in_month.call(null,mo,cljs.extended.reader.leap_year_QMARK_.call(null,y)),"timestamp day field must be in range 1..last day in month")),((cljs.core.not.call(null,hours))?0:check.call(null,0,h,23,"timestamp hour field must be in range 0..23")),((cljs.core.not.call(null,minutes))?0:check.call(null,0,m,59,"timestamp minute field must be in range 0..59")),((cljs.core.not.call(null,seconds))?0:check.call(null,0,s,((cljs.core._EQ_.call(null,m,59))?60:59),"timestamp second field must be in range 0..60")),((cljs.core.not.call(null,milliseconds))?0:check.call(null,0,ms,999,"timestamp millisecond field must be in range 0..999")),offset], null);
} else
{return null;
}
});
;})(timestamp,check))
})();
cljs.extended.reader.parse_timestamp = (function parse_timestamp(ts){var temp__4090__auto__ = cljs.extended.reader.parse_and_validate_timestamp.call(null,ts);if(cljs.core.truth_(temp__4090__auto__))
{var vec__9481 = temp__4090__auto__;var years = cljs.core.nth.call(null,vec__9481,0,null);var months = cljs.core.nth.call(null,vec__9481,1,null);var days = cljs.core.nth.call(null,vec__9481,2,null);var hours = cljs.core.nth.call(null,vec__9481,3,null);var minutes = cljs.core.nth.call(null,vec__9481,4,null);var seconds = cljs.core.nth.call(null,vec__9481,5,null);var ms = cljs.core.nth.call(null,vec__9481,6,null);var offset = cljs.core.nth.call(null,vec__9481,7,null);return (new Date((Date.UTC(years,(months - 1),days,hours,minutes,seconds,ms) - ((offset * 60) * 1000))));
} else
{return cljs.extended.reader.reader_error.call(null,null,[cljs.core.str("Unrecognized date/time syntax: "),cljs.core.str(ts)].join(''));
}
});
cljs.extended.reader.read_date = (function read_date(s){if(typeof s === 'string')
{return cljs.extended.reader.parse_timestamp.call(null,s);
} else
{return cljs.extended.reader.reader_error.call(null,null,"Instance literal expects a string for its timestamp.");
}
});
cljs.extended.reader.read_queue = (function read_queue(elems){if(cljs.core.vector_QMARK_.call(null,elems))
{return cljs.core.into.call(null,(new cljs.core.PersistentQueue(null,0,null,cljs.core.PersistentVector.EMPTY,0)),elems);
} else
{return cljs.extended.reader.reader_error.call(null,null,"Queue literal expects a vector for its elements.");
}
});
cljs.extended.reader.read_uuid = (function read_uuid(uuid){if(typeof uuid === 'string')
{return (new cljs.core.UUID(uuid));
} else
{return cljs.extended.reader.reader_error.call(null,null,"UUID literal expects a string as its representation.");
}
});
cljs.extended.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null,new cljs.core.PersistentArrayMap(null, 3, ["inst",cljs.extended.reader.read_date,"uuid",cljs.extended.reader.read_uuid,"queue",cljs.extended.reader.read_queue], null));
cljs.extended.reader.maybe_read_tagged_type = (function maybe_read_tagged_type(rdr,initch){var tag = cljs.extended.reader.read_symbol.call(null,rdr,initch);var temp__4090__auto__ = cljs.core.get.call(null,cljs.core.deref.call(null,cljs.extended.reader._STAR_tag_table_STAR_),cljs.core.name.call(null,tag));if(cljs.core.truth_(temp__4090__auto__))
{var pfn = temp__4090__auto__;return pfn.call(null,cljs.extended.reader.read.call(null,rdr,true,null,false));
} else
{return cljs.extended.reader.reader_error.call(null,rdr,"Could not find tag parser for ",cljs.core.name.call(null,tag)," in ",cljs.core.pr_str.call(null,cljs.core.keys.call(null,cljs.core.deref.call(null,cljs.extended.reader._STAR_tag_table_STAR_))));
}
});
cljs.extended.reader.register_tag_parser_BANG_ = (function register_tag_parser_BANG_(tag,f){var tag__$1 = cljs.core.name.call(null,tag);var old_parser = cljs.core.get.call(null,cljs.core.deref.call(null,cljs.extended.reader._STAR_tag_table_STAR_),tag__$1);cljs.core.swap_BANG_.call(null,cljs.extended.reader._STAR_tag_table_STAR_,cljs.core.assoc,tag__$1,f);
return old_parser;
});
cljs.extended.reader.deregister_tag_parser_BANG_ = (function deregister_tag_parser_BANG_(tag){var tag__$1 = cljs.core.name.call(null,tag);var old_parser = cljs.core.get.call(null,cljs.core.deref.call(null,cljs.extended.reader._STAR_tag_table_STAR_),tag__$1);cljs.core.swap_BANG_.call(null,cljs.extended.reader._STAR_tag_table_STAR_,cljs.core.dissoc,tag__$1);
return old_parser;
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.protocols')) {
goog.provide('rewrite_clj.node.protocols');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
rewrite_clj.node.protocols.Node = (function (){var obj9333 = {};return obj9333;
})();
rewrite_clj.node.protocols.tag = (function tag(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$Node$tag$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$Node$tag$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.tag[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.tag["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Node.tag",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.printable_only_QMARK_ = (function printable_only_QMARK_(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.printable_only_QMARK_[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.printable_only_QMARK_["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Node.printable-only?",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.sexpr = (function sexpr(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$Node$sexpr$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$Node$sexpr$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.sexpr[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.sexpr["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Node.sexpr",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.length = (function length(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$Node$length$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$Node$length$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.length[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.length["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Node.length",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.string = (function string(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$Node$string$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$Node$string$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.string[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.string["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"Node.string",_);
}
}
})().call(null,_);
}
});
(rewrite_clj.node.protocols.Node["object"] = true);
(rewrite_clj.node.protocols.tag["object"] = (function (_){return new cljs.core.Keyword(null,"unknown","unknown",729063356);
}));
(rewrite_clj.node.protocols.printable_only_QMARK_["object"] = (function (_){return false;
}));
(rewrite_clj.node.protocols.sexpr["object"] = (function (this$){return this$;
}));
(rewrite_clj.node.protocols.length["object"] = (function (this$){return cljs.core.count.call(null,rewrite_clj.node.protocols.string.call(null,this$));
}));
(rewrite_clj.node.protocols.string["object"] = (function (this$){return cljs.core.pr_str.call(null,this$);
}));
/**
* Given a seq of nodes, convert those that represent s-expressions
* to the respective forms.
*/
rewrite_clj.node.protocols.sexprs = (function sexprs(nodes){return cljs.core.map.call(null,rewrite_clj.node.protocols.sexpr,cljs.core.remove.call(null,rewrite_clj.node.protocols.printable_only_QMARK_,nodes));
});
/**
* Sum up lengths of the given nodes.
*/
rewrite_clj.node.protocols.sum_lengths = (function sum_lengths(nodes){return cljs.core.reduce.call(null,cljs.core._PLUS_,cljs.core.map.call(null,rewrite_clj.node.protocols.length,nodes));
});
/**
* Convert nodes to strings and concatenate them.
*/
rewrite_clj.node.protocols.concat_strings = (function concat_strings(nodes){return cljs.core.reduce.call(null,cljs.core.str,cljs.core.map.call(null,rewrite_clj.node.protocols.string,nodes));
});
rewrite_clj.node.protocols.InnerNode = (function (){var obj9335 = {};return obj9335;
})();
rewrite_clj.node.protocols.inner_QMARK_ = (function inner_QMARK_(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.inner_QMARK_[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.inner_QMARK_["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"InnerNode.inner?",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.children = (function children(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$InnerNode$children$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$InnerNode$children$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.children[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.children["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"InnerNode.children",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.replace_children = (function replace_children(_,children){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2(_,children);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.replace_children[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.replace_children["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"InnerNode.replace-children",_);
}
}
})().call(null,_,children);
}
});
(rewrite_clj.node.protocols.InnerNode["object"] = true);
(rewrite_clj.node.protocols.inner_QMARK_["object"] = (function (_){return false;
}));
(rewrite_clj.node.protocols.children["object"] = (function (_){throw (new Error("UnsupportedOperationException"));
}));
(rewrite_clj.node.protocols.replace_children["object"] = (function (_,___$1){throw (new Error("UnsupportedOperationException"));
}));
/**
* Get all child s-expressions for the given node.
*/
rewrite_clj.node.protocols.child_sexprs = (function child_sexprs(node){if(cljs.core.truth_(rewrite_clj.node.protocols.inner_QMARK_.call(null,node)))
{return rewrite_clj.node.protocols.sexprs.call(null,rewrite_clj.node.protocols.children.call(null,node));
} else
{return null;
}
});
rewrite_clj.node.protocols.NodeCoerceable = (function (){var obj9337 = {};return obj9337;
})();
rewrite_clj.node.protocols.coerce = (function coerce(_){if((function (){var and__6486__auto__ = _;if(and__6486__auto__)
{return _.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1;
} else
{return and__6486__auto__;
}
})())
{return _.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1(_);
} else
{var x__7125__auto__ = (((_ == null))?null:_);return (function (){var or__6498__auto__ = (rewrite_clj.node.protocols.coerce[goog.typeOf(x__7125__auto__)]);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = (rewrite_clj.node.protocols.coerce["_"]);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{throw cljs.core.missing_protocol.call(null,"NodeCoerceable.coerce",_);
}
}
})().call(null,_);
}
});
rewrite_clj.node.protocols.assert_sexpr_count = (function assert_sexpr_count(nodes,c){if(cljs.core._EQ_.call(null,cljs.core.count.call(null,cljs.core.remove.call(null,rewrite_clj.node.protocols.printable_only_QMARK_,nodes)),c))
{return null;
} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str([cljs.core.str("can only contain"),cljs.core.str(c),cljs.core.str(" non-whitespace form(s).")].join('')),cljs.core.str("\n"),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),cljs.core.list(new cljs.core.Symbol(null,"count","count",-1545680184,null),cljs.core.list(new cljs.core.Symbol(null,"remove","remove",1719824957,null),new cljs.core.Symbol(null,"printable-only?","printable-only?",1939999750,null),new cljs.core.Symbol(null,"nodes","nodes",-1535538070,null))),new cljs.core.Symbol(null,"c","c",-1640531428,null))))].join('')));
}
});
rewrite_clj.node.protocols.assert_single_sexpr = (function assert_single_sexpr(nodes){return rewrite_clj.node.protocols.assert_sexpr_count.call(null,nodes,1);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.reader')) {
goog.provide('rewrite_clj.reader');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');
goog.require('goog.string');
goog.require('goog.string');
goog.require('cljs.extended.reader');
goog.require('cljs.extended.reader');
/**
* Throw reader exception, including line/column.
* @param {...*} var_args
*/
rewrite_clj.reader.throw_reader = (function() { 
var throw_reader__delegate = function (reader,fmt,data){var c = cljs.extended.reader.get_column_number.call(null,reader);var l = cljs.extended.reader.get_line_number.call(null,reader);throw (new Error([cljs.core.str(data),cljs.core.str(fmt),cljs.core.str(" [at line "),cljs.core.str(l),cljs.core.str(", column "),cljs.core.str(c),cljs.core.str("]")].join('')));
};
var throw_reader = function (reader,fmt,var_args){
var data = null;if (arguments.length > 2) {
  data = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return throw_reader__delegate.call(this,reader,fmt,data);};
throw_reader.cljs$lang$maxFixedArity = 2;
throw_reader.cljs$lang$applyTo = (function (arglist__9320){
var reader = cljs.core.first(arglist__9320);
arglist__9320 = cljs.core.next(arglist__9320);
var fmt = cljs.core.first(arglist__9320);
var data = cljs.core.rest(arglist__9320);
return throw_reader__delegate(reader,fmt,data);
});
throw_reader.cljs$core$IFn$_invoke$arity$variadic = throw_reader__delegate;
return throw_reader;
})()
;
rewrite_clj.reader.js_boundaries = ["\"",":",";","'","@","^","`","~","(",")","[","]","{","}","\\",null];
rewrite_clj.reader.js_contains = (function js_contains(c){return (-1 < rewrite_clj.reader.js_boundaries.indexOf(c));
});
rewrite_clj.reader.boundary_QMARK_ = (function boundary_QMARK_(c){return (-1 < rewrite_clj.reader.js_boundaries.indexOf(c));
});
rewrite_clj.reader.whitespace_QMARK_ = (function whitespace_QMARK_(c){return cljs.extended.reader.whitespace_QMARK_.call(null,c);
});
rewrite_clj.reader.linebreak_QMARK_ = (function linebreak_QMARK_(c){return cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["\n",null,"\r",null], null), null),c);
});
rewrite_clj.reader.space_QMARK_ = (function space_QMARK_(c){return (rewrite_clj.reader.whitespace_QMARK_.call(null,c)) && (!(rewrite_clj.reader.linebreak_QMARK_.call(null,c)));
});
rewrite_clj.reader.whitespace_or_boundary_QMARK_ = (function whitespace_or_boundary_QMARK_(c){return (rewrite_clj.reader.boundary_QMARK_.call(null,c)) || (rewrite_clj.reader.whitespace_QMARK_.call(null,c));
});
/**
* Read while the chars fulfill the given condition. Ignores
* the unmatching char.
* @param {...*} var_args
*/
rewrite_clj.reader.read_while = (function() { 
var read_while__delegate = function (reader,p_QMARK_,p__9306){var vec__9308 = p__9306;var eof_QMARK_ = cljs.core.nth.call(null,vec__9308,0,null);var buf = (new goog.string.StringBuffer(""));var eof_QMARK___$1 = (((eof_QMARK_ == null))?cljs.core.not.call(null,p_QMARK_.call(null,null)):eof_QMARK_);while(true){
var temp__4090__auto__ = cljs.extended.reader.read_char.call(null,reader);if(cljs.core.truth_(temp__4090__auto__))
{var c = temp__4090__auto__;if(cljs.core.truth_(p_QMARK_.call(null,c)))
{buf.append(c);
{
continue;
}
} else
{cljs.extended.reader.unread.call(null,reader,c);
return buf.toString();
}
} else
{if(cljs.core.truth_(eof_QMARK___$1))
{return buf.toString();
} else
{return rewrite_clj.reader.throw_reader.call(null,reader,"Unexpected EOF.");
}
}
break;
}
};
var read_while = function (reader,p_QMARK_,var_args){
var p__9306 = null;if (arguments.length > 2) {
  p__9306 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return read_while__delegate.call(this,reader,p_QMARK_,p__9306);};
read_while.cljs$lang$maxFixedArity = 2;
read_while.cljs$lang$applyTo = (function (arglist__9321){
var reader = cljs.core.first(arglist__9321);
arglist__9321 = cljs.core.next(arglist__9321);
var p_QMARK_ = cljs.core.first(arglist__9321);
var p__9306 = cljs.core.rest(arglist__9321);
return read_while__delegate(reader,p_QMARK_,p__9306);
});
read_while.cljs$core$IFn$_invoke$arity$variadic = read_while__delegate;
return read_while;
})()
;
/**
* Read until a char fulfills the given condition. Ignores the
* matching char.
*/
rewrite_clj.reader.read_until = (function read_until(reader,p_QMARK_){return rewrite_clj.reader.read_while.call(null,reader,cljs.core.complement.call(null,p_QMARK_),p_QMARK_.call(null,null));
});
/**
* Read until linebreak and include it.
*/
rewrite_clj.reader.read_include_linebreak = (function read_include_linebreak(reader){return [cljs.core.str(rewrite_clj.reader.read_until.call(null,reader,(function (p1__9309_SHARP_){return ((p1__9309_SHARP_ == null)) || (rewrite_clj.reader.linebreak_QMARK_.call(null,p1__9309_SHARP_));
}))),cljs.core.str(cljs.extended.reader.read_char.call(null,reader))].join('');
});
/**
* Convert string to EDN value.
*/
rewrite_clj.reader.string__GT_edn = (function string__GT_edn(s){return cljs.extended.reader.read_string.call(null,s);
});
/**
* Ignore the next character.
*/
rewrite_clj.reader.ignore = (function ignore(reader){cljs.extended.reader.read_char.call(null,reader);
return null;
});
/**
* Read next char.
*/
rewrite_clj.reader.next = (function next(reader){return cljs.extended.reader.read_char.call(null,reader);
});
/**
* Peek next char.
*/
rewrite_clj.reader.peek = (function peek(reader){return cljs.extended.reader.peek_char.call(null,reader);
});
/**
* Use the given function to read value, then attach row/col metadata.
*/
rewrite_clj.reader.read_with_meta = (function read_with_meta(reader,read_fn){var row = cljs.extended.reader.get_line_number.call(null,reader);var col = cljs.extended.reader.get_column_number.call(null,reader);var entry = read_fn.call(null,reader);if(cljs.core.truth_(entry))
{var end_row = cljs.extended.reader.get_line_number.call(null,reader);var end_col = cljs.extended.reader.get_column_number.call(null,reader);var end_col__$1 = ((cljs.core._EQ_.call(null,0,end_col))?(col + cljs.core.count.call(null,rewrite_clj.node.protocols.string.call(null,entry))):end_col);if(cljs.core._EQ_.call(null,0,col))
{return entry;
} else
{return cljs.core.with_meta.call(null,entry,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"row","row",1014017356),row,new cljs.core.Keyword(null,"col","col",1014002930),col,new cljs.core.Keyword(null,"end-row","end-row",3700475226),end_row,new cljs.core.Keyword(null,"end-col","end-col",3700460800),end_col__$1], null));
}
} else
{return null;
}
});
/**
* Call the given function on the given reader until it returns
* a non-truthy value.
*/
rewrite_clj.reader.read_repeatedly = (function read_repeatedly(reader,read_fn){return cljs.core.doall.call(null,cljs.core.take_while.call(null,cljs.core.identity,cljs.core.repeatedly.call(null,(function (){return read_fn.call(null,reader);
}))));
});
/**
* Call the given function on the given reader until `n` values matching `p?` have been
* collected.
*/
rewrite_clj.reader.read_n = (function read_n(reader,node_tag,read_fn,p_QMARK_,n){if((n > 0))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"pos?","pos?",-1637084636,null),new cljs.core.Symbol(null,"n","n",-1640531417,null))))].join('')));
}
var c = 0;var vs = cljs.core.PersistentVector.EMPTY;while(true){
if((c < n))
{var temp__4090__auto__ = read_fn.call(null,reader);if(cljs.core.truth_(temp__4090__auto__))
{var v = temp__4090__auto__;{
var G__9322 = (cljs.core.truth_(p_QMARK_.call(null,v))?(c + 1):c);
var G__9323 = cljs.core.conj.call(null,vs,v);
c = G__9322;
vs = G__9323;
continue;
}
} else
{return rewrite_clj.reader.throw_reader.call(null,reader,"%s node expects %d value%s.",node_tag,n,((cljs.core._EQ_.call(null,n,1))?"":"s"));
}
} else
{return vs;
}
break;
}
});
/**
* Create reader for strings.
*/
rewrite_clj.reader.string_reader = (function string_reader(s){return cljs.extended.reader.indexing_push_back_reader.call(null,s);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.stringz')) {
goog.provide('rewrite_clj.node.stringz');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');
rewrite_clj.node.stringz.wrap_string = (function wrap_string(v){return [cljs.core.str("\""),cljs.core.str(v),cljs.core.str("\"")].join('');
});
rewrite_clj.node.stringz.join_lines = (function join_lines(lines){return clojure.string.join.call(null,"\n",lines);
});

/**
* @constructor
* @param {*} lines
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.stringz.StringNode = (function (lines,__meta,__extmap){
this.lines = lines;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;if(cljs.core.next.call(null,self__.lines))
{return new cljs.core.Keyword(null,"multi-line","multi-line",2217102202);
} else
{return new cljs.core.Keyword(null,"token","token",1124445547);
}
});
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.stringz.join_lines.call(null,cljs.core.map.call(null,cljs.core.comp.call(null,rewrite_clj.reader.string__GT_edn,rewrite_clj.node.stringz.wrap_string),self__.lines));
});
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (2 + cljs.core.reduce.call(null,cljs.core._PLUS_,cljs.core.map.call(null,cljs.core.count,self__.lines)));
});
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.stringz.wrap_string.call(null,rewrite_clj.node.stringz.join_lines.call(null,self__.lines));
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9589,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9589,new cljs.core.Keyword(null,"lines","lines",1116881521)))
{return self__.lines;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9589,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9588){var self__ = this;
var this__7091__auto____$1 = this;var pred__9591 = cljs.core.keyword_identical_QMARK_;var expr__9592 = k__7092__auto__;if(cljs.core.truth_(pred__9591.call(null,new cljs.core.Keyword(null,"lines","lines",1116881521),expr__9592)))
{return (new rewrite_clj.node.stringz.StringNode(G__9588,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.stringz.StringNode(self__.lines,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9588),null));
}
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.stringz.StringNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"lines","lines",1116881521),self__.lines],null))], null),self__.__extmap));
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.stringz.StringNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"lines","lines",1116881521),self__.lines],null))], null),self__.__extmap));
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9588){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.stringz.StringNode(self__.lines,G__9588,self__.__extmap,self__.__hash));
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.stringz.StringNode(self__.lines,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.stringz.StringNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"lines","lines",1116881521),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.stringz.StringNode(self__.lines,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.stringz.StringNode.cljs$lang$type = true;
rewrite_clj.node.stringz.StringNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.stringz/StringNode");
});
rewrite_clj.node.stringz.StringNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.stringz/StringNode");
});
rewrite_clj.node.stringz.__GT_StringNode = (function __GT_StringNode(lines){return (new rewrite_clj.node.stringz.StringNode(lines));
});
rewrite_clj.node.stringz.map__GT_StringNode = (function map__GT_StringNode(G__9590){return (new rewrite_clj.node.stringz.StringNode(new cljs.core.Keyword(null,"lines","lines",1116881521).cljs$core$IFn$_invoke$arity$1(G__9590),null,cljs.core.dissoc.call(null,G__9590,new cljs.core.Keyword(null,"lines","lines",1116881521))));
});
/**
* Create node representing a string value.
* Takes either a seq of strings or a single one.
*/
rewrite_clj.node.stringz.string_node = (function string_node(lines){if(typeof lines === 'string')
{return rewrite_clj.node.stringz.__GT_StringNode.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lines], null));
} else
{return rewrite_clj.node.stringz.__GT_StringNode.call(null,lines);
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.token')) {
goog.provide('rewrite_clj.node.token');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} value
* @param {*} string_value
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.token.TokenNode = (function (value,string_value,__meta,__extmap){
this.value = value;
this.string_value = string_value;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>2){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"token","token",1124445547);
});
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.value;
});
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return cljs.core.count.call(null,self__.string_value);
});
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.string_value;
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9841,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9841,new cljs.core.Keyword(null,"value","value",1125876963)))
{return self__.value;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9841,new cljs.core.Keyword(null,"string-value","string-value",4303153191)))
{return self__.string_value;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9841,else__7087__auto__);
} else
{return null;
}
}
}
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9840){var self__ = this;
var this__7091__auto____$1 = this;var pred__9843 = cljs.core.keyword_identical_QMARK_;var expr__9844 = k__7092__auto__;if(cljs.core.truth_(pred__9843.call(null,new cljs.core.Keyword(null,"value","value",1125876963),expr__9844)))
{return (new rewrite_clj.node.token.TokenNode(G__9840,self__.string_value,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9843.call(null,new cljs.core.Keyword(null,"string-value","string-value",4303153191),expr__9844)))
{return (new rewrite_clj.node.token.TokenNode(self__.value,G__9840,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.token.TokenNode(self__.value,self__.string_value,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9840),null));
}
}
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.token.TokenNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"value","value",1125876963),self__.value],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"string-value","string-value",4303153191),self__.string_value],null))], null),self__.__extmap));
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.token.TokenNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"value","value",1125876963),self__.value],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"string-value","string-value",4303153191),self__.string_value],null))], null),self__.__extmap));
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (2 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9840){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.token.TokenNode(self__.value,self__.string_value,G__9840,self__.__extmap,self__.__hash));
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.token.TokenNode(self__.value,self__.string_value,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.token.TokenNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"string-value","string-value",4303153191),null,new cljs.core.Keyword(null,"value","value",1125876963),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.token.TokenNode(self__.value,self__.string_value,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.token.TokenNode.cljs$lang$type = true;
rewrite_clj.node.token.TokenNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.token/TokenNode");
});
rewrite_clj.node.token.TokenNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.token/TokenNode");
});
rewrite_clj.node.token.__GT_TokenNode = (function __GT_TokenNode(value,string_value){return (new rewrite_clj.node.token.TokenNode(value,string_value));
});
rewrite_clj.node.token.map__GT_TokenNode = (function map__GT_TokenNode(G__9842){return (new rewrite_clj.node.token.TokenNode(new cljs.core.Keyword(null,"value","value",1125876963).cljs$core$IFn$_invoke$arity$1(G__9842),new cljs.core.Keyword(null,"string-value","string-value",4303153191).cljs$core$IFn$_invoke$arity$1(G__9842),null,cljs.core.dissoc.call(null,G__9842,new cljs.core.Keyword(null,"value","value",1125876963),new cljs.core.Keyword(null,"string-value","string-value",4303153191))));
});
/**
* Create node for an unspecified EDN token.
* @param {...*} var_args
*/
rewrite_clj.node.token.token_node = (function() { 
var token_node__delegate = function (value,p__9846){var vec__9848 = p__9846;var string_value = cljs.core.nth.call(null,vec__9848,0,null);return rewrite_clj.node.token.__GT_TokenNode.call(null,value,(function (){var or__6498__auto__ = string_value;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return cljs.core.pr_str.call(null,value);
}
})());
};
var token_node = function (value,var_args){
var p__9846 = null;if (arguments.length > 1) {
  p__9846 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return token_node__delegate.call(this,value,p__9846);};
token_node.cljs$lang$maxFixedArity = 1;
token_node.cljs$lang$applyTo = (function (arglist__9859){
var value = cljs.core.first(arglist__9859);
var p__9846 = cljs.core.rest(arglist__9859);
return token_node__delegate(value,p__9846);
});
token_node.cljs$core$IFn$_invoke$arity$variadic = token_node__delegate;
return token_node;
})()
;
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.whitespace')) {
goog.provide('rewrite_clj.node.whitespace');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');
/**
* This function is applied to every newline string.
*/
rewrite_clj.node.whitespace._STAR_newline_fn_STAR_ = cljs.core.identity;
/**
* This function is applied to every newline string and should produce
* the eventual character count.
*/
rewrite_clj.node.whitespace._STAR_count_fn_STAR_ = cljs.core.count;

/**
* @constructor
* @param {*} whitespace
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.whitespace.WhitespaceNode = (function (whitespace,__meta,__extmap){
this.whitespace = whitespace;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"whitespace","whitespace",1290815983);
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;throw (new Error("Unsupported operation"));
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return cljs.core.count.call(null,self__.whitespace);
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.whitespace;
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9816,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9816,new cljs.core.Keyword(null,"whitespace","whitespace",1290815983)))
{return self__.whitespace;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9816,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9815){var self__ = this;
var this__7091__auto____$1 = this;var pred__9818 = cljs.core.keyword_identical_QMARK_;var expr__9819 = k__7092__auto__;if(cljs.core.truth_(pred__9818.call(null,new cljs.core.Keyword(null,"whitespace","whitespace",1290815983),expr__9819)))
{return (new rewrite_clj.node.whitespace.WhitespaceNode(G__9815,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.whitespace.WhitespaceNode(self__.whitespace,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9815),null));
}
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.whitespace.WhitespaceNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"whitespace","whitespace",1290815983),self__.whitespace],null))], null),self__.__extmap));
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"whitespace","whitespace",1290815983),self__.whitespace],null))], null),self__.__extmap));
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9815){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.whitespace.WhitespaceNode(self__.whitespace,G__9815,self__.__extmap,self__.__hash));
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.whitespace.WhitespaceNode(self__.whitespace,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"whitespace","whitespace",1290815983),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.whitespace.WhitespaceNode(self__.whitespace,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.whitespace.WhitespaceNode.cljs$lang$type = true;
rewrite_clj.node.whitespace.WhitespaceNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.whitespace/WhitespaceNode");
});
rewrite_clj.node.whitespace.WhitespaceNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.whitespace/WhitespaceNode");
});
rewrite_clj.node.whitespace.__GT_WhitespaceNode = (function __GT_WhitespaceNode(whitespace){return (new rewrite_clj.node.whitespace.WhitespaceNode(whitespace));
});
rewrite_clj.node.whitespace.map__GT_WhitespaceNode = (function map__GT_WhitespaceNode(G__9817){return (new rewrite_clj.node.whitespace.WhitespaceNode(new cljs.core.Keyword(null,"whitespace","whitespace",1290815983).cljs$core$IFn$_invoke$arity$1(G__9817),null,cljs.core.dissoc.call(null,G__9817,new cljs.core.Keyword(null,"whitespace","whitespace",1290815983))));
});

/**
* @constructor
* @param {*} newlines
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.whitespace.NewlineNode = (function (newlines,__meta,__extmap){
this.newlines = newlines;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"newline","newline",2859826438);
});
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;throw (new Error("Unsupported operation"));
});
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.whitespace._STAR_count_fn_STAR_.call(null,self__.newlines);
});
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.whitespace._STAR_newline_fn_STAR_.call(null,self__.newlines);
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9822,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9822,new cljs.core.Keyword(null,"newlines","newlines",2402917585)))
{return self__.newlines;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9822,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9821){var self__ = this;
var this__7091__auto____$1 = this;var pred__9824 = cljs.core.keyword_identical_QMARK_;var expr__9825 = k__7092__auto__;if(cljs.core.truth_(pred__9824.call(null,new cljs.core.Keyword(null,"newlines","newlines",2402917585),expr__9825)))
{return (new rewrite_clj.node.whitespace.NewlineNode(G__9821,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.whitespace.NewlineNode(self__.newlines,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9821),null));
}
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.whitespace.NewlineNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"newlines","newlines",2402917585),self__.newlines],null))], null),self__.__extmap));
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.whitespace.NewlineNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"newlines","newlines",2402917585),self__.newlines],null))], null),self__.__extmap));
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9821){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.whitespace.NewlineNode(self__.newlines,G__9821,self__.__extmap,self__.__hash));
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.whitespace.NewlineNode(self__.newlines,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.whitespace.NewlineNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"newlines","newlines",2402917585),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.whitespace.NewlineNode(self__.newlines,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.whitespace.NewlineNode.cljs$lang$type = true;
rewrite_clj.node.whitespace.NewlineNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.whitespace/NewlineNode");
});
rewrite_clj.node.whitespace.NewlineNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.whitespace/NewlineNode");
});
rewrite_clj.node.whitespace.__GT_NewlineNode = (function __GT_NewlineNode(newlines){return (new rewrite_clj.node.whitespace.NewlineNode(newlines));
});
rewrite_clj.node.whitespace.map__GT_NewlineNode = (function map__GT_NewlineNode(G__9823){return (new rewrite_clj.node.whitespace.NewlineNode(new cljs.core.Keyword(null,"newlines","newlines",2402917585).cljs$core$IFn$_invoke$arity$1(G__9823),null,cljs.core.dissoc.call(null,G__9823,new cljs.core.Keyword(null,"newlines","newlines",2402917585))));
});
/**
* Create whitespace node.
*/
rewrite_clj.node.whitespace.whitespace_node = (function whitespace_node(s){return rewrite_clj.node.whitespace.__GT_WhitespaceNode.call(null,s);
});
/**
* Create newline node.
*/
rewrite_clj.node.whitespace.newline_node = (function newline_node(s){return rewrite_clj.node.whitespace.__GT_NewlineNode.call(null,s);
});
/**
* Check whether a character represents a linebreak.
*/
rewrite_clj.node.whitespace.newline_QMARK_ = (function newline_QMARK_(c){return cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["\n",null,"\r",null], null), null),c);
});
/**
* Convert a string of whitespace to whitespace/newline nodes.
*/
rewrite_clj.node.whitespace.whitespace_nodes = (function whitespace_nodes(s){return cljs.core.map.call(null,(function (char_seq){var s__$1 = cljs.core.apply.call(null,cljs.core.str,char_seq);if(rewrite_clj.node.whitespace.newline_QMARK_.call(null,cljs.core.first.call(null,char_seq)))
{return rewrite_clj.node.whitespace.newline_node.call(null,s__$1);
} else
{return rewrite_clj.node.whitespace.whitespace_node.call(null,s__$1);
}
}),cljs.core.partition_by.call(null,rewrite_clj.node.whitespace.newline_QMARK_,s));
});
/**
* Create node representing the given number of spaces.
*/
rewrite_clj.node.whitespace.spaces = (function spaces(n){return rewrite_clj.node.whitespace.whitespace_node.call(null,cljs.core.apply.call(null,cljs.core.str,cljs.core.repeat.call(null,n," ")));
});
/**
* Create node representing the given number of newline characters.
*/
rewrite_clj.node.whitespace.newlines = (function newlines(n){return rewrite_clj.node.whitespace.newline_node.call(null,cljs.core.apply.call(null,cljs.core.str,cljs.core.repeat.call(null,n,"\n")));
});
var comma_9837 = rewrite_clj.node.whitespace.whitespace_node.call(null,", ");/**
* Interleave the given seq of nodes with `", "` nodes.
*/
rewrite_clj.node.whitespace.comma_separated = ((function (comma_9837){
return (function comma_separated(nodes){return cljs.core.butlast.call(null,cljs.core.interleave.call(null,nodes,cljs.core.repeat.call(null,comma_9837)));
});})(comma_9837))
;
var nl_9838 = rewrite_clj.node.whitespace.newline_node.call(null,"\n");/**
* Interleave the given seq of nodes with newline nodes.
*/
rewrite_clj.node.whitespace.line_separated = ((function (nl_9838){
return (function line_separated(nodes){return cljs.core.butlast.call(null,cljs.core.interleave.call(null,nodes,cljs.core.repeat.call(null,nl_9838)));
});})(nl_9838))
;
var space_9839 = rewrite_clj.node.whitespace.whitespace_node.call(null," ");/**
* Interleave the given seq of nodes with `" "` nodes.
*/
rewrite_clj.node.whitespace.space_separated = ((function (space_9839){
return (function space_separated(nodes){return cljs.core.butlast.call(null,cljs.core.interleave.call(null,nodes,cljs.core.repeat.call(null,space_9839)));
});})(space_9839))
;
/**
* Check whether a node represents whitespace.
*/
rewrite_clj.node.whitespace.whitespace_QMARK_ = (function whitespace_QMARK_(node){return cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"newline","newline",2859826438),null,new cljs.core.Keyword(null,"whitespace","whitespace",1290815983),null], null), null),rewrite_clj.node.protocols.tag.call(null,node));
});
/**
* Check whether a ndoe represents linebreaks.
*/
rewrite_clj.node.whitespace.linebreak_QMARK_ = (function linebreak_QMARK_(node){return cljs.core._EQ_.call(null,rewrite_clj.node.protocols.tag.call(null,node),new cljs.core.Keyword(null,"newline","newline",2859826438));
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.meta')) {
goog.provide('rewrite_clj.node.meta');
goog.require('cljs.core');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} tag
* @param {*} prefix
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.meta.MetaNode = (function (tag,prefix,children,__meta,__extmap){
this.tag = tag;
this.prefix = prefix;
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>3){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.tag;
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;var vec__9800 = rewrite_clj.node.protocols.sexprs.call(null,self__.children);var mta = cljs.core.nth.call(null,vec__9800,0,null);var data = cljs.core.nth.call(null,vec__9800,1,null);if((function (){var G__9801 = data;if(G__9801)
{var bit__7148__auto__ = (G__9801.cljs$lang$protocol_mask$partition0$ & 262144);if((bit__7148__auto__) || (G__9801.cljs$core$IWithMeta$))
{return true;
} else
{if((!G__9801.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9801);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9801);
}
})())
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str([cljs.core.str("cannot attach metadata to: "),cljs.core.str(cljs.core.pr_str.call(null,data))].join('')),cljs.core.str("\n"),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"satisfies?","satisfies?",396750295,null),new cljs.core.Symbol(null,"IWithMeta","IWithMeta",-1317016307,null),new cljs.core.Symbol(null,"data","data",-1637455517,null))))].join('')));
}
return cljs.core.with_meta.call(null,data,((cljs.core.map_QMARK_.call(null,mta))?mta:new cljs.core.PersistentArrayMap.fromArray([mta,true], true, false)));
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (cljs.core.count.call(null,self__.prefix) + rewrite_clj.node.protocols.sum_lengths.call(null,self__.children));
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str(self__.prefix),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children))].join('');
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9798,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9798,new cljs.core.Keyword(null,"tag","tag",1014018828)))
{return self__.tag;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9798,new cljs.core.Keyword(null,"prefix","prefix",4328760836)))
{return self__.prefix;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9798,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9798,else__7087__auto__);
} else
{return null;
}
}
}
}
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9797){var self__ = this;
var this__7091__auto____$1 = this;var pred__9802 = cljs.core.keyword_identical_QMARK_;var expr__9803 = k__7092__auto__;if(cljs.core.truth_(pred__9802.call(null,new cljs.core.Keyword(null,"tag","tag",1014018828),expr__9803)))
{return (new rewrite_clj.node.meta.MetaNode(G__9797,self__.prefix,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9802.call(null,new cljs.core.Keyword(null,"prefix","prefix",4328760836),expr__9803)))
{return (new rewrite_clj.node.meta.MetaNode(self__.tag,G__9797,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9802.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9803)))
{return (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,G__9797,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9797),null));
}
}
}
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;rewrite_clj.node.protocols.assert_sexpr_count.call(null,children_SINGLEQUOTE_,2);
return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.meta.MetaNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"prefix","prefix",4328760836),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.meta.MetaNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"prefix","prefix",4328760836),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (3 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9797){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,G__9797,self__.__extmap,self__.__hash));
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.meta.MetaNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"children","children",2673430897),null,new cljs.core.Keyword(null,"prefix","prefix",4328760836),null,new cljs.core.Keyword(null,"tag","tag",1014018828),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.meta.MetaNode(self__.tag,self__.prefix,self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.meta.MetaNode.cljs$lang$type = true;
rewrite_clj.node.meta.MetaNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.meta/MetaNode");
});
rewrite_clj.node.meta.MetaNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.meta/MetaNode");
});
rewrite_clj.node.meta.__GT_MetaNode = (function __GT_MetaNode(tag,prefix,children){return (new rewrite_clj.node.meta.MetaNode(tag,prefix,children));
});
rewrite_clj.node.meta.map__GT_MetaNode = (function map__GT_MetaNode(G__9799){return (new rewrite_clj.node.meta.MetaNode(new cljs.core.Keyword(null,"tag","tag",1014018828).cljs$core$IFn$_invoke$arity$1(G__9799),new cljs.core.Keyword(null,"prefix","prefix",4328760836).cljs$core$IFn$_invoke$arity$1(G__9799),new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9799),null,cljs.core.dissoc.call(null,G__9799,new cljs.core.Keyword(null,"tag","tag",1014018828),new cljs.core.Keyword(null,"prefix","prefix",4328760836),new cljs.core.Keyword(null,"children","children",2673430897))));
});
/**
* Create node representing a form and its metadata.
*/
rewrite_clj.node.meta.meta_node = (function() {
var meta_node = null;
var meta_node__1 = (function (children){rewrite_clj.node.protocols.assert_sexpr_count.call(null,children,2);
return rewrite_clj.node.meta.__GT_MetaNode.call(null,new cljs.core.Keyword(null,"meta","meta",1017252215),"^",children);
});
var meta_node__2 = (function (metadata,data){return meta_node.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadata,rewrite_clj.node.whitespace.spaces.call(null,1),data], null));
});
meta_node = function(metadata,data){
switch(arguments.length){
case 1:
return meta_node__1.call(this,metadata);
case 2:
return meta_node__2.call(this,metadata,data);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
meta_node.cljs$core$IFn$_invoke$arity$1 = meta_node__1;
meta_node.cljs$core$IFn$_invoke$arity$2 = meta_node__2;
return meta_node;
})()
;
/**
* Create node representing a form and its metadata using the
* `#^` prefix.
*/
rewrite_clj.node.meta.raw_meta_node = (function() {
var raw_meta_node = null;
var raw_meta_node__1 = (function (children){rewrite_clj.node.protocols.assert_sexpr_count.call(null,children,2);
return rewrite_clj.node.meta.__GT_MetaNode.call(null,new cljs.core.Keyword(null,"meta*","meta*",1117691447),"#^",children);
});
var raw_meta_node__2 = (function (metadata,data){return raw_meta_node.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [metadata,rewrite_clj.node.whitespace.spaces.call(null,1),data], null));
});
raw_meta_node = function(metadata,data){
switch(arguments.length){
case 1:
return raw_meta_node__1.call(this,metadata);
case 2:
return raw_meta_node__2.call(this,metadata,data);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
raw_meta_node.cljs$core$IFn$_invoke$arity$1 = raw_meta_node__1;
raw_meta_node.cljs$core$IFn$_invoke$arity$2 = raw_meta_node__2;
return raw_meta_node;
})()
;
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.uneval')) {
goog.provide('rewrite_clj.node.uneval');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.uneval.UnevalNode = (function (children,__meta,__extmap){
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"uneval","uneval",4468227623);
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;throw (new Error("Unsupported operation for unevalnode"));
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (2 + rewrite_clj.node.protocols.sum_lengths.call(null,self__.children));
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str("#_"),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children))].join('');
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9781,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9781,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9781,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9780){var self__ = this;
var this__7091__auto____$1 = this;var pred__9783 = cljs.core.keyword_identical_QMARK_;var expr__9784 = k__7092__auto__;if(cljs.core.truth_(pred__9783.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9784)))
{return (new rewrite_clj.node.uneval.UnevalNode(G__9780,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.uneval.UnevalNode(self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9780),null));
}
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.uneval.UnevalNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;rewrite_clj.node.protocols.assert_single_sexpr.call(null,children_SINGLEQUOTE_);
return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.uneval.UnevalNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.uneval.UnevalNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9780){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.uneval.UnevalNode(self__.children,G__9780,self__.__extmap,self__.__hash));
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.uneval.UnevalNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.uneval.UnevalNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"children","children",2673430897),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.uneval.UnevalNode(self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.uneval.UnevalNode.cljs$lang$type = true;
rewrite_clj.node.uneval.UnevalNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.uneval/UnevalNode");
});
rewrite_clj.node.uneval.UnevalNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.uneval/UnevalNode");
});
rewrite_clj.node.uneval.__GT_UnevalNode = (function __GT_UnevalNode(children){return (new rewrite_clj.node.uneval.UnevalNode(children));
});
rewrite_clj.node.uneval.map__GT_UnevalNode = (function map__GT_UnevalNode(G__9782){return (new rewrite_clj.node.uneval.UnevalNode(new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9782),null,cljs.core.dissoc.call(null,G__9782,new cljs.core.Keyword(null,"children","children",2673430897))));
});
/**
* Create node representing an EDN uneval `#_` form.
*/
rewrite_clj.node.uneval.uneval_node = (function uneval_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{rewrite_clj.node.protocols.assert_single_sexpr.call(null,children);
return rewrite_clj.node.uneval.__GT_UnevalNode.call(null,children);
} else
{{
var G__9796 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9796;
continue;
}
}
break;
}
});
}
if(!lt.util.load.provided_QMARK_('clojure.walk')) {
goog.provide('clojure.walk');
goog.require('cljs.core');
/**
* Traverses form, an arbitrary data structure.  inner and outer are
* functions.  Applies inner to each element of form, building up a
* data structure of the same type, then applies outer to the result.
* Recognizes all Clojure data structures. Consumes seqs as with doall.
*/
clojure.walk.walk = (function walk(inner,outer,form){if(cljs.core.seq_QMARK_.call(null,form))
{return outer.call(null,cljs.core.doall.call(null,cljs.core.map.call(null,inner,form)));
} else
{if(cljs.core.coll_QMARK_.call(null,form))
{return outer.call(null,cljs.core.into.call(null,cljs.core.empty.call(null,form),cljs.core.map.call(null,inner,form)));
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return outer.call(null,form);
} else
{return null;
}
}
}
});
/**
* Performs a depth-first, post-order traversal of form.  Calls f on
* each sub-form, uses f's return value in place of the original.
* Recognizes all Clojure data structures. Consumes seqs as with doall.
*/
clojure.walk.postwalk = (function postwalk(f,form){return clojure.walk.walk.call(null,cljs.core.partial.call(null,postwalk,f),f,form);
});
/**
* Like postwalk, but does pre-order traversal.
*/
clojure.walk.prewalk = (function prewalk(f,form){return clojure.walk.walk.call(null,cljs.core.partial.call(null,prewalk,f),cljs.core.identity,f.call(null,form));
});
/**
* Recursively transforms all map keys from strings to keywords.
*/
clojure.walk.keywordize_keys = (function keywordize_keys(m){var f = (function (p__9326){var vec__9327 = p__9326;var k = cljs.core.nth.call(null,vec__9327,0,null);var v = cljs.core.nth.call(null,vec__9327,1,null);if(typeof k === 'string')
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null,k),v], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);
}
});return clojure.walk.postwalk.call(null,((function (f){
return (function (x){if(cljs.core.map_QMARK_.call(null,x))
{return cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,f,x));
} else
{return x;
}
});})(f))
,m);
});
/**
* Recursively transforms all map keys from keywords to strings.
*/
clojure.walk.stringify_keys = (function stringify_keys(m){var f = (function (p__9330){var vec__9331 = p__9330;var k = cljs.core.nth.call(null,vec__9331,0,null);var v = cljs.core.nth.call(null,vec__9331,1,null);if((k instanceof cljs.core.Keyword))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null,k),v], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);
}
});return clojure.walk.postwalk.call(null,((function (f){
return (function (x){if(cljs.core.map_QMARK_.call(null,x))
{return cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,f,x));
} else
{return x;
}
});})(f))
,m);
});
/**
* Recursively transforms form by replacing keys in smap with their
* values.  Like clojure/replace but works on any data structure.  Does
* replacement at the root of the tree first.
*/
clojure.walk.prewalk_replace = (function prewalk_replace(smap,form){return clojure.walk.prewalk.call(null,(function (x){if(cljs.core.contains_QMARK_.call(null,smap,x))
{return smap.call(null,x);
} else
{return x;
}
}),form);
});
/**
* Recursively transforms form by replacing keys in smap with their
* values.  Like clojure/replace but works on any data structure.  Does
* replacement at the leaves of the tree first.
*/
clojure.walk.postwalk_replace = (function postwalk_replace(smap,form){return clojure.walk.postwalk.call(null,(function (x){if(cljs.core.contains_QMARK_.call(null,smap,x))
{return smap.call(null,x);
} else
{return x;
}
}),form);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.quote')) {
goog.provide('rewrite_clj.node.quote');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} tag
* @param {*} prefix
* @param {*} sym
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.quote.QuoteNode = (function (tag,prefix,sym,children,__meta,__extmap){
this.tag = tag;
this.prefix = prefix;
this.sym = sym;
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>4){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.tag;
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.first.call(null,rewrite_clj.node.protocols.sexprs.call(null,self__.children))),self__.sym);
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (cljs.core.count.call(null,self__.prefix) + rewrite_clj.node.protocols.sum_lengths.call(null,self__.children));
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str(self__.prefix),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children))].join('');
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9761,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9761,new cljs.core.Keyword(null,"tag","tag",1014018828)))
{return self__.tag;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9761,new cljs.core.Keyword(null,"prefix","prefix",4328760836)))
{return self__.prefix;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9761,new cljs.core.Keyword(null,"sym","sym",1014018617)))
{return self__.sym;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9761,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9761,else__7087__auto__);
} else
{return null;
}
}
}
}
}
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9760){var self__ = this;
var this__7091__auto____$1 = this;var pred__9763 = cljs.core.keyword_identical_QMARK_;var expr__9764 = k__7092__auto__;if(cljs.core.truth_(pred__9763.call(null,new cljs.core.Keyword(null,"tag","tag",1014018828),expr__9764)))
{return (new rewrite_clj.node.quote.QuoteNode(G__9760,self__.prefix,self__.sym,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9763.call(null,new cljs.core.Keyword(null,"prefix","prefix",4328760836),expr__9764)))
{return (new rewrite_clj.node.quote.QuoteNode(self__.tag,G__9760,self__.sym,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9763.call(null,new cljs.core.Keyword(null,"sym","sym",1014018617),expr__9764)))
{return (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,G__9760,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9763.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9764)))
{return (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,G__9760,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9760),null));
}
}
}
}
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;rewrite_clj.node.protocols.assert_single_sexpr.call(null,children_SINGLEQUOTE_);
return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.quote.QuoteNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"prefix","prefix",4328760836),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"sym","sym",1014018617),self__.sym],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.quote.QuoteNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"prefix","prefix",4328760836),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"sym","sym",1014018617),self__.sym],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (4 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9760){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,G__9760,self__.__extmap,self__.__hash));
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.quote.QuoteNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"children","children",2673430897),null,new cljs.core.Keyword(null,"sym","sym",1014018617),null,new cljs.core.Keyword(null,"prefix","prefix",4328760836),null,new cljs.core.Keyword(null,"tag","tag",1014018828),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.quote.QuoteNode(self__.tag,self__.prefix,self__.sym,self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.quote.QuoteNode.cljs$lang$type = true;
rewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.quote/QuoteNode");
});
rewrite_clj.node.quote.QuoteNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.quote/QuoteNode");
});
rewrite_clj.node.quote.__GT_QuoteNode = (function __GT_QuoteNode(tag,prefix,sym,children){return (new rewrite_clj.node.quote.QuoteNode(tag,prefix,sym,children));
});
rewrite_clj.node.quote.map__GT_QuoteNode = (function map__GT_QuoteNode(G__9762){return (new rewrite_clj.node.quote.QuoteNode(new cljs.core.Keyword(null,"tag","tag",1014018828).cljs$core$IFn$_invoke$arity$1(G__9762),new cljs.core.Keyword(null,"prefix","prefix",4328760836).cljs$core$IFn$_invoke$arity$1(G__9762),new cljs.core.Keyword(null,"sym","sym",1014018617).cljs$core$IFn$_invoke$arity$1(G__9762),new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9762),null,cljs.core.dissoc.call(null,G__9762,new cljs.core.Keyword(null,"tag","tag",1014018828),new cljs.core.Keyword(null,"prefix","prefix",4328760836),new cljs.core.Keyword(null,"sym","sym",1014018617),new cljs.core.Keyword(null,"children","children",2673430897))));
});
rewrite_clj.node.quote.__GT_node = (function __GT_node(t,prefix,sym,children){rewrite_clj.node.protocols.assert_single_sexpr.call(null,children);
return rewrite_clj.node.quote.__GT_QuoteNode.call(null,t,prefix,sym,children);
});
/**
* Create node representing a quoted form.
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.quote.quote_node = (function quote_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.quote.__GT_node.call(null,new cljs.core.Keyword(null,"quote","quote",1121858030),"'",new cljs.core.Symbol(null,"quote","quote",-1532577739,null),children);
} else
{{
var G__9776 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9776;
continue;
}
}
break;
}
});
/**
* Create node representing a syntax-quoted form.
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.quote.syntax_quote_node = (function syntax_quote_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.quote.__GT_node.call(null,new cljs.core.Keyword(null,"syntax-quote","syntax-quote",3009198980),"`",new cljs.core.Symbol(null,"quote","quote",-1532577739,null),children);
} else
{{
var G__9777 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9777;
continue;
}
}
break;
}
});
/**
* Create node representing an unquoted form. (`~...`)
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.quote.unquote_node = (function unquote_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.quote.__GT_node.call(null,new cljs.core.Keyword(null,"unquote","unquote",734812917),"~",new cljs.core.Symbol(null,"unquote","unquote",-1919622852,null),children);
} else
{{
var G__9778 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9778;
continue;
}
}
break;
}
});
/**
* Create node representing an unquote-spliced form. (`~@...`)
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.quote.unquote_splicing_node = (function unquote_splicing_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.quote.__GT_node.call(null,new cljs.core.Keyword(null,"unquote-splicing","unquote-splicing",1895073461),"~@",new cljs.core.Symbol(null,"unquote-splicing","unquote-splicing",-759362308,null),children);
} else
{{
var G__9779 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9779;
continue;
}
}
break;
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.forms')) {
goog.provide('rewrite_clj.node.forms');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.forms.FormsNode = (function (children,__meta,__extmap){
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"forms","forms",1111523233);
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;var es = rewrite_clj.node.protocols.sexprs.call(null,self__.children);if(cljs.core.next.call(null,es))
{return cljs.core.list_STAR_.call(null,new cljs.core.Symbol(null,"do","do",-1640528316,null),es);
} else
{return cljs.core.first.call(null,es);
}
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.protocols.sum_lengths.call(null,self__.children);
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.protocols.concat_strings.call(null,self__.children);
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9727,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9727,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9727,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9726){var self__ = this;
var this__7091__auto____$1 = this;var pred__9729 = cljs.core.keyword_identical_QMARK_;var expr__9730 = k__7092__auto__;if(cljs.core.truth_(pred__9729.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9730)))
{return (new rewrite_clj.node.forms.FormsNode(G__9726,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.forms.FormsNode(self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9726),null));
}
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.forms.FormsNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.forms.FormsNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9726){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.forms.FormsNode(self__.children,G__9726,self__.__extmap,self__.__hash));
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.forms.FormsNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.forms.FormsNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"children","children",2673430897),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.forms.FormsNode(self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.forms.FormsNode.cljs$lang$type = true;
rewrite_clj.node.forms.FormsNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.forms/FormsNode");
});
rewrite_clj.node.forms.FormsNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.forms/FormsNode");
});
rewrite_clj.node.forms.__GT_FormsNode = (function __GT_FormsNode(children){return (new rewrite_clj.node.forms.FormsNode(children));
});
rewrite_clj.node.forms.map__GT_FormsNode = (function map__GT_FormsNode(G__9728){return (new rewrite_clj.node.forms.FormsNode(new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9728),null,cljs.core.dissoc.call(null,G__9728,new cljs.core.Keyword(null,"children","children",2673430897))));
});
/**
* Create top-level node wrapping multiple children
* (equals an implicit `do` on the top-level).
*/
rewrite_clj.node.forms.forms_node = (function forms_node(children){return rewrite_clj.node.forms.__GT_FormsNode.call(null,children);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.seq')) {
goog.provide('rewrite_clj.node.seq');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');
rewrite_clj.node.seq.wrap_vec = (function wrap_vec(s){return [cljs.core.str("["),cljs.core.str(s),cljs.core.str("]")].join('');
});
rewrite_clj.node.seq.wrap_list = (function wrap_list(s){return [cljs.core.str("("),cljs.core.str(s),cljs.core.str(")")].join('');
});
rewrite_clj.node.seq.wrap_set = (function wrap_set(s){return [cljs.core.str("#{"),cljs.core.str(s),cljs.core.str("}")].join('');
});
rewrite_clj.node.seq.wrap_map = (function wrap_map(s){return [cljs.core.str("{"),cljs.core.str(s),cljs.core.str("}")].join('');
});

/**
* @constructor
* @param {*} tag
* @param {*} wrap_fn
* @param {*} wrap_length
* @param {*} seq_fn
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.seq.SeqNode = (function (tag,wrap_fn,wrap_length,seq_fn,children,__meta,__extmap){
this.tag = tag;
this.wrap_fn = wrap_fn;
this.wrap_length = wrap_length;
this.seq_fn = seq_fn;
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>5){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (this$){var self__ = this;
var this$__$1 = this;return self__.tag;
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (this$){var self__ = this;
var this$__$1 = this;return self__.seq_fn.call(null,rewrite_clj.node.protocols.sexprs.call(null,self__.children));
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (self__.wrap_length + rewrite_clj.node.protocols.sum_lengths.call(null,self__.children));
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (this$){var self__ = this;
var this$__$1 = this;return self__.wrap_fn.call(null,rewrite_clj.node.protocols.concat_strings.call(null,self__.children));
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9709,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9709,new cljs.core.Keyword(null,"tag","tag",1014018828)))
{return self__.tag;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9709,new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741)))
{return self__.wrap_fn;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9709,new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963)))
{return self__.wrap_length;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9709,new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128)))
{return self__.seq_fn;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9709,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9709,else__7087__auto__);
} else
{return null;
}
}
}
}
}
}
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9708){var self__ = this;
var this__7091__auto____$1 = this;var pred__9711 = cljs.core.keyword_identical_QMARK_;var expr__9712 = k__7092__auto__;if(cljs.core.truth_(pred__9711.call(null,new cljs.core.Keyword(null,"tag","tag",1014018828),expr__9712)))
{return (new rewrite_clj.node.seq.SeqNode(G__9708,self__.wrap_fn,self__.wrap_length,self__.seq_fn,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9711.call(null,new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741),expr__9712)))
{return (new rewrite_clj.node.seq.SeqNode(self__.tag,G__9708,self__.wrap_length,self__.seq_fn,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9711.call(null,new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963),expr__9712)))
{return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,G__9708,self__.seq_fn,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9711.call(null,new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128),expr__9712)))
{return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,self__.wrap_length,G__9708,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9711.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9712)))
{return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,self__.wrap_length,self__.seq_fn,G__9708,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,self__.wrap_length,self__.seq_fn,self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9708),null));
}
}
}
}
}
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.seq.SeqNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741),self__.wrap_fn],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963),self__.wrap_length],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128),self__.seq_fn],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.seq.SeqNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741),self__.wrap_fn],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963),self__.wrap_length],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128),self__.seq_fn],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (5 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9708){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,self__.wrap_length,self__.seq_fn,self__.children,G__9708,self__.__extmap,self__.__hash));
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,self__.wrap_length,self__.seq_fn,self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.seq.SeqNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"children","children",2673430897),null,new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741),null,new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128),null,new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963),null,new cljs.core.Keyword(null,"tag","tag",1014018828),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.seq.SeqNode(self__.tag,self__.wrap_fn,self__.wrap_length,self__.seq_fn,self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.seq.SeqNode.cljs$lang$type = true;
rewrite_clj.node.seq.SeqNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.seq/SeqNode");
});
rewrite_clj.node.seq.SeqNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.seq/SeqNode");
});
rewrite_clj.node.seq.__GT_SeqNode = (function __GT_SeqNode(tag,wrap_fn,wrap_length,seq_fn,children){return (new rewrite_clj.node.seq.SeqNode(tag,wrap_fn,wrap_length,seq_fn,children));
});
rewrite_clj.node.seq.map__GT_SeqNode = (function map__GT_SeqNode(G__9710){return (new rewrite_clj.node.seq.SeqNode(new cljs.core.Keyword(null,"tag","tag",1014018828).cljs$core$IFn$_invoke$arity$1(G__9710),new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741).cljs$core$IFn$_invoke$arity$1(G__9710),new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963).cljs$core$IFn$_invoke$arity$1(G__9710),new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128).cljs$core$IFn$_invoke$arity$1(G__9710),new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9710),null,cljs.core.dissoc.call(null,G__9710,new cljs.core.Keyword(null,"tag","tag",1014018828),new cljs.core.Keyword(null,"wrap-fn","wrap-fn",2609347741),new cljs.core.Keyword(null,"wrap-length","wrap-length",3865755963),new cljs.core.Keyword(null,"seq-fn","seq-fn",4402945128),new cljs.core.Keyword(null,"children","children",2673430897))));
});
/**
* Create a node representing an EDN list.
*/
rewrite_clj.node.seq.list_node = (function list_node(children){return rewrite_clj.node.seq.__GT_SeqNode.call(null,new cljs.core.Keyword(null,"list","list",1017226256),rewrite_clj.node.seq.wrap_list,2,(function (p1__9714_SHARP_){return cljs.core.apply.call(null,cljs.core.list,p1__9714_SHARP_);
}),children);
});
/**
* Create a node representing an EDN vector.
*/
rewrite_clj.node.seq.vector_node = (function vector_node(children){return rewrite_clj.node.seq.__GT_SeqNode.call(null,new cljs.core.Keyword(null,"vector","vector",4488484021),rewrite_clj.node.seq.wrap_vec,2,cljs.core.vec,children);
});
/**
* Create a node representing an EDN set.
*/
rewrite_clj.node.seq.set_node = (function set_node(children){return rewrite_clj.node.seq.__GT_SeqNode.call(null,new cljs.core.Keyword(null,"set","set",1014018004),rewrite_clj.node.seq.wrap_set,3,cljs.core.set,children);
});
/**
* Create a node representing an EDN map.
*/
rewrite_clj.node.seq.map_node = (function map_node(children){return rewrite_clj.node.seq.__GT_SeqNode.call(null,new cljs.core.Keyword(null,"map","map",1014012110),rewrite_clj.node.seq.wrap_map,2,(function (p1__9715_SHARP_){return cljs.core.apply.call(null,cljs.core.hash_map,p1__9715_SHARP_);
}),children);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.comment')) {
goog.provide('rewrite_clj.node.comment');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} s
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.comment.CommentNode = (function (s,__meta,__extmap){
this.s = s;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"comment","comment",1964302801);
});
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;throw (new Error("Unsupported operation"));
});
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (1 + cljs.core.count.call(null,self__.s));
});
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str(";"),cljs.core.str(self__.s)].join('');
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9693,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9693,new cljs.core.Keyword(null,"s","s",1013904357)))
{return self__.s;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9693,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9692){var self__ = this;
var this__7091__auto____$1 = this;var pred__9695 = cljs.core.keyword_identical_QMARK_;var expr__9696 = k__7092__auto__;if(cljs.core.truth_(pred__9695.call(null,new cljs.core.Keyword(null,"s","s",1013904357),expr__9696)))
{return (new rewrite_clj.node.comment.CommentNode(G__9692,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.comment.CommentNode(self__.s,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9692),null));
}
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.comment.CommentNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"s","s",1013904357),self__.s],null))], null),self__.__extmap));
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.comment.CommentNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"s","s",1013904357),self__.s],null))], null),self__.__extmap));
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9692){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.comment.CommentNode(self__.s,G__9692,self__.__extmap,self__.__hash));
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.comment.CommentNode(self__.s,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.comment.CommentNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"s","s",1013904357),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.comment.CommentNode(self__.s,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.comment.CommentNode.cljs$lang$type = true;
rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.comment/CommentNode");
});
rewrite_clj.node.comment.CommentNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.comment/CommentNode");
});
rewrite_clj.node.comment.__GT_CommentNode = (function __GT_CommentNode(s){return (new rewrite_clj.node.comment.CommentNode(s));
});
rewrite_clj.node.comment.map__GT_CommentNode = (function map__GT_CommentNode(G__9694){return (new rewrite_clj.node.comment.CommentNode(new cljs.core.Keyword(null,"s","s",1013904357).cljs$core$IFn$_invoke$arity$1(G__9694),null,cljs.core.dissoc.call(null,G__9694,new cljs.core.Keyword(null,"s","s",1013904357))));
});
/**
* Create node representing an EDN comment.
*/
rewrite_clj.node.comment.comment_node = (function comment_node(s){return rewrite_clj.node.comment.__GT_CommentNode.call(null,s);
});
/**
* Check whether a node represents a comment.
*/
rewrite_clj.node.comment.comment_QMARK_ = (function comment_QMARK_(node){return cljs.core._EQ_.call(null,rewrite_clj.node.protocols.tag.call(null,node),new cljs.core.Keyword(null,"comment","comment",1964302801));
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.fn')) {
goog.provide('rewrite_clj.node.fn');
goog.require('cljs.core');
goog.require('clojure.walk');
goog.require('clojure.walk');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');
/**
* Construct function form.
*/
rewrite_clj.node.fn.construct_fn = (function construct_fn(syms,vararg,body){return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,body),cljs.core.vec.call(null,cljs.core.concat.call(null,syms,(cljs.core.truth_(vararg)?cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,vararg),new cljs.core.Symbol(null,"&","&",-1640531489,null)):null)))),new cljs.core.Symbol(null,"fn*","fn*",-1640430053,null));
});
/**
* Get index based on the substring following the parameter's `%`.
* Zero means vararg.
*/
rewrite_clj.node.fn.sym_index = (function sym_index(n){if(cljs.core._EQ_.call(null,n,"&"))
{return 0;
} else
{if(cljs.core._EQ_.call(null,n,""))
{return 1;
} else
{if(cljs.core.truth_(cljs.core.re_matches.call(null,/\d+/,n)))
{return parseInt(n);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{throw (new Error("arg literal must be %, %& or %integer."));
} else
{return null;
}
}
}
}
});
/**
* If symbol starting with `%`, convert to respective gensym.
*/
rewrite_clj.node.fn.symbol__GT_gensym = (function symbol__GT_gensym(sym_seq,vararg_QMARK_,max_n,sym){if((sym instanceof cljs.core.Symbol))
{var nm = cljs.core.name.call(null,sym);if(cljs.core._EQ_.call(null,nm.indexOf("%"),0))
{var i = rewrite_clj.node.fn.sym_index.call(null,cljs.core.subs.call(null,nm,1));cljs.core.swap_BANG_.call(null,max_n,cljs.core.max,i);
return cljs.core.nth.call(null,sym_seq,i);
} else
{return null;
}
} else
{return null;
}
});
/**
* Walk the form and create an expand function form.
*/
rewrite_clj.node.fn.fn_walk = (function fn_walk(form){var syms = (function (){var iter__7215__auto__ = (function iter__9671(s__9672){return (new cljs.core.LazySeq(null,(function (){var s__9672__$1 = s__9672;while(true){
var temp__4092__auto__ = cljs.core.seq.call(null,s__9672__$1);if(temp__4092__auto__)
{var s__9672__$2 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,s__9672__$2))
{var c__7213__auto__ = cljs.core.chunk_first.call(null,s__9672__$2);var size__7214__auto__ = cljs.core.count.call(null,c__7213__auto__);var b__9674 = cljs.core.chunk_buffer.call(null,size__7214__auto__);if((function (){var i__9673 = 0;while(true){
if((i__9673 < size__7214__auto__))
{var i = cljs.core._nth.call(null,c__7213__auto__,i__9673);var base = ((cljs.core._EQ_.call(null,i,0))?"rest__":[cljs.core.str("p"),cljs.core.str(i),cljs.core.str("__")].join(''));var s = cljs.core.name.call(null,cljs.core.gensym.call(null,base));cljs.core.chunk_append.call(null,b__9674,cljs.core.symbol.call(null,[cljs.core.str(s),cljs.core.str("#")].join('')));
{
var G__9691 = (i__9673 + 1);
i__9673 = G__9691;
continue;
}
} else
{return true;
}
break;
}
})())
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9674),iter__9671.call(null,cljs.core.chunk_rest.call(null,s__9672__$2)));
} else
{return cljs.core.chunk_cons.call(null,cljs.core.chunk.call(null,b__9674),null);
}
} else
{var i = cljs.core.first.call(null,s__9672__$2);var base = ((cljs.core._EQ_.call(null,i,0))?"rest__":[cljs.core.str("p"),cljs.core.str(i),cljs.core.str("__")].join(''));var s = cljs.core.name.call(null,cljs.core.gensym.call(null,base));return cljs.core.cons.call(null,cljs.core.symbol.call(null,[cljs.core.str(s),cljs.core.str("#")].join('')),iter__9671.call(null,cljs.core.rest.call(null,s__9672__$2)));
}
} else
{return null;
}
break;
}
}),null,null));
});return iter__7215__auto__.call(null,cljs.core.range.call(null));
})();var vararg_QMARK_ = false;var max_n = cljs.core.atom.call(null,0);var body = clojure.walk.prewalk.call(null,((function (syms,vararg_QMARK_,max_n){
return (function (p1__9666_SHARP_){var or__6498__auto__ = rewrite_clj.node.fn.symbol__GT_gensym.call(null,syms,vararg_QMARK_,max_n,p1__9666_SHARP_);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return p1__9666_SHARP_;
}
});})(syms,vararg_QMARK_,max_n))
,form);return rewrite_clj.node.fn.construct_fn.call(null,cljs.core.take.call(null,cljs.core.deref.call(null,max_n),cljs.core.rest.call(null,syms)),null,body);
});

/**
* @constructor
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.fn.FnNode = (function (children,__meta,__extmap){
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"fn","fn",1013907514);
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return rewrite_clj.node.fn.fn_walk.call(null,rewrite_clj.node.protocols.sexprs.call(null,self__.children));
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (3 + rewrite_clj.node.protocols.sum_lengths.call(null,self__.children));
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str("#("),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children)),cljs.core.str(")")].join('');
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9676,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9676,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9676,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9675){var self__ = this;
var this__7091__auto____$1 = this;var pred__9678 = cljs.core.keyword_identical_QMARK_;var expr__9679 = k__7092__auto__;if(cljs.core.truth_(pred__9678.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9679)))
{return (new rewrite_clj.node.fn.FnNode(G__9675,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9675),null));
}
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.fn.FnNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.fn.FnNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9675){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.fn.FnNode(self__.children,G__9675,self__.__extmap,self__.__hash));
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.fn.FnNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"children","children",2673430897),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.fn.FnNode(self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.fn.FnNode.cljs$lang$type = true;
rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.fn/FnNode");
});
rewrite_clj.node.fn.FnNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.fn/FnNode");
});
rewrite_clj.node.fn.__GT_FnNode = (function __GT_FnNode(children){return (new rewrite_clj.node.fn.FnNode(children));
});
rewrite_clj.node.fn.map__GT_FnNode = (function map__GT_FnNode(G__9677){return (new rewrite_clj.node.fn.FnNode(new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9677),null,cljs.core.dissoc.call(null,G__9677,new cljs.core.Keyword(null,"children","children",2673430897))));
});
/**
* Create node representing an anonymous function.
*/
rewrite_clj.node.fn.fn_node = (function fn_node(children){return rewrite_clj.node.fn.__GT_FnNode.call(null,children);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.reader-macro')) {
goog.provide('rewrite_clj.node.reader_macro');
goog.require('cljs.core');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} tag
* @param {*} prefix
* @param {*} suffix
* @param {*} sexpr_fn
* @param {*} sexpr_count
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.reader_macro.ReaderNode = (function (tag,prefix,suffix,sexpr_fn,sexpr_count,children,__meta,__extmap){
this.tag = tag;
this.prefix = prefix;
this.suffix = suffix;
this.sexpr_fn = sexpr_fn;
this.sexpr_count = sexpr_count;
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>6){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.tag;
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return cljs.core.not.call(null,self__.sexpr_fn);
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;if(cljs.core.truth_(self__.sexpr_fn))
{return self__.sexpr_fn.call(null,rewrite_clj.node.protocols.sexprs.call(null,self__.children));
} else
{throw (new Error("Unsupported operation"));
}
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (((rewrite_clj.node.protocols.sum_lengths.call(null,self__.children) + 1) + cljs.core.count.call(null,self__.prefix)) + cljs.core.count.call(null,self__.suffix));
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str("#"),cljs.core.str(self__.prefix),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children)),cljs.core.str(self__.suffix)].join('');
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9635,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9635,new cljs.core.Keyword(null,"tag","tag",1014018828)))
{return self__.tag;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9635,new cljs.core.Keyword(null,"prefix","prefix",4328760836)))
{return self__.prefix;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9635,new cljs.core.Keyword(null,"suffix","suffix",4417448643)))
{return self__.suffix;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9635,new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583)))
{return self__.sexpr_fn;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9635,new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748)))
{return self__.sexpr_count;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9635,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9635,else__7087__auto__);
} else
{return null;
}
}
}
}
}
}
}
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9634){var self__ = this;
var this__7091__auto____$1 = this;var pred__9637 = cljs.core.keyword_identical_QMARK_;var expr__9638 = k__7092__auto__;if(cljs.core.truth_(pred__9637.call(null,new cljs.core.Keyword(null,"tag","tag",1014018828),expr__9638)))
{return (new rewrite_clj.node.reader_macro.ReaderNode(G__9634,self__.prefix,self__.suffix,self__.sexpr_fn,self__.sexpr_count,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9637.call(null,new cljs.core.Keyword(null,"prefix","prefix",4328760836),expr__9638)))
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,G__9634,self__.suffix,self__.sexpr_fn,self__.sexpr_count,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9637.call(null,new cljs.core.Keyword(null,"suffix","suffix",4417448643),expr__9638)))
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,G__9634,self__.sexpr_fn,self__.sexpr_count,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9637.call(null,new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583),expr__9638)))
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,G__9634,self__.sexpr_count,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9637.call(null,new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748),expr__9638)))
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,self__.sexpr_fn,G__9634,self__.children,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9637.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9638)))
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,self__.sexpr_fn,self__.sexpr_count,G__9634,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,self__.sexpr_fn,self__.sexpr_count,self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9634),null));
}
}
}
}
}
}
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;if(cljs.core.truth_(self__.sexpr_count))
{rewrite_clj.node.protocols.assert_sexpr_count.call(null,children_SINGLEQUOTE_,self__.sexpr_count);
} else
{}
return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.reader-macro.ReaderNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"prefix","prefix",4328760836),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"suffix","suffix",4417448643),self__.suffix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583),self__.sexpr_fn],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748),self__.sexpr_count],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"tag","tag",1014018828),self__.tag],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"prefix","prefix",4328760836),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"suffix","suffix",4417448643),self__.suffix],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583),self__.sexpr_fn],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748),self__.sexpr_count],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (6 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9634){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,self__.sexpr_fn,self__.sexpr_count,self__.children,G__9634,self__.__extmap,self__.__hash));
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,self__.sexpr_fn,self__.sexpr_count,self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,"children","children",2673430897),null,new cljs.core.Keyword(null,"prefix","prefix",4328760836),null,new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748),null,new cljs.core.Keyword(null,"suffix","suffix",4417448643),null,new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583),null,new cljs.core.Keyword(null,"tag","tag",1014018828),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.reader_macro.ReaderNode(self__.tag,self__.prefix,self__.suffix,self__.sexpr_fn,self__.sexpr_count,self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.reader_macro.ReaderNode.cljs$lang$type = true;
rewrite_clj.node.reader_macro.ReaderNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.reader-macro/ReaderNode");
});
rewrite_clj.node.reader_macro.ReaderNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.reader-macro/ReaderNode");
});
rewrite_clj.node.reader_macro.__GT_ReaderNode = (function __GT_ReaderNode(tag,prefix,suffix,sexpr_fn,sexpr_count,children){return (new rewrite_clj.node.reader_macro.ReaderNode(tag,prefix,suffix,sexpr_fn,sexpr_count,children));
});
rewrite_clj.node.reader_macro.map__GT_ReaderNode = (function map__GT_ReaderNode(G__9636){return (new rewrite_clj.node.reader_macro.ReaderNode(new cljs.core.Keyword(null,"tag","tag",1014018828).cljs$core$IFn$_invoke$arity$1(G__9636),new cljs.core.Keyword(null,"prefix","prefix",4328760836).cljs$core$IFn$_invoke$arity$1(G__9636),new cljs.core.Keyword(null,"suffix","suffix",4417448643).cljs$core$IFn$_invoke$arity$1(G__9636),new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583).cljs$core$IFn$_invoke$arity$1(G__9636),new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748).cljs$core$IFn$_invoke$arity$1(G__9636),new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9636),null,cljs.core.dissoc.call(null,G__9636,new cljs.core.Keyword(null,"tag","tag",1014018828),new cljs.core.Keyword(null,"prefix","prefix",4328760836),new cljs.core.Keyword(null,"suffix","suffix",4417448643),new cljs.core.Keyword(null,"sexpr-fn","sexpr-fn",2559563583),new cljs.core.Keyword(null,"sexpr-count","sexpr-count",1404326748),new cljs.core.Keyword(null,"children","children",2673430897))));
});

/**
* @constructor
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.reader_macro.ReaderMacroNode = (function (children,__meta,__extmap){
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"reader-macro","reader-macro",3215531444);
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (this$){var self__ = this;
var this$__$1 = this;return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,rewrite_clj.node.protocols.string.call(null,this$__$1)),new cljs.core.Symbol(null,"read-string","read-string",641340897,null));
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (rewrite_clj.node.protocols.sum_lengths.call(null,self__.children) + 1);
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str("#"),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children))].join('');
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9641,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9641,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9641,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9640){var self__ = this;
var this__7091__auto____$1 = this;var pred__9643 = cljs.core.keyword_identical_QMARK_;var expr__9644 = k__7092__auto__;if(cljs.core.truth_(pred__9643.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9644)))
{return (new rewrite_clj.node.reader_macro.ReaderMacroNode(G__9640,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.reader_macro.ReaderMacroNode(self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9640),null));
}
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;rewrite_clj.node.protocols.assert_sexpr_count.call(null,children_SINGLEQUOTE_,2);
return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.reader-macro.ReaderMacroNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9640){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.reader_macro.ReaderMacroNode(self__.children,G__9640,self__.__extmap,self__.__hash));
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.reader_macro.ReaderMacroNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"children","children",2673430897),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.reader_macro.ReaderMacroNode(self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.reader_macro.ReaderMacroNode.cljs$lang$type = true;
rewrite_clj.node.reader_macro.ReaderMacroNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.reader-macro/ReaderMacroNode");
});
rewrite_clj.node.reader_macro.ReaderMacroNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.reader-macro/ReaderMacroNode");
});
rewrite_clj.node.reader_macro.__GT_ReaderMacroNode = (function __GT_ReaderMacroNode(children){return (new rewrite_clj.node.reader_macro.ReaderMacroNode(children));
});
rewrite_clj.node.reader_macro.map__GT_ReaderMacroNode = (function map__GT_ReaderMacroNode(G__9642){return (new rewrite_clj.node.reader_macro.ReaderMacroNode(new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9642),null,cljs.core.dissoc.call(null,G__9642,new cljs.core.Keyword(null,"children","children",2673430897))));
});

/**
* @constructor
* @param {*} children
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.reader_macro.DerefNode = (function (children,__meta,__extmap){
this.children = children;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>1){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"deref","deref",1109378020);
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (this$){var self__ = this;
var this$__$1 = this;return cljs.core.list_STAR_.call(null,new cljs.core.Symbol(null,"deref","deref",-1545057749,null),rewrite_clj.node.protocols.sexprs.call(null,self__.children));
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return (rewrite_clj.node.protocols.sum_lengths.call(null,self__.children) + 1);
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return [cljs.core.str("@"),cljs.core.str(rewrite_clj.node.protocols.concat_strings.call(null,self__.children))].join('');
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9647,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9647,new cljs.core.Keyword(null,"children","children",2673430897)))
{return self__.children;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9647,else__7087__auto__);
} else
{return null;
}
}
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9646){var self__ = this;
var this__7091__auto____$1 = this;var pred__9649 = cljs.core.keyword_identical_QMARK_;var expr__9650 = k__7092__auto__;if(cljs.core.truth_(pred__9649.call(null,new cljs.core.Keyword(null,"children","children",2673430897),expr__9650)))
{return (new rewrite_clj.node.reader_macro.DerefNode(G__9646,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.reader_macro.DerefNode(self__.children,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9646),null));
}
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$ = true;
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$inner_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return true;
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$children$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return self__.children;
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$InnerNode$replace_children$arity$2 = (function (this$,children_SINGLEQUOTE_){var self__ = this;
var this$__$1 = this;rewrite_clj.node.protocols.assert_sexpr_count.call(null,children_SINGLEQUOTE_,1);
return cljs.core.assoc.call(null,this$__$1,new cljs.core.Keyword(null,"children","children",2673430897),children_SINGLEQUOTE_);
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.reader-macro.DerefNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.reader_macro.DerefNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"children","children",2673430897),self__.children],null))], null),self__.__extmap));
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (1 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9646){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.reader_macro.DerefNode(self__.children,G__9646,self__.__extmap,self__.__hash));
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.reader_macro.DerefNode(self__.children,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.reader_macro.DerefNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"children","children",2673430897),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.reader_macro.DerefNode(self__.children,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.reader_macro.DerefNode.cljs$lang$type = true;
rewrite_clj.node.reader_macro.DerefNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.reader-macro/DerefNode");
});
rewrite_clj.node.reader_macro.DerefNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.reader-macro/DerefNode");
});
rewrite_clj.node.reader_macro.__GT_DerefNode = (function __GT_DerefNode(children){return (new rewrite_clj.node.reader_macro.DerefNode(children));
});
rewrite_clj.node.reader_macro.map__GT_DerefNode = (function map__GT_DerefNode(G__9648){return (new rewrite_clj.node.reader_macro.DerefNode(new cljs.core.Keyword(null,"children","children",2673430897).cljs$core$IFn$_invoke$arity$1(G__9648),null,cljs.core.dissoc.call(null,G__9648,new cljs.core.Keyword(null,"children","children",2673430897))));
});
rewrite_clj.node.reader_macro.__GT_node = (function __GT_node(tag,prefix,suffix,sexpr_fn,sexpr_count,children){if(cljs.core.truth_(sexpr_count))
{rewrite_clj.node.protocols.assert_sexpr_count.call(null,children,sexpr_count);
} else
{}
return rewrite_clj.node.reader_macro.__GT_ReaderNode.call(null,tag,prefix,suffix,sexpr_fn,sexpr_count,children);
});
/**
* Create node representing a var.
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.reader_macro.var_node = (function var_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.reader_macro.__GT_node.call(null,new cljs.core.Keyword(null,"var","var",1014020761),"'","",((function (children){
return (function (p1__9652_SHARP_){return cljs.core.list_STAR_.call(null,new cljs.core.Symbol(null,"var","var",-1640415008,null),p1__9652_SHARP_);
});})(children))
,1,children);
} else
{{
var G__9664 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9664;
continue;
}
}
break;
}
});
/**
* Create node representing an inline evaluation. (`#=...`)
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.reader_macro.eval_node = (function eval_node(children){while(true){
if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.reader_macro.__GT_node.call(null,new cljs.core.Keyword(null,"eval","eval",1017029646),"=","",((function (children){
return (function (p1__9653_SHARP_){return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.list_STAR_.call(null,new cljs.core.Symbol(null,"quote","quote",-1532577739,null),p1__9653_SHARP_)),new cljs.core.Symbol(null,"eval","eval",-1637406123,null));
});})(children))
,1,children);
} else
{{
var G__9665 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null);
children = G__9665;
continue;
}
}
break;
}
});
/**
* Create node representing a reader macro. (`#... ...`)
*/
rewrite_clj.node.reader_macro.reader_macro_node = (function() {
var reader_macro_node = null;
var reader_macro_node__1 = (function (children){return rewrite_clj.node.reader_macro.__GT_ReaderMacroNode.call(null,children);
});
var reader_macro_node__2 = (function (macro_node,form_node){return rewrite_clj.node.reader_macro.__GT_ReaderMacroNode.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [macro_node,rewrite_clj.node.whitespace.spaces.call(null,1),form_node], null));
});
reader_macro_node = function(macro_node,form_node){
switch(arguments.length){
case 1:
return reader_macro_node__1.call(this,macro_node);
case 2:
return reader_macro_node__2.call(this,macro_node,form_node);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reader_macro_node.cljs$core$IFn$_invoke$arity$1 = reader_macro_node__1;
reader_macro_node.cljs$core$IFn$_invoke$arity$2 = reader_macro_node__2;
return reader_macro_node;
})()
;
/**
* Create node representing the dereferencing of a form. (`@...`)
* Takes either a seq of nodes or a single one.
*/
rewrite_clj.node.reader_macro.deref_node = (function deref_node(children){if(cljs.core.sequential_QMARK_.call(null,children))
{return rewrite_clj.node.reader_macro.__GT_DerefNode.call(null,children);
} else
{return rewrite_clj.node.reader_macro.__GT_DerefNode.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [children], null));
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.keyword')) {
goog.provide('rewrite_clj.node.keyword');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.protocols');

/**
* @constructor
* @param {*} k
* @param {*} namespaced_QMARK_
* @param {*} __meta
* @param {*} __extmap
* @param {*=} __meta 
* @param {*=} __extmap
*/
rewrite_clj.node.keyword.KeywordNode = (function (k,namespaced_QMARK_,__meta,__extmap){
this.k = k;
this.namespaced_QMARK_ = namespaced_QMARK_;
this.__meta = __meta;
this.__extmap = __extmap;
this.cljs$lang$protocol_mask$partition0$ = 2229667594;
this.cljs$lang$protocol_mask$partition1$ = 8192;
if(arguments.length>2){
this.__meta = __meta;
this.__extmap = __extmap;
} else {
this.__meta=null;
this.__extmap=null;
}
})
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__7079__auto__){var self__ = this;
var this__7079__auto____$1 = this;var h__6909__auto__ = self__.__hash;if(!((h__6909__auto__ == null)))
{return h__6909__auto__;
} else
{var h__6909__auto____$1 = cljs.core.hash_imap.call(null,this__7079__auto____$1);self__.__hash = h__6909__auto____$1;
return h__6909__auto____$1;
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$ = true;
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$tag$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return new cljs.core.Keyword(null,"token","token",1124445547);
});
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$printable_only_QMARK_$arity$1 = (function (_){var self__ = this;
var ___$1 = this;return false;
});
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$sexpr$arity$1 = (function (_){var self__ = this;
var ___$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = self__.namespaced_QMARK_;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,cljs.core.namespace.call(null,self__.k));
} else
{return and__6486__auto__;
}
})()))
{throw (new Error("Namespaced keywords not supported !"));
} else
{return self__.k;
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$length$arity$1 = (function (this$){var self__ = this;
var this$__$1 = this;var c = (cljs.core.count.call(null,cljs.core.name.call(null,self__.k)) + 1);if(cljs.core.truth_(self__.namespaced_QMARK_))
{return (c + 1);
} else
{var temp__4090__auto__ = cljs.core.namespace.call(null,self__.k);if(cljs.core.truth_(temp__4090__auto__))
{var nspace = temp__4090__auto__;return ((1 + c) + cljs.core.count.call(null,nspace));
} else
{return c;
}
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$Node$string$arity$1 = (function (_){var self__ = this;
var ___$1 = this;var v = cljs.core.pr_str.call(null,self__.k);if(cljs.core.truth_(self__.namespaced_QMARK_))
{return [cljs.core.str(":"),cljs.core.str(v)].join('');
} else
{return v;
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__7084__auto__,k__7085__auto__){var self__ = this;
var this__7084__auto____$1 = this;return cljs.core._lookup.call(null,this__7084__auto____$1,k__7085__auto__,null);
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__7086__auto__,k9615,else__7087__auto__){var self__ = this;
var this__7086__auto____$1 = this;if(cljs.core.keyword_identical_QMARK_.call(null,k9615,new cljs.core.Keyword(null,"k","k",1013904349)))
{return self__.k;
} else
{if(cljs.core.keyword_identical_QMARK_.call(null,k9615,new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608)))
{return self__.namespaced_QMARK_;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,self__.__extmap,k9615,else__7087__auto__);
} else
{return null;
}
}
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__7091__auto__,k__7092__auto__,G__9614){var self__ = this;
var this__7091__auto____$1 = this;var pred__9617 = cljs.core.keyword_identical_QMARK_;var expr__9618 = k__7092__auto__;if(cljs.core.truth_(pred__9617.call(null,new cljs.core.Keyword(null,"k","k",1013904349),expr__9618)))
{return (new rewrite_clj.node.keyword.KeywordNode(G__9614,self__.namespaced_QMARK_,self__.__meta,self__.__extmap,null));
} else
{if(cljs.core.truth_(pred__9617.call(null,new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608),expr__9618)))
{return (new rewrite_clj.node.keyword.KeywordNode(self__.k,G__9614,self__.__meta,self__.__extmap,null));
} else
{return (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.namespaced_QMARK_,self__.__meta,cljs.core.assoc.call(null,self__.__extmap,k__7092__auto__,G__9614),null));
}
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__7098__auto__,writer__7099__auto__,opts__7100__auto__){var self__ = this;
var this__7098__auto____$1 = this;var pr_pair__7101__auto__ = ((function (this__7098__auto____$1){
return (function (keyval__7102__auto__){return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,cljs.core.pr_writer,""," ","",opts__7100__auto__,keyval__7102__auto__);
});})(this__7098__auto____$1))
;return cljs.core.pr_sequential_writer.call(null,writer__7099__auto__,pr_pair__7101__auto__,"#rewrite-clj.node.keyword.KeywordNode{",", ","}",opts__7100__auto__,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"k","k",1013904349),self__.k],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608),self__.namespaced_QMARK_],null))], null),self__.__extmap));
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__7089__auto__,entry__7090__auto__){var self__ = this;
var this__7089__auto____$1 = this;if(cljs.core.vector_QMARK_.call(null,entry__7090__auto__))
{return cljs.core._assoc.call(null,this__7089__auto____$1,cljs.core._nth.call(null,entry__7090__auto__,0),cljs.core._nth.call(null,entry__7090__auto__,1));
} else
{return cljs.core.reduce.call(null,cljs.core._conj,this__7089__auto____$1,entry__7090__auto__);
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.toString = (function (){var self__ = this;
var this$ = this;return this$.rewrite_clj$node$protocols$Node$string$arity$1(null);
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__7096__auto__){var self__ = this;
var this__7096__auto____$1 = this;return cljs.core.seq.call(null,cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"k","k",1013904349),self__.k],null)),(new cljs.core.PersistentVector(null,2,5,cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608),self__.namespaced_QMARK_],null))], null),self__.__extmap));
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__7088__auto__){var self__ = this;
var this__7088__auto____$1 = this;return (2 + cljs.core.count.call(null,self__.__extmap));
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this__7080__auto__,other__7081__auto__){var self__ = this;
var this__7080__auto____$1 = this;if(cljs.core.truth_((function (){var and__6486__auto__ = other__7081__auto__;if(cljs.core.truth_(and__6486__auto__))
{return ((this__7080__auto____$1.constructor === other__7081__auto__.constructor)) && (cljs.core.equiv_map.call(null,this__7080__auto____$1,other__7081__auto__));
} else
{return and__6486__auto__;
}
})()))
{return true;
} else
{return false;
}
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__7083__auto__,G__9614){var self__ = this;
var this__7083__auto____$1 = this;return (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.namespaced_QMARK_,G__9614,self__.__extmap,self__.__hash));
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__7078__auto__){var self__ = this;
var this__7078__auto____$1 = this;return (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.namespaced_QMARK_,self__.__meta,self__.__extmap,self__.__hash));
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__7082__auto__){var self__ = this;
var this__7082__auto____$1 = this;return self__.__meta;
});
rewrite_clj.node.keyword.KeywordNode.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__7093__auto__,k__7094__auto__){var self__ = this;
var this__7093__auto____$1 = this;if(cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"k","k",1013904349),null,new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608),null], null), null),k__7094__auto__))
{return cljs.core.dissoc.call(null,cljs.core.with_meta.call(null,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,this__7093__auto____$1),self__.__meta),k__7094__auto__);
} else
{return (new rewrite_clj.node.keyword.KeywordNode(self__.k,self__.namespaced_QMARK_,self__.__meta,cljs.core.not_empty.call(null,cljs.core.dissoc.call(null,self__.__extmap,k__7094__auto__)),null));
}
});
rewrite_clj.node.keyword.KeywordNode.cljs$lang$type = true;
rewrite_clj.node.keyword.KeywordNode.cljs$lang$ctorPrSeq = (function (this__7118__auto__){return cljs.core._conj.call(null,cljs.core.List.EMPTY,"rewrite-clj.node.keyword/KeywordNode");
});
rewrite_clj.node.keyword.KeywordNode.cljs$lang$ctorPrWriter = (function (this__7118__auto__,writer__7119__auto__){return cljs.core._write.call(null,writer__7119__auto__,"rewrite-clj.node.keyword/KeywordNode");
});
rewrite_clj.node.keyword.__GT_KeywordNode = (function __GT_KeywordNode(k,namespaced_QMARK_){return (new rewrite_clj.node.keyword.KeywordNode(k,namespaced_QMARK_));
});
rewrite_clj.node.keyword.map__GT_KeywordNode = (function map__GT_KeywordNode(G__9616){return (new rewrite_clj.node.keyword.KeywordNode(new cljs.core.Keyword(null,"k","k",1013904349).cljs$core$IFn$_invoke$arity$1(G__9616),new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608).cljs$core$IFn$_invoke$arity$1(G__9616),null,cljs.core.dissoc.call(null,G__9616,new cljs.core.Keyword(null,"k","k",1013904349),new cljs.core.Keyword(null,"namespaced?","namespaced?",1804757608))));
});
/**
* Create node representing a keyword. If `namespaced?` is given as `true`
* a keyword à la `::x` or `::ns/x` (i.e. namespaced/aliased) is generated.
* @param {...*} var_args
*/
rewrite_clj.node.keyword.keyword_node = (function() { 
var keyword_node__delegate = function (k,p__9620){var vec__9622 = p__9620;var namespaced_QMARK_ = cljs.core.nth.call(null,vec__9622,0,null);if((k instanceof cljs.core.Keyword))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"keyword?","keyword?",-1117382353,null),new cljs.core.Symbol(null,"k","k",-1640531420,null))))].join('')));
}
return rewrite_clj.node.keyword.__GT_KeywordNode.call(null,k,namespaced_QMARK_);
};
var keyword_node = function (k,var_args){
var p__9620 = null;if (arguments.length > 1) {
  p__9620 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return keyword_node__delegate.call(this,k,p__9620);};
keyword_node.cljs$lang$maxFixedArity = 1;
keyword_node.cljs$lang$applyTo = (function (arglist__9633){
var k = cljs.core.first(arglist__9633);
var p__9620 = cljs.core.rest(arglist__9633);
return keyword_node__delegate(k,p__9620);
});
keyword_node.cljs$core$IFn$_invoke$arity$variadic = keyword_node__delegate;
return keyword_node;
})()
;
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node.coercer')) {
goog.provide('rewrite_clj.node.coercer');
goog.require('cljs.core');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.keyword');
goog.require('rewrite_clj.node.stringz');
goog.require('rewrite_clj.node.forms');
goog.require('rewrite_clj.node.fn');
goog.require('rewrite_clj.node.comment');
goog.require('rewrite_clj.node.token');
goog.require('rewrite_clj.node.quote');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.uneval');
goog.require('rewrite_clj.node.meta');
goog.require('rewrite_clj.node.reader_macro');
goog.require('rewrite_clj.node.seq');
goog.require('rewrite_clj.node.keyword');
goog.require('rewrite_clj.node.reader_macro');
goog.require('rewrite_clj.node.fn');
goog.require('rewrite_clj.node.comment');
goog.require('rewrite_clj.node.seq');
goog.require('rewrite_clj.node.forms');
goog.require('rewrite_clj.node.quote');
goog.require('rewrite_clj.node.uneval');
goog.require('rewrite_clj.node.meta');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.token');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.stringz');
rewrite_clj.node.coercer.node_with_meta = (function node_with_meta(n,value){if((function (){var G__9743 = value;if(G__9743)
{var bit__7148__auto__ = (G__9743.cljs$lang$protocol_mask$partition0$ & 262144);if((bit__7148__auto__) || (G__9743.cljs$core$IWithMeta$))
{return true;
} else
{if((!G__9743.cljs$lang$protocol_mask$partition0$))
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9743);
} else
{return false;
}
}
} else
{return cljs.core.native_satisfies_QMARK_.call(null,cljs.core.IWithMeta,G__9743);
}
})())
{var mta = cljs.core.meta.call(null,value);if(cljs.core.empty_QMARK_.call(null,mta))
{return n;
} else
{return rewrite_clj.node.meta.meta_node.call(null,rewrite_clj.node.protocols.coerce.call(null,mta),n);
}
} else
{return n;
}
});
(rewrite_clj.node.protocols.NodeCoerceable["object"] = true);
(rewrite_clj.node.protocols.coerce["object"] = (function (v){return rewrite_clj.node.coercer.node_with_meta.call(null,rewrite_clj.node.token.token_node.call(null,v),v);
}));
(rewrite_clj.node.protocols.NodeCoerceable["number"] = true);
(rewrite_clj.node.protocols.coerce["number"] = (function (n){return rewrite_clj.node.coercer.node_with_meta.call(null,rewrite_clj.node.token.token_node.call(null,n),n);
}));
(rewrite_clj.node.protocols.NodeCoerceable["string"] = true);
(rewrite_clj.node.protocols.coerce["string"] = (function (n){return rewrite_clj.node.coercer.node_with_meta.call(null,rewrite_clj.node.stringz.string_node.call(null,n),n);
}));
rewrite_clj.node.coercer.seq_node = (function seq_node(f,sq){return rewrite_clj.node.coercer.node_with_meta.call(null,f.call(null,cljs.core.vec.call(null,rewrite_clj.node.whitespace.space_separated.call(null,cljs.core.map.call(null,rewrite_clj.node.protocols.coerce,sq)))),sq);
});
cljs.core.PersistentHashSet.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
cljs.core.PersistentHashSet.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){var sq__$1 = this;return rewrite_clj.node.coercer.seq_node.call(null,rewrite_clj.node.seq.set_node,sq__$1);
});
cljs.core.List.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
cljs.core.List.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){var sq__$1 = this;return rewrite_clj.node.coercer.seq_node.call(null,rewrite_clj.node.seq.list_node,sq__$1);
});
cljs.core.PersistentVector.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
cljs.core.PersistentVector.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (sq){var sq__$1 = this;return rewrite_clj.node.coercer.seq_node.call(null,rewrite_clj.node.seq.vector_node,sq__$1);
});
var comma_9758 = rewrite_clj.node.whitespace.whitespace_node.call(null,", ");var space_9759 = rewrite_clj.node.whitespace.whitespace_node.call(null," ");rewrite_clj.node.coercer.map__GT_children = ((function (comma_9758,space_9759){
return (function map__GT_children(m){return cljs.core.vec.call(null,cljs.core.butlast.call(null,cljs.core.mapcat.call(null,((function (comma_9758,space_9759){
return (function (p__9746){var vec__9747 = p__9746;var k = cljs.core.nth.call(null,vec__9747,0,null);var v = cljs.core.nth.call(null,vec__9747,1,null);return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.node.protocols.coerce.call(null,k),space_9759,rewrite_clj.node.protocols.coerce.call(null,v),comma_9758], null);
});})(comma_9758,space_9759))
,m)));
});})(comma_9758,space_9759))
;
cljs.core.PersistentHashMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
cljs.core.PersistentHashMap.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (m){var m__$1 = this;return rewrite_clj.node.coercer.node_with_meta.call(null,rewrite_clj.node.seq.map_node.call(null,rewrite_clj.node.coercer.map__GT_children.call(null,m__$1)),m__$1);
});
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.reader_macro.ReaderMacroNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.reader_macro.DerefNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.quote.QuoteNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.whitespace.NewlineNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.token.TokenNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.meta.MetaNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.comment.CommentNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.seq.SeqNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.fn.FnNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.forms.FormsNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.whitespace.WhitespaceNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.keyword.KeywordNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.stringz.StringNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$ = true;
rewrite_clj.node.reader_macro.ReaderNode.prototype.rewrite_clj$node$protocols$NodeCoerceable$coerce$arity$1 = (function (v){var v__$1 = this;return v__$1;
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.node')) {
goog.provide('rewrite_clj.node');
goog.require('cljs.core');
goog.require('rewrite_clj.node.keyword');
goog.require('rewrite_clj.node.reader_macro');
goog.require('rewrite_clj.node.forms');
goog.require('rewrite_clj.node.fn');
goog.require('rewrite_clj.node.comment');
goog.require('rewrite_clj.node.comment');
goog.require('rewrite_clj.node.seq');
goog.require('rewrite_clj.node.keyword');
goog.require('rewrite_clj.node.forms');
goog.require('rewrite_clj.node.coercer');
goog.require('rewrite_clj.node.quote');
goog.require('rewrite_clj.node.quote');
goog.require('rewrite_clj.node.uneval');
goog.require('rewrite_clj.node.token');
goog.require('rewrite_clj.node.fn');
goog.require('rewrite_clj.node.meta');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.token');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.seq');
goog.require('rewrite_clj.node.protocols');
goog.require('rewrite_clj.node.stringz');
goog.require('rewrite_clj.node.reader_macro');
goog.require('rewrite_clj.node.meta');
goog.require('rewrite_clj.node.stringz');
goog.require('rewrite_clj.node.whitespace');
goog.require('rewrite_clj.node.uneval');
/**
* See [[protocols/tag]]
*/
rewrite_clj.node.tag = rewrite_clj.node.protocols.tag;
/**
* See [[protocols/sexpr]]
*/
rewrite_clj.node.sexpr = rewrite_clj.node.protocols.sexpr;
/**
* See [[protocols/string]]
*/
rewrite_clj.node.string = rewrite_clj.node.protocols.string;
/**
* See [[protocols/children]]
*/
rewrite_clj.node.children = rewrite_clj.node.protocols.children;
/**
* See [[protocols/sexprs]]
*/
rewrite_clj.node.child_sexprs = rewrite_clj.node.protocols.child_sexprs;
/**
* See [[protocols/replace-children]]
*/
rewrite_clj.node.replace_children = rewrite_clj.node.protocols.replace_children;
/**
* See [[protocols/inner?]]
*/
rewrite_clj.node.inner_QMARK_ = rewrite_clj.node.protocols.inner_QMARK_;
/**
* See [[protocols/printable-only?]]
*/
rewrite_clj.node.printable_only_QMARK_ = rewrite_clj.node.protocols.printable_only_QMARK_;
/**
* See [[protocols/coerce]]
*/
rewrite_clj.node.coerce = rewrite_clj.node.protocols.coerce;
/**
* see [[forms/forms-node]]
*/
rewrite_clj.node.forms_node = rewrite_clj.node.forms.forms_node;
/**
* see [[keyword/keyword-node]]
*/
rewrite_clj.node.keyword_node = rewrite_clj.node.keyword.keyword_node;
/**
* See [[seq/list-node]]
*/
rewrite_clj.node.list_node = rewrite_clj.node.seq.list_node;
/**
* See [[seq/vector-node]]
*/
rewrite_clj.node.vector_node = rewrite_clj.node.seq.vector_node;
/**
* See [[seq/set-node]]
*/
rewrite_clj.node.set_node = rewrite_clj.node.seq.set_node;
/**
* See [[seq/map-node]]
*/
rewrite_clj.node.map_node = rewrite_clj.node.seq.map_node;
/**
* See [[stringz/string-node]]
*/
rewrite_clj.node.string_node = rewrite_clj.node.stringz.string_node;
/**
* See [[comment/comment-node]]
*/
rewrite_clj.node.comment_node = rewrite_clj.node.comment.comment_node;
/**
* See [[comment/comment?]]
*/
rewrite_clj.node.comment_QMARK_ = rewrite_clj.node.comment.comment_QMARK_;
/**
* See [[whitespace/whitespace-node]]
*/
rewrite_clj.node.whitespace_node = rewrite_clj.node.whitespace.whitespace_node;
/**
* See [[whitespace/newline-node]]
*/
rewrite_clj.node.newline_node = rewrite_clj.node.whitespace.newline_node;
/**
* See [[whitespace/spaces]]
*/
rewrite_clj.node.spaces = rewrite_clj.node.whitespace.spaces;
/**
* See [[whitespace/newlines]]
*/
rewrite_clj.node.newlines = rewrite_clj.node.whitespace.newlines;
/**
* See [[whitespace/whitespace?]]
*/
rewrite_clj.node.whitespace_QMARK_ = rewrite_clj.node.whitespace.whitespace_QMARK_;
/**
* See [[whitespace/linebreak?]]
*/
rewrite_clj.node.linebreak_QMARK_ = rewrite_clj.node.whitespace.linebreak_QMARK_;
/**
* Check whether the given node represents whitespace or comment.
*/
rewrite_clj.node.whitespace_or_comment_QMARK_ = (function whitespace_or_comment_QMARK_(node){var or__6498__auto__ = rewrite_clj.node.whitespace_QMARK_.call(null,node);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.node.comment_QMARK_.call(null,node);
}
});
/**
* See [[token/token-node]]
*/
rewrite_clj.node.token_node = rewrite_clj.node.token.token_node;
/**
* See [[reader-macro/var-node]]
*/
rewrite_clj.node.var_node = rewrite_clj.node.reader_macro.var_node;
/**
* See [[reader-macro/eval-node]]
*/
rewrite_clj.node.eval_node = rewrite_clj.node.reader_macro.eval_node;
/**
* See [[reader-macro/reader-macro-node]]
*/
rewrite_clj.node.reader_macro_node = rewrite_clj.node.reader_macro.reader_macro_node;
/**
* See [[reader-macro/deref-node]]
*/
rewrite_clj.node.deref_node = rewrite_clj.node.reader_macro.deref_node;
/**
* See [[quote/quote-node]]
*/
rewrite_clj.node.quote_node = rewrite_clj.node.quote.quote_node;
/**
* See [[quote/syntax-quote-node]]
*/
rewrite_clj.node.syntax_quote_node = rewrite_clj.node.quote.syntax_quote_node;
/**
* See [[quote/unquote-node]]
*/
rewrite_clj.node.unquote_node = rewrite_clj.node.quote.unquote_node;
/**
* See [[quote/unquote-splicing-node]]
*/
rewrite_clj.node.unquote_splicing_node = rewrite_clj.node.quote.unquote_splicing_node;
/**
* See [[uneval/uneval-node]]
*/
rewrite_clj.node.uneval_node = rewrite_clj.node.uneval.uneval_node;
/**
* See [[meta/meta-node]]
*/
rewrite_clj.node.meta_node = rewrite_clj.node.meta.meta_node;
/**
* See [[fn/fn-node]]
*/
rewrite_clj.node.fn_node = rewrite_clj.node.fn.fn_node;
}
if(!lt.util.load.provided_QMARK_('clojure.zip')) {
goog.provide('clojure.zip');
goog.require('cljs.core');
/**
* Creates a new zipper structure.
* 
* branch? is a fn that, given a node, returns true if can have
* children, even if it currently doesn't.
* 
* children is a fn that, given a branch node, returns a seq of its
* children.
* 
* make-node is a fn that, given an existing node and a seq of
* children, returns a new branch node with the supplied children.
* root is the root node.
*/
clojure.zip.zipper = (function zipper(branch_QMARK_,children,make_node,root){return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [root,null], null),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword("zip","make-node","zip/make-node",2241612572),make_node,new cljs.core.Keyword("zip","children","zip/children",2681289882),children,new cljs.core.Keyword("zip","branch?","zip/branch?",1159334776),branch_QMARK_], null));
});
/**
* Returns a zipper for nested sequences, given a root sequence
*/
clojure.zip.seq_zip = (function seq_zip(root){return clojure.zip.zipper.call(null,cljs.core.seq_QMARK_,cljs.core.identity,(function (node,children){return cljs.core.with_meta.call(null,children,cljs.core.meta.call(null,node));
}),root);
});
/**
* Returns a zipper for nested vectors, given a root vector
*/
clojure.zip.vector_zip = (function vector_zip(root){return clojure.zip.zipper.call(null,cljs.core.vector_QMARK_,cljs.core.seq,(function (node,children){return cljs.core.with_meta.call(null,cljs.core.vec.call(null,children),cljs.core.meta.call(null,node));
}),root);
});
/**
* Returns a zipper for xml elements (as from xml/parse),
* given a root element
*/
clojure.zip.xml_zip = (function xml_zip(root){return clojure.zip.zipper.call(null,cljs.core.complement.call(null,cljs.core.string_QMARK_),cljs.core.comp.call(null,cljs.core.seq,new cljs.core.Keyword(null,"content","content",1965434859)),(function (node,children){return cljs.core.assoc.call(null,node,new cljs.core.Keyword(null,"content","content",1965434859),(function (){var and__6486__auto__ = children;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.apply.call(null,cljs.core.vector,children);
} else
{return and__6486__auto__;
}
})());
}),root);
});
/**
* Returns the node at loc
*/
clojure.zip.node = (function node(loc){return loc.call(null,0);
});
/**
* Returns true if the node at loc is a branch
*/
clojure.zip.branch_QMARK_ = (function branch_QMARK_(loc){return new cljs.core.Keyword("zip","branch?","zip/branch?",1159334776).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,loc)).call(null,clojure.zip.node.call(null,loc));
});
/**
* Returns a seq of the children of node at loc, which must be a branch
*/
clojure.zip.children = (function children(loc){if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null,loc)))
{return new cljs.core.Keyword("zip","children","zip/children",2681289882).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,loc)).call(null,clojure.zip.node.call(null,loc));
} else
{throw "called children on a leaf node";
}
});
/**
* Returns a new branch node, given an existing node and new
* children. The loc is only used to supply the constructor.
*/
clojure.zip.make_node = (function make_node(loc,node,children){return new cljs.core.Keyword("zip","make-node","zip/make-node",2241612572).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,loc)).call(null,node,children);
});
/**
* Returns a seq of nodes leading to this loc
*/
clojure.zip.path = (function path(loc){return new cljs.core.Keyword(null,"pnodes","pnodes",4325362611).cljs$core$IFn$_invoke$arity$1(loc.call(null,1));
});
/**
* Returns a seq of the left siblings of this loc
*/
clojure.zip.lefts = (function lefts(loc){return cljs.core.seq.call(null,new cljs.core.Keyword(null,"l","l",1013904350).cljs$core$IFn$_invoke$arity$1(loc.call(null,1)));
});
/**
* Returns a seq of the right siblings of this loc
*/
clojure.zip.rights = (function rights(loc){return new cljs.core.Keyword(null,"r","r",1013904356).cljs$core$IFn$_invoke$arity$1(loc.call(null,1));
});
/**
* Returns the loc of the leftmost child of the node at this loc, or
* nil if no children
*/
clojure.zip.down = (function down(loc){if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null,loc)))
{var vec__8562 = loc;var node = cljs.core.nth.call(null,vec__8562,0,null);var path = cljs.core.nth.call(null,vec__8562,1,null);var vec__8563 = clojure.zip.children.call(null,loc);var c = cljs.core.nth.call(null,vec__8563,0,null);var cnext = cljs.core.nthnext.call(null,vec__8563,1);var cs = vec__8563;if(cljs.core.truth_(cs))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,"pnodes","pnodes",4325362611),(cljs.core.truth_(path)?cljs.core.conj.call(null,new cljs.core.Keyword(null,"pnodes","pnodes",4325362611).cljs$core$IFn$_invoke$arity$1(path),node):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null)),new cljs.core.Keyword(null,"ppath","ppath",1120772103),path,new cljs.core.Keyword(null,"r","r",1013904356),cnext], null)], null),cljs.core.meta.call(null,loc));
} else
{return null;
}
} else
{return null;
}
});
/**
* Returns the loc of the parent of the node at this loc, or nil if at
* the top
*/
clojure.zip.up = (function up(loc){var vec__8566 = loc;var node = cljs.core.nth.call(null,vec__8566,0,null);var map__8567 = cljs.core.nth.call(null,vec__8566,1,null);var map__8567__$1 = ((cljs.core.seq_QMARK_.call(null,map__8567))?cljs.core.apply.call(null,cljs.core.hash_map,map__8567):map__8567);var path = map__8567__$1;var l = cljs.core.get.call(null,map__8567__$1,new cljs.core.Keyword(null,"l","l",1013904350));var ppath = cljs.core.get.call(null,map__8567__$1,new cljs.core.Keyword(null,"ppath","ppath",1120772103));var pnodes = cljs.core.get.call(null,map__8567__$1,new cljs.core.Keyword(null,"pnodes","pnodes",4325362611));var r = cljs.core.get.call(null,map__8567__$1,new cljs.core.Keyword(null,"r","r",1013904356));var changed_QMARK_ = cljs.core.get.call(null,map__8567__$1,new cljs.core.Keyword(null,"changed?","changed?",2446321533));if(cljs.core.truth_(pnodes))
{var pnode = cljs.core.peek.call(null,pnodes);return cljs.core.with_meta.call(null,(cljs.core.truth_(changed_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null,loc,pnode,cljs.core.concat.call(null,l,cljs.core.cons.call(null,node,r))),(function (){var and__6486__auto__ = ppath;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.assoc.call(null,ppath,new cljs.core.Keyword(null,"changed?","changed?",2446321533),true);
} else
{return and__6486__auto__;
}
})()], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pnode,ppath], null)),cljs.core.meta.call(null,loc));
} else
{return null;
}
});
/**
* zips all the way up and returns the root node, reflecting any
* changes.
*/
clojure.zip.root = (function root(loc){while(true){
if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"end","end",1014004813),loc.call(null,1)))
{return clojure.zip.node.call(null,loc);
} else
{var p = clojure.zip.up.call(null,loc);if(cljs.core.truth_(p))
{{
var G__8600 = p;
loc = G__8600;
continue;
}
} else
{return clojure.zip.node.call(null,loc);
}
}
break;
}
});
/**
* Returns the loc of the right sibling of the node at this loc, or nil
*/
clojure.zip.right = (function right(loc){var vec__8571 = loc;var node = cljs.core.nth.call(null,vec__8571,0,null);var map__8572 = cljs.core.nth.call(null,vec__8571,1,null);var map__8572__$1 = ((cljs.core.seq_QMARK_.call(null,map__8572))?cljs.core.apply.call(null,cljs.core.hash_map,map__8572):map__8572);var path = map__8572__$1;var l = cljs.core.get.call(null,map__8572__$1,new cljs.core.Keyword(null,"l","l",1013904350));var vec__8573 = cljs.core.get.call(null,map__8572__$1,new cljs.core.Keyword(null,"r","r",1013904356));var r = cljs.core.nth.call(null,vec__8573,0,null);var rnext = cljs.core.nthnext.call(null,vec__8573,1);var rs = vec__8573;if(cljs.core.truth_((function (){var and__6486__auto__ = path;if(cljs.core.truth_(and__6486__auto__))
{return rs;
} else
{return and__6486__auto__;
}
})()))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r,cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.conj.call(null,l,node),new cljs.core.Keyword(null,"r","r",1013904356),rnext)], null),cljs.core.meta.call(null,loc));
} else
{return null;
}
});
/**
* Returns the loc of the rightmost sibling of the node at this loc, or self
*/
clojure.zip.rightmost = (function rightmost(loc){var vec__8576 = loc;var node = cljs.core.nth.call(null,vec__8576,0,null);var map__8577 = cljs.core.nth.call(null,vec__8576,1,null);var map__8577__$1 = ((cljs.core.seq_QMARK_.call(null,map__8577))?cljs.core.apply.call(null,cljs.core.hash_map,map__8577):map__8577);var path = map__8577__$1;var l = cljs.core.get.call(null,map__8577__$1,new cljs.core.Keyword(null,"l","l",1013904350));var r = cljs.core.get.call(null,map__8577__$1,new cljs.core.Keyword(null,"r","r",1013904356));if(cljs.core.truth_((function (){var and__6486__auto__ = path;if(cljs.core.truth_(and__6486__auto__))
{return r;
} else
{return and__6486__auto__;
}
})()))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.last.call(null,r),cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.apply.call(null,cljs.core.conj,l,node,cljs.core.butlast.call(null,r)),new cljs.core.Keyword(null,"r","r",1013904356),null)], null),cljs.core.meta.call(null,loc));
} else
{return loc;
}
});
/**
* Returns the loc of the left sibling of the node at this loc, or nil
*/
clojure.zip.left = (function left(loc){var vec__8580 = loc;var node = cljs.core.nth.call(null,vec__8580,0,null);var map__8581 = cljs.core.nth.call(null,vec__8580,1,null);var map__8581__$1 = ((cljs.core.seq_QMARK_.call(null,map__8581))?cljs.core.apply.call(null,cljs.core.hash_map,map__8581):map__8581);var path = map__8581__$1;var l = cljs.core.get.call(null,map__8581__$1,new cljs.core.Keyword(null,"l","l",1013904350));var r = cljs.core.get.call(null,map__8581__$1,new cljs.core.Keyword(null,"r","r",1013904356));if(cljs.core.truth_((function (){var and__6486__auto__ = path;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.seq.call(null,l);
} else
{return and__6486__auto__;
}
})()))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null,l),cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.pop.call(null,l),new cljs.core.Keyword(null,"r","r",1013904356),cljs.core.cons.call(null,node,r))], null),cljs.core.meta.call(null,loc));
} else
{return null;
}
});
/**
* Returns the loc of the leftmost sibling of the node at this loc, or self
*/
clojure.zip.leftmost = (function leftmost(loc){var vec__8584 = loc;var node = cljs.core.nth.call(null,vec__8584,0,null);var map__8585 = cljs.core.nth.call(null,vec__8584,1,null);var map__8585__$1 = ((cljs.core.seq_QMARK_.call(null,map__8585))?cljs.core.apply.call(null,cljs.core.hash_map,map__8585):map__8585);var path = map__8585__$1;var l = cljs.core.get.call(null,map__8585__$1,new cljs.core.Keyword(null,"l","l",1013904350));var r = cljs.core.get.call(null,map__8585__$1,new cljs.core.Keyword(null,"r","r",1013904356));if(cljs.core.truth_((function (){var and__6486__auto__ = path;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.seq.call(null,l);
} else
{return and__6486__auto__;
}
})()))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null,l),cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,"r","r",1013904356),cljs.core.concat.call(null,cljs.core.rest.call(null,l),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null),r))], null),cljs.core.meta.call(null,loc));
} else
{return loc;
}
});
/**
* Inserts the item as the left sibling of the node at this loc,
* without moving
*/
clojure.zip.insert_left = (function insert_left(loc,item){var vec__8588 = loc;var node = cljs.core.nth.call(null,vec__8588,0,null);var map__8589 = cljs.core.nth.call(null,vec__8588,1,null);var map__8589__$1 = ((cljs.core.seq_QMARK_.call(null,map__8589))?cljs.core.apply.call(null,cljs.core.hash_map,map__8589):map__8589);var path = map__8589__$1;var l = cljs.core.get.call(null,map__8589__$1,new cljs.core.Keyword(null,"l","l",1013904350));if((path == null))
{throw "Insert at top";
} else
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node,cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.conj.call(null,l,item),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));
}
});
/**
* Inserts the item as the right sibling of the node at this loc,
* without moving
*/
clojure.zip.insert_right = (function insert_right(loc,item){var vec__8592 = loc;var node = cljs.core.nth.call(null,vec__8592,0,null);var map__8593 = cljs.core.nth.call(null,vec__8592,1,null);var map__8593__$1 = ((cljs.core.seq_QMARK_.call(null,map__8593))?cljs.core.apply.call(null,cljs.core.hash_map,map__8593):map__8593);var path = map__8593__$1;var r = cljs.core.get.call(null,map__8593__$1,new cljs.core.Keyword(null,"r","r",1013904356));if((path == null))
{throw "Insert at top";
} else
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node,cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"r","r",1013904356),cljs.core.cons.call(null,item,r),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));
}
});
/**
* Replaces the node at this loc, without moving
*/
clojure.zip.replace = (function replace(loc,node){var vec__8595 = loc;var _ = cljs.core.nth.call(null,vec__8595,0,null);var path = cljs.core.nth.call(null,vec__8595,1,null);return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node,cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));
});
/**
* Replaces the node at this loc with the value of (f node args)
* @param {...*} var_args
*/
clojure.zip.edit = (function() { 
var edit__delegate = function (loc,f,args){return clojure.zip.replace.call(null,loc,cljs.core.apply.call(null,f,clojure.zip.node.call(null,loc),args));
};
var edit = function (loc,f,var_args){
var args = null;if (arguments.length > 2) {
  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return edit__delegate.call(this,loc,f,args);};
edit.cljs$lang$maxFixedArity = 2;
edit.cljs$lang$applyTo = (function (arglist__8601){
var loc = cljs.core.first(arglist__8601);
arglist__8601 = cljs.core.next(arglist__8601);
var f = cljs.core.first(arglist__8601);
var args = cljs.core.rest(arglist__8601);
return edit__delegate(loc,f,args);
});
edit.cljs$core$IFn$_invoke$arity$variadic = edit__delegate;
return edit;
})()
;
/**
* Inserts the item as the leftmost child of the node at this loc,
* without moving
*/
clojure.zip.insert_child = (function insert_child(loc,item){return clojure.zip.replace.call(null,loc,clojure.zip.make_node.call(null,loc,clojure.zip.node.call(null,loc),cljs.core.cons.call(null,item,clojure.zip.children.call(null,loc))));
});
/**
* Inserts the item as the rightmost child of the node at this loc,
* without moving
*/
clojure.zip.append_child = (function append_child(loc,item){return clojure.zip.replace.call(null,loc,clojure.zip.make_node.call(null,loc,clojure.zip.node.call(null,loc),cljs.core.concat.call(null,clojure.zip.children.call(null,loc),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [item], null))));
});
/**
* Moves to the next loc in the hierarchy, depth-first. When reaching
* the end, returns a distinguished loc detectable via end?. If already
* at the end, stays there.
*/
clojure.zip.next = (function next(loc){if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"end","end",1014004813),loc.call(null,1)))
{return loc;
} else
{var or__6498__auto__ = (function (){var and__6486__auto__ = clojure.zip.branch_QMARK_.call(null,loc);if(cljs.core.truth_(and__6486__auto__))
{return clojure.zip.down.call(null,loc);
} else
{return and__6486__auto__;
}
})();if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = clojure.zip.right.call(null,loc);if(cljs.core.truth_(or__6498__auto____$1))
{return or__6498__auto____$1;
} else
{var p = loc;while(true){
if(cljs.core.truth_(clojure.zip.up.call(null,p)))
{var or__6498__auto____$2 = clojure.zip.right.call(null,clojure.zip.up.call(null,p));if(cljs.core.truth_(or__6498__auto____$2))
{return or__6498__auto____$2;
} else
{{
var G__8602 = clojure.zip.up.call(null,p);
p = G__8602;
continue;
}
}
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.node.call(null,p),new cljs.core.Keyword(null,"end","end",1014004813)], null);
}
break;
}
}
}
}
});
/**
* Moves to the previous loc in the hierarchy, depth-first. If already
* at the root, returns nil.
*/
clojure.zip.prev = (function prev(loc){var temp__4090__auto__ = clojure.zip.left.call(null,loc);if(cljs.core.truth_(temp__4090__auto__))
{var lloc = temp__4090__auto__;var loc__$1 = lloc;while(true){
var temp__4090__auto____$1 = (function (){var and__6486__auto__ = clojure.zip.branch_QMARK_.call(null,loc__$1);if(cljs.core.truth_(and__6486__auto__))
{return clojure.zip.down.call(null,loc__$1);
} else
{return and__6486__auto__;
}
})();if(cljs.core.truth_(temp__4090__auto____$1))
{var child = temp__4090__auto____$1;{
var G__8603 = clojure.zip.rightmost.call(null,child);
loc__$1 = G__8603;
continue;
}
} else
{return loc__$1;
}
break;
}
} else
{return clojure.zip.up.call(null,loc);
}
});
/**
* Returns true if loc represents the end of a depth-first walk
*/
clojure.zip.end_QMARK_ = (function end_QMARK_(loc){return cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"end","end",1014004813),loc.call(null,1));
});
/**
* Removes the node at loc, returning the loc that would have preceded
* it in a depth-first walk.
*/
clojure.zip.remove = (function remove(loc){var vec__8598 = loc;var node = cljs.core.nth.call(null,vec__8598,0,null);var map__8599 = cljs.core.nth.call(null,vec__8598,1,null);var map__8599__$1 = ((cljs.core.seq_QMARK_.call(null,map__8599))?cljs.core.apply.call(null,cljs.core.hash_map,map__8599):map__8599);var path = map__8599__$1;var l = cljs.core.get.call(null,map__8599__$1,new cljs.core.Keyword(null,"l","l",1013904350));var ppath = cljs.core.get.call(null,map__8599__$1,new cljs.core.Keyword(null,"ppath","ppath",1120772103));var pnodes = cljs.core.get.call(null,map__8599__$1,new cljs.core.Keyword(null,"pnodes","pnodes",4325362611));var rs = cljs.core.get.call(null,map__8599__$1,new cljs.core.Keyword(null,"r","r",1013904356));if((path == null))
{throw "Remove at top";
} else
{if((cljs.core.count.call(null,l) > 0))
{var loc__$1 = cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null,l),cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.pop.call(null,l),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));while(true){
var temp__4090__auto__ = (function (){var and__6486__auto__ = clojure.zip.branch_QMARK_.call(null,loc__$1);if(cljs.core.truth_(and__6486__auto__))
{return clojure.zip.down.call(null,loc__$1);
} else
{return and__6486__auto__;
}
})();if(cljs.core.truth_(temp__4090__auto__))
{var child = temp__4090__auto__;{
var G__8604 = clojure.zip.rightmost.call(null,child);
loc__$1 = G__8604;
continue;
}
} else
{return loc__$1;
}
break;
}
} else
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null,loc,cljs.core.peek.call(null,pnodes),rs),(function (){var and__6486__auto__ = ppath;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.assoc.call(null,ppath,new cljs.core.Keyword(null,"changed?","changed?",2446321533),true);
} else
{return and__6486__auto__;
}
})()], null),cljs.core.meta.call(null,loc));
}
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.whitespace')) {
goog.provide('rewrite_clj.zip.whitespace');
goog.require('cljs.core');
goog.require('clojure.zip');
goog.require('clojure.zip');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
rewrite_clj.zip.whitespace.whitespace_QMARK_ = (function whitespace_QMARK_(zloc){var G__9886 = zloc;var G__9886__$1 = (((G__9886 == null))?null:clojure.zip.node.call(null,G__9886));var G__9886__$2 = (((G__9886__$1 == null))?null:rewrite_clj.node.whitespace_QMARK_.call(null,G__9886__$1));return G__9886__$2;
});
rewrite_clj.zip.whitespace.linebreak_QMARK_ = (function linebreak_QMARK_(zloc){var G__9888 = zloc;var G__9888__$1 = (((G__9888 == null))?null:clojure.zip.node.call(null,G__9888));var G__9888__$2 = (((G__9888__$1 == null))?null:rewrite_clj.node.linebreak_QMARK_.call(null,G__9888__$1));return G__9888__$2;
});
rewrite_clj.zip.whitespace.comment_QMARK_ = (function comment_QMARK_(zloc){var G__9890 = zloc;var G__9890__$1 = (((G__9890 == null))?null:clojure.zip.node.call(null,G__9890));var G__9890__$2 = (((G__9890__$1 == null))?null:rewrite_clj.node.comment_QMARK_.call(null,G__9890__$1));return G__9890__$2;
});
rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_ = (function whitespace_not_linebreak_QMARK_(zloc){var and__6486__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null,zloc);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,zloc));
} else
{return and__6486__auto__;
}
});
rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_ = (function whitespace_or_comment_QMARK_(zloc){var G__9892 = zloc;var G__9892__$1 = (((G__9892 == null))?null:clojure.zip.node.call(null,G__9892));var G__9892__$2 = (((G__9892__$1 == null))?null:rewrite_clj.node.whitespace_or_comment_QMARK_.call(null,G__9892__$1));return G__9892__$2;
});
/**
* Perform the given movement while the given predicate returns true.
*/
rewrite_clj.zip.whitespace.skip = (function skip(f,p_QMARK_,zloc){return cljs.core.first.call(null,cljs.core.drop_while.call(null,p_QMARK_,cljs.core.take_while.call(null,cljs.core.complement.call(null,clojure.zip.end_QMARK_),cljs.core.take_while.call(null,cljs.core.identity,cljs.core.iterate.call(null,f,zloc)))));
});
/**
* Perform the given movement (default: `z/right`) until a non-whitespace/
* non-comment node is encountered.
*/
rewrite_clj.zip.whitespace.skip_whitespace = (function() {
var skip_whitespace = null;
var skip_whitespace__1 = (function (zloc){return skip_whitespace.call(null,clojure.zip.right,zloc);
});
var skip_whitespace__2 = (function (f,zloc){return rewrite_clj.zip.whitespace.skip.call(null,f,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_,zloc);
});
skip_whitespace = function(f,zloc){
switch(arguments.length){
case 1:
return skip_whitespace__1.call(this,f);
case 2:
return skip_whitespace__2.call(this,f,zloc);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
skip_whitespace.cljs$core$IFn$_invoke$arity$1 = skip_whitespace__1;
skip_whitespace.cljs$core$IFn$_invoke$arity$2 = skip_whitespace__2;
return skip_whitespace;
})()
;
/**
* Move left until a non-whitespace/non-comment node is encountered.
*/
rewrite_clj.zip.whitespace.skip_whitespace_left = (function skip_whitespace_left(zloc){return rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.left,zloc);
});
/**
* Prepend a whitespace node representing the given number of spaces (default: 1).
*/
rewrite_clj.zip.whitespace.prepend_space = (function() {
var prepend_space = null;
var prepend_space__1 = (function (zloc){return prepend_space.call(null,zloc,1);
});
var prepend_space__2 = (function (zloc,n){return clojure.zip.insert_left.call(null,zloc,rewrite_clj.node.spaces.call(null,n));
});
prepend_space = function(zloc,n){
switch(arguments.length){
case 1:
return prepend_space__1.call(this,zloc);
case 2:
return prepend_space__2.call(this,zloc,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prepend_space.cljs$core$IFn$_invoke$arity$1 = prepend_space__1;
prepend_space.cljs$core$IFn$_invoke$arity$2 = prepend_space__2;
return prepend_space;
})()
;
/**
* Append a whitespace node representing the given number of spaces (default: 1).
*/
rewrite_clj.zip.whitespace.append_space = (function() {
var append_space = null;
var append_space__1 = (function (zloc){return append_space.call(null,zloc,1);
});
var append_space__2 = (function (zloc,n){return clojure.zip.insert_right.call(null,zloc,rewrite_clj.node.spaces.call(null,n));
});
append_space = function(zloc,n){
switch(arguments.length){
case 1:
return append_space__1.call(this,zloc);
case 2:
return append_space__2.call(this,zloc,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
append_space.cljs$core$IFn$_invoke$arity$1 = append_space__1;
append_space.cljs$core$IFn$_invoke$arity$2 = append_space__2;
return append_space;
})()
;
/**
* Prepend a newlines node representing the given number of newlines (default: 1).
*/
rewrite_clj.zip.whitespace.prepend_newline = (function() {
var prepend_newline = null;
var prepend_newline__1 = (function (zloc){return prepend_newline.call(null,zloc,1);
});
var prepend_newline__2 = (function (zloc,n){return clojure.zip.insert_left.call(null,zloc,rewrite_clj.node.newlines.call(null,n));
});
prepend_newline = function(zloc,n){
switch(arguments.length){
case 1:
return prepend_newline__1.call(this,zloc);
case 2:
return prepend_newline__2.call(this,zloc,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prepend_newline.cljs$core$IFn$_invoke$arity$1 = prepend_newline__1;
prepend_newline.cljs$core$IFn$_invoke$arity$2 = prepend_newline__2;
return prepend_newline;
})()
;
/**
* Append a newline node representing the given number of newlines (default: 1).
*/
rewrite_clj.zip.whitespace.append_newline = (function() {
var append_newline = null;
var append_newline__1 = (function (zloc){return append_newline.call(null,zloc,1);
});
var append_newline__2 = (function (zloc,n){return clojure.zip.insert_right.call(null,zloc,rewrite_clj.node.newlines.call(null,n));
});
append_newline = function(zloc,n){
switch(arguments.length){
case 1:
return append_newline__1.call(this,zloc);
case 2:
return append_newline__2.call(this,zloc,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
append_newline.cljs$core$IFn$_invoke$arity$1 = append_newline__1;
append_newline.cljs$core$IFn$_invoke$arity$2 = append_newline__2;
return append_newline;
})()
;
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.parser.token')) {
goog.provide('rewrite_clj.parser.token');
goog.require('cljs.core');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
/**
* @param {...*} var_args
*/
rewrite_clj.parser.token.read_to_boundary = (function() { 
var read_to_boundary__delegate = function (reader,p__9871){var vec__9873 = p__9871;var allowed = cljs.core.nth.call(null,vec__9873,0,null);var allowed_QMARK_ = cljs.core.set.call(null,allowed);return rewrite_clj.reader.read_until.call(null,reader,((function (allowed_QMARK_,vec__9873,allowed){
return (function (p1__9870_SHARP_){return (cljs.core.not.call(null,allowed_QMARK_.call(null,p1__9870_SHARP_))) && (rewrite_clj.reader.whitespace_or_boundary_QMARK_.call(null,p1__9870_SHARP_));
});})(allowed_QMARK_,vec__9873,allowed))
);
};
var read_to_boundary = function (reader,var_args){
var p__9871 = null;if (arguments.length > 1) {
  p__9871 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return read_to_boundary__delegate.call(this,reader,p__9871);};
read_to_boundary.cljs$lang$maxFixedArity = 1;
read_to_boundary.cljs$lang$applyTo = (function (arglist__9884){
var reader = cljs.core.first(arglist__9884);
var p__9871 = cljs.core.rest(arglist__9884);
return read_to_boundary__delegate(reader,p__9871);
});
read_to_boundary.cljs$core$IFn$_invoke$arity$variadic = read_to_boundary__delegate;
return read_to_boundary;
})()
;
rewrite_clj.parser.token.read_to_char_boundary = (function read_to_char_boundary(reader){var c = rewrite_clj.reader.next.call(null,reader);return c.concat(((cljs.core.not_EQ_.call(null,c,"\\"))?rewrite_clj.parser.token.read_to_boundary.call(null,reader):""));
});
rewrite_clj.parser.token.symbol_suffix_chars = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["'",":"], null);
/**
* Symbols allow for certain boundary characters that have
* to be handled explicitly.
*/
rewrite_clj.parser.token.symbol_node = (function symbol_node(reader,value,value_string){var suffix = rewrite_clj.parser.token.read_to_boundary.call(null,reader,rewrite_clj.parser.token.symbol_suffix_chars);if(cljs.core.empty_QMARK_.call(null,suffix))
{return rewrite_clj.node.token_node.call(null,value,value_string);
} else
{var s = value_string.concat(suffix);return rewrite_clj.node.token_node.call(null,rewrite_clj.reader.string__GT_edn.call(null,s),s);
}
});
/**
* Parse a single token.
*/
rewrite_clj.parser.token.parse_token = (function parse_token(reader){var first_char = rewrite_clj.reader.next.call(null,reader);var s = first_char.concat(((cljs.core._EQ_.call(null,first_char,"\\"))?rewrite_clj.parser.token.read_to_char_boundary.call(null,reader):rewrite_clj.parser.token.read_to_boundary.call(null,reader)));var v = rewrite_clj.reader.string__GT_edn.call(null,s);if((v instanceof cljs.core.Symbol))
{return rewrite_clj.parser.token.symbol_node.call(null,reader,v,s);
} else
{return rewrite_clj.node.token_node.call(null,v,s);
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.parser.whitespace')) {
goog.provide('rewrite_clj.parser.whitespace');
goog.require('cljs.core');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
/**
* Parse as much whitespace as possible. The created node can either contain
* only linebreaks or only space/tabs.
*/
rewrite_clj.parser.whitespace.parse_whitespace = (function parse_whitespace(reader){if(rewrite_clj.reader.linebreak_QMARK_.call(null,rewrite_clj.reader.peek.call(null,reader)))
{return rewrite_clj.node.newline_node.call(null,rewrite_clj.reader.read_while.call(null,reader,rewrite_clj.reader.linebreak_QMARK_));
} else
{return rewrite_clj.node.whitespace_node.call(null,rewrite_clj.reader.read_while.call(null,reader,rewrite_clj.reader.space_QMARK_));
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.parser.keyword')) {
goog.provide('rewrite_clj.parser.keyword');
goog.require('cljs.core');
goog.require('cljs.extended.reader');
goog.require('cljs.extended.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
rewrite_clj.parser.keyword.parse_keyword = (function parse_keyword(reader){rewrite_clj.reader.next.call(null,reader);
var temp__4090__auto__ = cljs.extended.reader.peek_char.call(null,reader);if(cljs.core.truth_(temp__4090__auto__))
{var c = temp__4090__auto__;if(cljs.core._EQ_.call(null,c,":"))
{return rewrite_clj.node.keyword_node.call(null,cljs.extended.reader.read_keyword.call(null,reader,":"),true);
} else
{cljs.extended.reader.unread.call(null,reader,":");
return rewrite_clj.node.keyword_node.call(null,cljs.extended.reader.read_keyword.call(null,reader,":"));
}
} else
{return rewrite_clj.reader.throw_reader.call(null,reader,"unexpected EOF while reading keyword.");
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.parser.string')) {
goog.provide('rewrite_clj.parser.string');
goog.require('cljs.core');
goog.require('goog.string');
goog.require('goog.string');
goog.require('cljs.extended.reader');
goog.require('cljs.extended.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
/**
* Flush buffer and add string to the given vector.
*/
rewrite_clj.parser.string.flush_into = (function flush_into(lines,buf){var s = buf.toString();buf.set("");
return cljs.core.conj.call(null,lines,s);
});
rewrite_clj.parser.string.read_string_data = (function read_string_data(reader){rewrite_clj.reader.ignore.call(null,reader);
var buf = (new goog.string.StringBuffer());var escape_QMARK_ = false;var lines = cljs.core.PersistentVector.EMPTY;while(true){
var temp__4090__auto__ = cljs.extended.reader.read_char.call(null,reader);if(cljs.core.truth_(temp__4090__auto__))
{var c = temp__4090__auto__;if((!(escape_QMARK_)) && (cljs.core._EQ_.call(null,c,"\"")))
{return rewrite_clj.parser.string.flush_into.call(null,lines,buf);
} else
{if(cljs.core._EQ_.call(null,c,"\n"))
{{
var G__9379 = escape_QMARK_;
var G__9380 = rewrite_clj.parser.string.flush_into.call(null,lines,buf);
escape_QMARK_ = G__9379;
lines = G__9380;
continue;
}
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{buf.append(c);
{
var G__9381 = (!(escape_QMARK_)) && (cljs.core._EQ_.call(null,c,"\\"));
var G__9382 = lines;
escape_QMARK_ = G__9381;
lines = G__9382;
continue;
}
} else
{return null;
}
}
}
} else
{return rewrite_clj.reader.throw_reader.call(null,reader,"Unexpected EOF while reading string.");
}
break;
}
});
rewrite_clj.parser.string.parse_string = (function parse_string(reader){return rewrite_clj.node.string_node.call(null,rewrite_clj.parser.string.read_string_data.call(null,reader));
});
rewrite_clj.parser.string.parse_regex = (function parse_regex(reader){var vec__9368 = rewrite_clj.parser.string.read_string_data.call(null,reader);var h = cljs.core.nth.call(null,vec__9368,0,null);var _ = cljs.core.nthnext.call(null,vec__9368,1);return rewrite_clj.node.token_node.call(null,cljs.core.re_pattern.call(null,h));
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.parser.core')) {
goog.provide('rewrite_clj.parser.core');
goog.require('cljs.core');
goog.require('rewrite_clj.parser.whitespace');
goog.require('rewrite_clj.parser.token');
goog.require('rewrite_clj.parser.string');
goog.require('rewrite_clj.parser.keyword');
goog.require('rewrite_clj.parser.whitespace');
goog.require('rewrite_clj.parser.token');
goog.require('rewrite_clj.parser.string');
goog.require('rewrite_clj.parser.keyword');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
rewrite_clj.parser.core._STAR_delimiter_STAR_ = null;
rewrite_clj.parser.core.parse_delim = (function parse_delim(reader,delimiter){rewrite_clj.reader.ignore.call(null,reader);
return rewrite_clj.reader.read_repeatedly.call(null,reader,(function (p1__9348_SHARP_){var _STAR_delimiter_STAR_9350 = rewrite_clj.parser.core._STAR_delimiter_STAR_;try{rewrite_clj.parser.core._STAR_delimiter_STAR_ = delimiter;
return rewrite_clj.parser.core.parse_next.call(null,p1__9348_SHARP_);
}finally {rewrite_clj.parser.core._STAR_delimiter_STAR_ = _STAR_delimiter_STAR_9350;
}}));
});
/**
* @param {...*} var_args
*/
rewrite_clj.parser.core.parse_printables = (function() { 
var parse_printables__delegate = function (reader,node_tag,n,p__9351){var vec__9353 = p__9351;var ignore_QMARK_ = cljs.core.nth.call(null,vec__9353,0,null);if(cljs.core.truth_(ignore_QMARK_))
{rewrite_clj.reader.ignore.call(null,reader);
} else
{}
return rewrite_clj.reader.read_n.call(null,reader,node_tag,rewrite_clj.parser.core.parse_next,cljs.core.complement.call(null,rewrite_clj.node.printable_only_QMARK_),n);
};
var parse_printables = function (reader,node_tag,n,var_args){
var p__9351 = null;if (arguments.length > 3) {
  p__9351 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3),0);} 
return parse_printables__delegate.call(this,reader,node_tag,n,p__9351);};
parse_printables.cljs$lang$maxFixedArity = 3;
parse_printables.cljs$lang$applyTo = (function (arglist__9366){
var reader = cljs.core.first(arglist__9366);
arglist__9366 = cljs.core.next(arglist__9366);
var node_tag = cljs.core.first(arglist__9366);
arglist__9366 = cljs.core.next(arglist__9366);
var n = cljs.core.first(arglist__9366);
var p__9351 = cljs.core.rest(arglist__9366);
return parse_printables__delegate(reader,node_tag,n,p__9351);
});
parse_printables.cljs$core$IFn$_invoke$arity$variadic = parse_printables__delegate;
return parse_printables;
})()
;
rewrite_clj.parser.core.parse_meta = (function parse_meta(reader){rewrite_clj.reader.ignore.call(null,reader);
return rewrite_clj.node.meta_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"meta","meta",1017252215),2));
});
rewrite_clj.parser.core.parse_eof = (function parse_eof(reader){if(cljs.core.truth_(rewrite_clj.parser.core._STAR_delimiter_STAR_))
{return rewrite_clj.reader.throw_reader.call(null,reader,"Unexpected EOF.");
} else
{return null;
}
});
rewrite_clj.parser.core.parse_list = (function parse_list(reader){return rewrite_clj.node.list_node.call(null,rewrite_clj.parser.core.parse_delim.call(null,reader,")"));
});
rewrite_clj.parser.core.parse_vector = (function parse_vector(reader){return rewrite_clj.node.vector_node.call(null,rewrite_clj.parser.core.parse_delim.call(null,reader,"]"));
});
rewrite_clj.parser.core.parse_map = (function parse_map(reader){return rewrite_clj.node.map_node.call(null,rewrite_clj.parser.core.parse_delim.call(null,reader,"}"));
});
rewrite_clj.parser.core.parse_sharp = (function parse_sharp(reader){rewrite_clj.reader.ignore.call(null,reader);
var G__9355 = rewrite_clj.reader.peek.call(null,reader);if(cljs.core._EQ_.call(null,"_",G__9355))
{return rewrite_clj.node.uneval_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"uneval","uneval",4468227623),1,true));
} else
{if(cljs.core._EQ_.call(null,"=",G__9355))
{return rewrite_clj.node.eval_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"eval","eval",1017029646),1,true));
} else
{if(cljs.core._EQ_.call(null,"'",G__9355))
{return rewrite_clj.node.var_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"var","var",1014020761),1,true));
} else
{if(cljs.core._EQ_.call(null,"^",G__9355))
{return rewrite_clj.node.raw_meta_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"meta","meta",1017252215),2,true));
} else
{if(cljs.core._EQ_.call(null,"\"",G__9355))
{return rewrite_clj.parser.string.parse_regex.call(null,reader);
} else
{if(cljs.core._EQ_.call(null,"(",G__9355))
{return rewrite_clj.node.fn_node.call(null,rewrite_clj.parser.core.parse_delim.call(null,reader,")"));
} else
{if(cljs.core._EQ_.call(null,"{",G__9355))
{return rewrite_clj.node.set_node.call(null,rewrite_clj.parser.core.parse_delim.call(null,reader,"}"));
} else
{if(cljs.core._EQ_.call(null,null,G__9355))
{return rewrite_clj.reader.throw_reader.call(null,reader,"Unexpected EOF.");
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return rewrite_clj.node.reader_macro_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"reader-macro","reader-macro",3215531444),2));
} else
{return null;
}
}
}
}
}
}
}
}
}
});
rewrite_clj.parser.core.parse_unmatched = (function parse_unmatched(reader){return rewrite_clj.reader.throw_reader.call(null,reader,"Unmatched delimiter: %s",rewrite_clj.reader.peek.call(null,reader));
});
rewrite_clj.parser.core.parse_deref = (function parse_deref(reader){return rewrite_clj.node.deref_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"deref","deref",1109378020),1,true));
});
rewrite_clj.parser.core.parse_quote = (function parse_quote(reader){return rewrite_clj.node.quote_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"quote","quote",1121858030),1,true));
});
rewrite_clj.parser.core.parse_syntax_quote = (function parse_syntax_quote(reader){return rewrite_clj.node.syntax_quote_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"syntax-quote","syntax-quote",3009198980),1,true));
});
rewrite_clj.parser.core.parse_unquote = (function parse_unquote(reader){rewrite_clj.reader.ignore.call(null,reader);
var c = rewrite_clj.reader.peek.call(null,reader);if(cljs.core._EQ_.call(null,c,"@"))
{return rewrite_clj.node.unquote_splicing_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"unquote","unquote",734812917),1,true));
} else
{return rewrite_clj.node.unquote_node.call(null,rewrite_clj.parser.core.parse_printables.call(null,reader,new cljs.core.Keyword(null,"unquote","unquote",734812917),1));
}
});
rewrite_clj.parser.core.parse_comment = (function parse_comment(reader){rewrite_clj.reader.ignore.call(null,reader);
return rewrite_clj.node.comment_node.call(null,rewrite_clj.reader.read_include_linebreak.call(null,reader));
});
rewrite_clj.parser.core.dispatch_map = cljs.core.PersistentHashMap.fromArrays(["@","`","\"","#","'","(",")",":",";","[","{","]","}","^","~"],[rewrite_clj.parser.core.parse_deref,rewrite_clj.parser.core.parse_syntax_quote,rewrite_clj.parser.string.parse_string,rewrite_clj.parser.core.parse_sharp,rewrite_clj.parser.core.parse_quote,rewrite_clj.parser.core.parse_list,rewrite_clj.parser.core.parse_unmatched,rewrite_clj.parser.keyword.parse_keyword,rewrite_clj.parser.core.parse_comment,rewrite_clj.parser.core.parse_vector,rewrite_clj.parser.core.parse_map,rewrite_clj.parser.core.parse_unmatched,rewrite_clj.parser.core.parse_unmatched,rewrite_clj.parser.core.parse_meta,rewrite_clj.parser.core.parse_unquote]);
rewrite_clj.parser.core.dispatch = (function dispatch(c){if((c == null))
{return rewrite_clj.parser.core.parse_eof;
} else
{if(rewrite_clj.reader.whitespace_QMARK_.call(null,c))
{return rewrite_clj.parser.whitespace.parse_whitespace;
} else
{if(cljs.core._EQ_.call(null,c,rewrite_clj.parser.core._STAR_delimiter_STAR_))
{return rewrite_clj.reader.ignore;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.get.call(null,rewrite_clj.parser.core.dispatch_map,c,rewrite_clj.parser.token.parse_token);
} else
{return null;
}
}
}
}
});
rewrite_clj.parser.core.parse_next_STAR_ = (function parse_next_STAR_(){return cljs.core.comp.call(null,rewrite_clj.parser.core.dispatch,rewrite_clj.reader.peek);
});
rewrite_clj.parser.core.parse_next = (function parse_next(reader){return rewrite_clj.reader.read_with_meta.call(null,reader,rewrite_clj.parser.core.parse_next_STAR_.call(null).call(null,reader));
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.parser')) {
goog.provide('rewrite_clj.parser');
goog.require('cljs.core');
goog.require('clojure.walk');
goog.require('clojure.walk');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.reader');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.parser.core');
goog.require('rewrite_clj.parser.core');
/**
* Parse next form from the given reader.
*/
rewrite_clj.parser.parse = (function parse(reader){return rewrite_clj.parser.core.parse_next.call(null,reader);
});
/**
* Parse all forms from the given reader.
*/
rewrite_clj.parser.parse_all = (function parse_all(reader){var nodes = cljs.core.doall.call(null,cljs.core.take_while.call(null,cljs.core.identity,cljs.core.repeatedly.call(null,(function (){return rewrite_clj.parser.parse.call(null,reader);
}))));return cljs.core.with_meta.call(null,rewrite_clj.node.forms_node.call(null,nodes),cljs.core.meta.call(null,cljs.core.first.call(null,nodes)));
});
/**
* Parse first form in the given string.
*/
rewrite_clj.parser.parse_string = (function parse_string(s){return rewrite_clj.parser.parse.call(null,rewrite_clj.reader.string_reader.call(null,s));
});
/**
* Parse all forms in the given string.
*/
rewrite_clj.parser.parse_string_all = (function parse_string_all(s){return rewrite_clj.parser.parse_all.call(null,rewrite_clj.reader.string_reader.call(null,s));
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.base')) {
goog.provide('rewrite_clj.zip.base');
goog.require('cljs.core');
goog.require('clojure.zip');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.parser');
goog.require('rewrite_clj.parser');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
/**
* Create zipper over the given Clojure/EDN node.
*/
rewrite_clj.zip.base.edn_STAR_ = (function edn_STAR_(node){return clojure.zip.zipper.call(null,rewrite_clj.node.inner_QMARK_,cljs.core.comp.call(null,cljs.core.seq,rewrite_clj.node.children),rewrite_clj.node.replace_children,node);
});
/**
* Create zipper over the given Clojure/EDN node and move
* to the first non-whitespace/non-comment child.
*/
rewrite_clj.zip.base.edn = (function edn(node){while(true){
if(cljs.core._EQ_.call(null,rewrite_clj.node.tag.call(null,node),new cljs.core.Keyword(null,"forms","forms",1111523233)))
{var top = rewrite_clj.zip.base.edn_STAR_.call(null,node);var or__6498__auto__ = rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.down.call(null,top));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return top;
}
} else
{{
var G__9194 = rewrite_clj.node.forms_node.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null));
node = G__9194;
continue;
}
}
break;
}
});
/**
* Get tag of node at the current zipper location.
*/
rewrite_clj.zip.base.tag = (function tag(zloc){var G__9167 = zloc;var G__9167__$1 = (((G__9167 == null))?null:clojure.zip.node.call(null,G__9167));var G__9167__$2 = (((G__9167__$1 == null))?null:rewrite_clj.node.tag.call(null,G__9167__$1));return G__9167__$2;
});
/**
* Get sexpr represented by the given node.
*/
rewrite_clj.zip.base.sexpr = (function sexpr(zloc){var G__9169 = zloc;var G__9169__$1 = (((G__9169 == null))?null:clojure.zip.node.call(null,G__9169));var G__9169__$2 = (((G__9169__$1 == null))?null:rewrite_clj.node.sexpr.call(null,G__9169__$1));return G__9169__$2;
});
/**
* Get children as s-expressions.
*/
rewrite_clj.zip.base.child_sexprs = (function child_sexprs(zloc){var G__9171 = zloc;var G__9171__$1 = (((G__9171 == null))?null:clojure.zip.node.call(null,G__9171));var G__9171__$2 = (((G__9171__$1 == null))?null:rewrite_clj.node.child_sexprs.call(null,G__9171__$1));return G__9171__$2;
});
/**
* Get length of printable string for the given zipper location.
*/
rewrite_clj.zip.base.length = (function length(zloc){var or__6498__auto__ = (function (){var G__9175 = zloc;var G__9175__$1 = (((G__9175 == null))?null:clojure.zip.node.call(null,G__9175));var G__9175__$2 = (((G__9175__$1 == null))?null:rewrite_clj.node.length.call(null,G__9175__$1));return G__9175__$2;
})();if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return 0;
}
});
/**
* DEPRECATED. Return a tag/s-expression pair for inner nodes, or
* the s-expression itself for leaves.
*/
rewrite_clj.zip.base.value = (function value(zloc){var G__9177 = zloc;var G__9177__$1 = (((G__9177 == null))?null:clojure.zip.node.call(null,G__9177));var G__9177__$2 = (((G__9177__$1 == null))?null:rewrite_clj.node.value.call(null,G__9177__$1));return G__9177__$2;
});
/**
* Create zipper from String.
*/
rewrite_clj.zip.base.of_string = (function of_string(s){var G__9179 = s;var G__9179__$1 = (((G__9179 == null))?null:rewrite_clj.parser.parse_string_all.call(null,G__9179));var G__9179__$2 = (((G__9179__$1 == null))?null:rewrite_clj.zip.base.edn.call(null,G__9179__$1));return G__9179__$2;
});
/**
* Create string representing the current zipper location.
*/
rewrite_clj.zip.base.string = (function string(zloc){var G__9181 = zloc;var G__9181__$1 = (((G__9181 == null))?null:clojure.zip.node.call(null,G__9181));var G__9181__$2 = (((G__9181__$1 == null))?null:rewrite_clj.node.string.call(null,G__9181__$1));return G__9181__$2;
});
/**
* Create string representing the zipped-up zipper.
*/
rewrite_clj.zip.base.root_string = (function root_string(zloc){var G__9183 = zloc;var G__9183__$1 = (((G__9183 == null))?null:clojure.zip.root.call(null,G__9183));var G__9183__$2 = (((G__9183__$1 == null))?null:rewrite_clj.node.string.call(null,G__9183__$1));return G__9183__$2;
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.move')) {
goog.provide('rewrite_clj.zip.move');
goog.require('cljs.core');
goog.require('clojure.zip');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip.whitespace');
/**
* Move right to next non-whitespace/non-comment location.
*/
rewrite_clj.zip.move.right = (function right(zloc){var G__9139 = zloc;var G__9139__$1 = (((G__9139 == null))?null:clojure.zip.right.call(null,G__9139));var G__9139__$2 = (((G__9139__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace.call(null,G__9139__$1));return G__9139__$2;
});
/**
* Move left to next non-whitespace/non-comment location.
*/
rewrite_clj.zip.move.left = (function left(zloc){var G__9141 = zloc;var G__9141__$1 = (((G__9141 == null))?null:clojure.zip.left.call(null,G__9141));var G__9141__$2 = (((G__9141__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace_left.call(null,G__9141__$1));return G__9141__$2;
});
/**
* Move down to next non-whitespace/non-comment location.
*/
rewrite_clj.zip.move.down = (function down(zloc){var G__9143 = zloc;var G__9143__$1 = (((G__9143 == null))?null:clojure.zip.down.call(null,G__9143));var G__9143__$2 = (((G__9143__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace.call(null,G__9143__$1));return G__9143__$2;
});
/**
* Move up to next non-whitespace/non-comment location.
*/
rewrite_clj.zip.move.up = (function up(zloc){var G__9145 = zloc;var G__9145__$1 = (((G__9145 == null))?null:clojure.zip.up.call(null,G__9145));var G__9145__$2 = (((G__9145__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace_left.call(null,G__9145__$1));return G__9145__$2;
});
/**
* Move to the next non-whitespace/non-comment location in a depth-first manner.
*/
rewrite_clj.zip.move.next = (function next(zloc){if(cljs.core.truth_(zloc))
{var or__6498__auto__ = (function (){var G__9149 = zloc;var G__9149__$1 = (((G__9149 == null))?null:clojure.zip.next.call(null,G__9149));var G__9149__$2 = (((G__9149__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.next,G__9149__$1));return G__9149__$2;
})();if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return cljs.core.vary_meta.call(null,zloc,cljs.core.assoc,new cljs.core.Keyword("rewrite-clj.zip.move","end?","rewrite-clj.zip.move/end?",4242208725),true);
}
} else
{return null;
}
});
/**
* Check whether the given node is at the end of the depth-first traversal.
*/
rewrite_clj.zip.move.end_QMARK_ = (function end_QMARK_(zloc){var or__6498__auto__ = cljs.core.not.call(null,zloc);if(or__6498__auto__)
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = clojure.zip.end_QMARK_.call(null,zloc);if(or__6498__auto____$1)
{return or__6498__auto____$1;
} else
{return new cljs.core.Keyword("rewrite-clj.zip.move","end?","rewrite-clj.zip.move/end?",4242208725).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,zloc));
}
}
});
/**
* Check if the given location represents the leftmost non-whitespace/
* non-comment one.
*/
rewrite_clj.zip.move.rightmost_QMARK_ = (function rightmost_QMARK_(zloc){return (rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.right.call(null,zloc)) == null);
});
/**
* Check if the given location represents the leftmost non-whitespace/
* non-comment one.
*/
rewrite_clj.zip.move.leftmost_QMARK_ = (function leftmost_QMARK_(zloc){return (rewrite_clj.zip.whitespace.skip_whitespace_left.call(null,clojure.zip.left.call(null,zloc)) == null);
});
/**
* Move to the next non-whitespace/non-comment location in a depth-first manner.
*/
rewrite_clj.zip.move.prev = (function prev(zloc){var G__9151 = zloc;var G__9151__$1 = (((G__9151 == null))?null:clojure.zip.prev.call(null,G__9151));var G__9151__$2 = (((G__9151__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.prev,G__9151__$1));return G__9151__$2;
});
/**
* Move to the leftmost non-whitespace/non-comment location.
*/
rewrite_clj.zip.move.leftmost = (function leftmost(zloc){var G__9153 = zloc;var G__9153__$1 = (((G__9153 == null))?null:clojure.zip.leftmost.call(null,G__9153));var G__9153__$2 = (((G__9153__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace.call(null,G__9153__$1));return G__9153__$2;
});
/**
* Move to the rightmost non-whitespace/non-comment location.
*/
rewrite_clj.zip.move.rightmost = (function rightmost(zloc){var G__9155 = zloc;var G__9155__$1 = (((G__9155 == null))?null:clojure.zip.rightmost.call(null,G__9155));var G__9155__$2 = (((G__9155__$1 == null))?null:rewrite_clj.zip.whitespace.skip_whitespace_left.call(null,G__9155__$1));return G__9155__$2;
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.findz')) {
goog.provide('rewrite_clj.zip.findz');
goog.require('cljs.core');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.zip.base');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.whitespace');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.whitespace');
/**
* @param {...*} var_args
*/
rewrite_clj.zip.findz.tag_predicate = (function() { 
var tag_predicate__delegate = function (t,p__9270){var vec__9272 = p__9270;var additional = cljs.core.nth.call(null,vec__9272,0,null);if(cljs.core.truth_(additional))
{return ((function (vec__9272,additional){
return (function (node){var and__6486__auto__ = cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,node),t);if(and__6486__auto__)
{return additional.call(null,node);
} else
{return and__6486__auto__;
}
});
;})(vec__9272,additional))
} else
{return ((function (vec__9272,additional){
return (function (p1__9269_SHARP_){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,p1__9269_SHARP_),t);
});
;})(vec__9272,additional))
}
};
var tag_predicate = function (t,var_args){
var p__9270 = null;if (arguments.length > 1) {
  p__9270 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return tag_predicate__delegate.call(this,t,p__9270);};
tag_predicate.cljs$lang$maxFixedArity = 1;
tag_predicate.cljs$lang$applyTo = (function (arglist__9295){
var t = cljs.core.first(arglist__9295);
var p__9270 = cljs.core.rest(arglist__9295);
return tag_predicate__delegate(t,p__9270);
});
tag_predicate.cljs$core$IFn$_invoke$arity$variadic = tag_predicate__delegate;
return tag_predicate;
})()
;
rewrite_clj.zip.findz.in_range_QMARK_ = (function in_range_QMARK_(p__9273,p__9274){var map__9277 = p__9273;var map__9277__$1 = ((cljs.core.seq_QMARK_.call(null,map__9277))?cljs.core.apply.call(null,cljs.core.hash_map,map__9277):map__9277);var end_col = cljs.core.get.call(null,map__9277__$1,new cljs.core.Keyword(null,"end-col","end-col",3700460800));var end_row = cljs.core.get.call(null,map__9277__$1,new cljs.core.Keyword(null,"end-row","end-row",3700475226));var col = cljs.core.get.call(null,map__9277__$1,new cljs.core.Keyword(null,"col","col",1014002930));var row = cljs.core.get.call(null,map__9277__$1,new cljs.core.Keyword(null,"row","row",1014017356));var map__9278 = p__9274;var map__9278__$1 = ((cljs.core.seq_QMARK_.call(null,map__9278))?cljs.core.apply.call(null,cljs.core.hash_map,map__9278):map__9278);var r = cljs.core.get.call(null,map__9278__$1,new cljs.core.Keyword(null,"row","row",1014017356));var c = cljs.core.get.call(null,map__9278__$1,new cljs.core.Keyword(null,"col","col",1014002930));if(((row > r)) || ((r > end_row)))
{return false;
} else
{if(((r > row)) && ((end_row > r)))
{return true;
} else
{if(((c >= col)) && ((end_col > c)))
{return true;
} else
{if((cljs.core._EQ_.call(null,r,row)) && ((end_row > r)) && ((c >= col)))
{return true;
} else
{if((cljs.core._EQ_.call(null,r,end_row)) && ((end_row > r)) && ((col >= c)))
{return true;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return false;
} else
{return null;
}
}
}
}
}
}
});
/**
* Find node satisfying the given predicate by repeatedly
* applying the given movement function to the initial zipper
* location.
*/
rewrite_clj.zip.findz.find = (function() {
var find = null;
var find__2 = (function (zloc,p_QMARK_){return find.call(null,zloc,rewrite_clj.zip.move.right,p_QMARK_);
});
var find__3 = (function (zloc,f,p_QMARK_){return cljs.core.first.call(null,cljs.core.drop_while.call(null,cljs.core.complement.call(null,p_QMARK_),cljs.core.take_while.call(null,cljs.core.complement.call(null,rewrite_clj.zip.move.end_QMARK_),cljs.core.take_while.call(null,cljs.core.identity,cljs.core.iterate.call(null,f,zloc)))));
});
find = function(zloc,f,p_QMARK_){
switch(arguments.length){
case 2:
return find__2.call(this,zloc,f);
case 3:
return find__3.call(this,zloc,f,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find.cljs$core$IFn$_invoke$arity$2 = find__2;
find.cljs$core$IFn$_invoke$arity$3 = find__3;
return find;
})()
;
/**
* Find last node (if more than one node) that is in range of pos and
* satisfying the given predicate depth first from initial zipper
* location.
*/
rewrite_clj.zip.findz.find_last_by_pos = (function() {
var find_last_by_pos = null;
var find_last_by_pos__2 = (function (zloc,pos){return find_last_by_pos.call(null,zloc,pos,cljs.core.constantly.call(null,true));
});
var find_last_by_pos__3 = (function (zloc,pos,p_QMARK_){return cljs.core.last.call(null,cljs.core.filter.call(null,(function (p1__9279_SHARP_){var and__6486__auto__ = p_QMARK_.call(null,p1__9279_SHARP_);if(cljs.core.truth_(and__6486__auto__))
{return rewrite_clj.zip.findz.in_range_QMARK_.call(null,cljs.core.meta.call(null,clojure.zip.node.call(null,p1__9279_SHARP_)),pos);
} else
{return and__6486__auto__;
}
}),cljs.core.take_while.call(null,cljs.core.complement.call(null,rewrite_clj.zip.move.end_QMARK_),cljs.core.take_while.call(null,cljs.core.identity,cljs.core.iterate.call(null,clojure.zip.next,zloc)))));
});
find_last_by_pos = function(zloc,pos,p_QMARK_){
switch(arguments.length){
case 2:
return find_last_by_pos__2.call(this,zloc,pos);
case 3:
return find_last_by_pos__3.call(this,zloc,pos,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_last_by_pos.cljs$core$IFn$_invoke$arity$2 = find_last_by_pos__2;
find_last_by_pos.cljs$core$IFn$_invoke$arity$3 = find_last_by_pos__3;
return find_last_by_pos;
})()
;
/**
* Find node satisfying the given predicate by traversing
* the zipper in a depth-first way.
*/
rewrite_clj.zip.findz.find_depth_first = (function find_depth_first(zloc,p_QMARK_){return rewrite_clj.zip.findz.find.call(null,zloc,rewrite_clj.zip.move.next,p_QMARK_);
});
/**
* Find node other than the current zipper location matching
* the given predicate by applying the given movement function
* to the initial zipper location.
*/
rewrite_clj.zip.findz.find_next = (function() {
var find_next = null;
var find_next__2 = (function (zloc,p_QMARK_){return find_next.call(null,zloc,rewrite_clj.zip.move.right,p_QMARK_);
});
var find_next__3 = (function (zloc,f,p_QMARK_){var G__9281 = zloc;var G__9281__$1 = (((G__9281 == null))?null:f.call(null,G__9281));var G__9281__$2 = (((G__9281__$1 == null))?null:rewrite_clj.zip.findz.find.call(null,G__9281__$1,f,p_QMARK_));return G__9281__$2;
});
find_next = function(zloc,f,p_QMARK_){
switch(arguments.length){
case 2:
return find_next__2.call(this,zloc,f);
case 3:
return find_next__3.call(this,zloc,f,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_next.cljs$core$IFn$_invoke$arity$2 = find_next__2;
find_next.cljs$core$IFn$_invoke$arity$3 = find_next__3;
return find_next;
})()
;
/**
* Find node other than the current zipper location matching
* the given predicate by traversing the zipper in a
* depth-first way.
*/
rewrite_clj.zip.findz.find_next_depth_first = (function find_next_depth_first(zloc,p_QMARK_){return rewrite_clj.zip.findz.find_next.call(null,zloc,rewrite_clj.zip.move.next,p_QMARK_);
});
/**
* Find node with the given tag by repeatedly applying the given
* movement function to the initial zipper location.
*/
rewrite_clj.zip.findz.find_tag = (function() {
var find_tag = null;
var find_tag__2 = (function (zloc,t){return find_tag.call(null,zloc,rewrite_clj.zip.move.right,t);
});
var find_tag__3 = (function (zloc,f,t){return rewrite_clj.zip.findz.find.call(null,zloc,f,(function (p1__9282_SHARP_){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,p1__9282_SHARP_),t);
}));
});
find_tag = function(zloc,f,t){
switch(arguments.length){
case 2:
return find_tag__2.call(this,zloc,f);
case 3:
return find_tag__3.call(this,zloc,f,t);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_tag.cljs$core$IFn$_invoke$arity$2 = find_tag__2;
find_tag.cljs$core$IFn$_invoke$arity$3 = find_tag__3;
return find_tag;
})()
;
/**
* Find node other than the current zipper location with the
* given tag by repeatedly applying the given movement function to
* the initial zipper location.
*/
rewrite_clj.zip.findz.find_next_tag = (function() {
var find_next_tag = null;
var find_next_tag__2 = (function (zloc,t){return find_next_tag.call(null,zloc,rewrite_clj.zip.move.right,t);
});
var find_next_tag__3 = (function (zloc,f,t){return rewrite_clj.zip.findz.find_next.call(null,zloc,f,rewrite_clj.zip.findz.tag_predicate.call(null,t));
});
find_next_tag = function(zloc,f,t){
switch(arguments.length){
case 2:
return find_next_tag__2.call(this,zloc,f);
case 3:
return find_next_tag__3.call(this,zloc,f,t);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_next_tag.cljs$core$IFn$_invoke$arity$2 = find_next_tag__2;
find_next_tag.cljs$core$IFn$_invoke$arity$3 = find_next_tag__3;
return find_next_tag;
})()
;
/**
* Find node with the given tag and pos depth-first from initial zipper location.
*/
rewrite_clj.zip.findz.find_tag_by_pos = (function find_tag_by_pos(zloc,pos,t){return rewrite_clj.zip.findz.find_last_by_pos.call(null,zloc,pos,(function (p1__9283_SHARP_){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,p1__9283_SHARP_),t);
}));
});
/**
* Find token node matching the given predicate by applying the
* given movement function to the initial zipper location, defaulting
* to `right`.
*/
rewrite_clj.zip.findz.find_token = (function() {
var find_token = null;
var find_token__2 = (function (zloc,p_QMARK_){return find_token.call(null,zloc,rewrite_clj.zip.move.right,p_QMARK_);
});
var find_token__3 = (function (zloc,f,p_QMARK_){return rewrite_clj.zip.findz.find.call(null,zloc,f,rewrite_clj.zip.findz.tag_predicate.call(null,new cljs.core.Keyword(null,"token","token",1124445547),p_QMARK_));
});
find_token = function(zloc,f,p_QMARK_){
switch(arguments.length){
case 2:
return find_token__2.call(this,zloc,f);
case 3:
return find_token__3.call(this,zloc,f,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_token.cljs$core$IFn$_invoke$arity$2 = find_token__2;
find_token.cljs$core$IFn$_invoke$arity$3 = find_token__3;
return find_token;
})()
;
/**
* Find next token node matching the given predicate by applying the
* given movement function to the initial zipper location, defaulting
* to `right`.
*/
rewrite_clj.zip.findz.find_next_token = (function() {
var find_next_token = null;
var find_next_token__2 = (function (zloc,p_QMARK_){return find_next_token.call(null,zloc,rewrite_clj.zip.move.right,p_QMARK_);
});
var find_next_token__3 = (function (zloc,f,p_QMARK_){return rewrite_clj.zip.findz.find_token.call(null,f.call(null,zloc),f,p_QMARK_);
});
find_next_token = function(zloc,f,p_QMARK_){
switch(arguments.length){
case 2:
return find_next_token__2.call(this,zloc,f);
case 3:
return find_next_token__3.call(this,zloc,f,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_next_token.cljs$core$IFn$_invoke$arity$2 = find_next_token__2;
find_next_token.cljs$core$IFn$_invoke$arity$3 = find_next_token__3;
return find_next_token;
})()
;
/**
* Find token node whose value matches the given one by applying the
* given movement function to the initial zipper location, defaulting
* to `right`.
*/
rewrite_clj.zip.findz.find_value = (function() {
var find_value = null;
var find_value__2 = (function (zloc,v){return find_value.call(null,zloc,rewrite_clj.zip.move.right,v);
});
var find_value__3 = (function (zloc,f,v){var p_QMARK_ = ((cljs.core.set_QMARK_.call(null,v))?cljs.core.comp.call(null,v,rewrite_clj.zip.base.sexpr):(function (p1__9284_SHARP_){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.sexpr.call(null,p1__9284_SHARP_),v);
}));return rewrite_clj.zip.findz.find_token.call(null,zloc,f,p_QMARK_);
});
find_value = function(zloc,f,v){
switch(arguments.length){
case 2:
return find_value__2.call(this,zloc,f);
case 3:
return find_value__3.call(this,zloc,f,v);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_value.cljs$core$IFn$_invoke$arity$2 = find_value__2;
find_value.cljs$core$IFn$_invoke$arity$3 = find_value__3;
return find_value;
})()
;
/**
* Find next token node whose value matches the given one by applying the
* given movement function to the initial zipper location, defaulting
* to `right`.
*/
rewrite_clj.zip.findz.find_next_value = (function() {
var find_next_value = null;
var find_next_value__2 = (function (zloc,v){return find_next_value.call(null,zloc,rewrite_clj.zip.move.right,v);
});
var find_next_value__3 = (function (zloc,f,v){return rewrite_clj.zip.findz.find_value.call(null,f.call(null,zloc),f,v);
});
find_next_value = function(zloc,f,v){
switch(arguments.length){
case 2:
return find_next_value__2.call(this,zloc,f);
case 3:
return find_next_value__3.call(this,zloc,f,v);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_next_value.cljs$core$IFn$_invoke$arity$2 = find_next_value__2;
find_next_value.cljs$core$IFn$_invoke$arity$3 = find_next_value__3;
return find_next_value;
})()
;
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.utils')) {
goog.provide('rewrite_clj.zip.utils');
goog.require('cljs.core');
goog.require('clojure.zip');
goog.require('clojure.zip');
rewrite_clj.zip.utils.update_in_path = (function update_in_path(p__9220,k,f){var vec__9222 = p__9220;var node = cljs.core.nth.call(null,vec__9222,0,null);var path = cljs.core.nth.call(null,vec__9222,1,null);var loc = vec__9222;var v = cljs.core.get.call(null,path,k);if(cljs.core.seq.call(null,v))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node,cljs.core.assoc.call(null,path,k,f.call(null,v),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));
} else
{return loc;
}
});
/**
* Remove right sibling of the current node (if there is one).
*/
rewrite_clj.zip.utils.remove_right = (function remove_right(loc){return rewrite_clj.zip.utils.update_in_path.call(null,loc,new cljs.core.Keyword(null,"r","r",1013904356),cljs.core.next);
});
/**
* Remove left sibling of the current node (if there is one).
*/
rewrite_clj.zip.utils.remove_left = (function remove_left(loc){return rewrite_clj.zip.utils.update_in_path.call(null,loc,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.pop);
});
rewrite_clj.zip.utils.remove_while = (function remove_while(zloc,p_QMARK_){var zloc__$1 = zloc;while(true){
var ploc = clojure.zip.prev.call(null,zloc__$1);if(cljs.core.not.call(null,(function (){var and__6486__auto__ = ploc;if(cljs.core.truth_(and__6486__auto__))
{return p_QMARK_.call(null,ploc);
} else
{return and__6486__auto__;
}
})()))
{return zloc__$1;
} else
{{
var G__9247 = clojure.zip.remove.call(null,zloc__$1);
zloc__$1 = G__9247;
continue;
}
}
break;
}
});
/**
* Remove elements to the right of the current zipper location as long as
* the given predicate matches.
*/
rewrite_clj.zip.utils.remove_right_while = (function remove_right_while(zloc,p_QMARK_){var zloc__$1 = zloc;while(true){
var temp__4090__auto__ = clojure.zip.right.call(null,zloc__$1);if(cljs.core.truth_(temp__4090__auto__))
{var rloc = temp__4090__auto__;if(cljs.core.truth_(p_QMARK_.call(null,rloc)))
{{
var G__9248 = rewrite_clj.zip.utils.remove_right.call(null,zloc__$1);
zloc__$1 = G__9248;
continue;
}
} else
{return zloc__$1;
}
} else
{return zloc__$1;
}
break;
}
});
/**
* Remove elements to the left of the current zipper location as long as
* the given predicate matches.
*/
rewrite_clj.zip.utils.remove_left_while = (function remove_left_while(zloc,p_QMARK_){var zloc__$1 = zloc;while(true){
var temp__4090__auto__ = clojure.zip.left.call(null,zloc__$1);if(cljs.core.truth_(temp__4090__auto__))
{var lloc = temp__4090__auto__;if(cljs.core.truth_(p_QMARK_.call(null,lloc)))
{{
var G__9249 = rewrite_clj.zip.utils.remove_left.call(null,zloc__$1);
zloc__$1 = G__9249;
continue;
}
} else
{return zloc__$1;
}
} else
{return zloc__$1;
}
break;
}
});
/**
* Remove current node and move left. If current node is at the leftmost
* location, returns `nil`.
*/
rewrite_clj.zip.utils.remove_and_move_left = (function remove_and_move_left(p__9223){var vec__9226 = p__9223;var _ = cljs.core.nth.call(null,vec__9226,0,null);var map__9227 = cljs.core.nth.call(null,vec__9226,1,null);var map__9227__$1 = ((cljs.core.seq_QMARK_.call(null,map__9227))?cljs.core.apply.call(null,cljs.core.hash_map,map__9227):map__9227);var path = map__9227__$1;var l = cljs.core.get.call(null,map__9227__$1,new cljs.core.Keyword(null,"l","l",1013904350));var loc = vec__9226;if(cljs.core.seq.call(null,l))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null,l),cljs.core.assoc.call(null,cljs.core.update_in.call(null,path,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"l","l",1013904350)], null),cljs.core.pop),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));
} else
{return null;
}
});
/**
* Remove current node and move right. If current node is at the rightmost
* location, returns `nil`.
*/
rewrite_clj.zip.utils.remove_and_move_right = (function remove_and_move_right(p__9228){var vec__9231 = p__9228;var _ = cljs.core.nth.call(null,vec__9231,0,null);var map__9232 = cljs.core.nth.call(null,vec__9231,1,null);var map__9232__$1 = ((cljs.core.seq_QMARK_.call(null,map__9232))?cljs.core.apply.call(null,cljs.core.hash_map,map__9232):map__9232);var path = map__9232__$1;var r = cljs.core.get.call(null,map__9232__$1,new cljs.core.Keyword(null,"r","r",1013904356));var loc = vec__9231;if(cljs.core.seq.call(null,r))
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null,r),cljs.core.assoc.call(null,cljs.core.update_in.call(null,path,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"r","r",1013904356)], null),cljs.core.next),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc));
} else
{return null;
}
});
rewrite_clj.zip.utils.remove_and_move_up = (function remove_and_move_up(loc){var vec__9235 = loc;var node = cljs.core.nth.call(null,vec__9235,0,null);var map__9236 = cljs.core.nth.call(null,vec__9235,1,null);var map__9236__$1 = ((cljs.core.seq_QMARK_.call(null,map__9236))?cljs.core.apply.call(null,cljs.core.hash_map,map__9236):map__9236);var path = map__9236__$1;var l = cljs.core.get.call(null,map__9236__$1,new cljs.core.Keyword(null,"l","l",1013904350));var ppath = cljs.core.get.call(null,map__9236__$1,new cljs.core.Keyword(null,"ppath","ppath",1120772103));var pnodes = cljs.core.get.call(null,map__9236__$1,new cljs.core.Keyword(null,"pnodes","pnodes",4325362611));var rs = cljs.core.get.call(null,map__9236__$1,new cljs.core.Keyword(null,"r","r",1013904356));if((path == null))
{throw (new Error("Remove at top"));
} else
{if((cljs.core.count.call(null,l) > 0))
{return clojure.zip.up.call(null,cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.peek.call(null,l),cljs.core.assoc.call(null,path,new cljs.core.Keyword(null,"l","l",1013904350),cljs.core.pop.call(null,l),new cljs.core.Keyword(null,"changed?","changed?",2446321533),true)], null),cljs.core.meta.call(null,loc)));
} else
{return cljs.core.with_meta.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.zip.make_node.call(null,loc,cljs.core.peek.call(null,pnodes),rs),(function (){var and__6486__auto__ = ppath;if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.assoc.call(null,ppath,new cljs.core.Keyword(null,"changed?","changed?",2446321533),true);
} else
{return and__6486__auto__;
}
})()], null),cljs.core.meta.call(null,loc));
}
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.removez')) {
goog.provide('rewrite_clj.zip.removez');
goog.require('cljs.core');
goog.require('clojure.zip');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip.utils');
goog.require('rewrite_clj.zip.utils');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.zip.move');
/**
* Remove all whitespace following a given node.
*/
rewrite_clj.zip.removez.remove_trailing_space = (function remove_trailing_space(zloc,p_QMARK_){return rewrite_clj.zip.utils.remove_right_while.call(null,zloc,p_QMARK_);
});
/**
* Remove all whitespace preceding a given node.
*/
rewrite_clj.zip.removez.remove_preceding_space = (function remove_preceding_space(zloc,p_QMARK_){return rewrite_clj.zip.utils.remove_left_while.call(null,zloc,p_QMARK_);
});
/**
* Remove value at the given zipper location. Returns the first non-whitespace
* node that would have preceded it in a depth-first walk. Will remove whitespace
* appropriately.
* 
* - `[1  2  3]   => [1  3]`
* - `[1 2]       => [1]`
* - `[1 2]       => [2]`
* - `[1]         => []`
* - `[  1  ]     => []`
* - `[1 [2 3] 4] => [1 [2 3]]`
* - `[1 [2 3] 4] => [[2 3] 4]`
* 
* If a node is located rightmost, both preceding and trailing spaces are removed,
* otherwise only trailing spaces are touched. This means that a following element
* (no matter whether on the same line or not) will end up in the same position
* (line/column) as the removed one, _unless_ a comment lies between the original
* node and the neighbour.
*/
rewrite_clj.zip.removez.remove = (function remove(zloc){if(cljs.core.truth_(zloc))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null)))].join('')));
}
var _PERCENT_ = rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.prev,clojure.zip.remove.call(null,rewrite_clj.zip.removez.remove_trailing_space.call(null,(((rewrite_clj.zip.move.rightmost_QMARK_.call(null,zloc)) || (rewrite_clj.zip.move.leftmost_QMARK_.call(null,zloc)))?rewrite_clj.zip.removez.remove_preceding_space.call(null,zloc,rewrite_clj.zip.whitespace.whitespace_QMARK_):zloc),rewrite_clj.zip.whitespace.whitespace_QMARK_)));if(cljs.core.truth_(_PERCENT_))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,new cljs.core.Symbol(null,"%","%",-1640531490,null)))].join('')));
}
return _PERCENT_;
});
/**
* Same as remove but preserves newlines
*/
rewrite_clj.zip.removez.remove_preserve_newline = (function remove_preserve_newline(zloc){if(cljs.core.truth_(zloc))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null)))].join('')));
}
var _PERCENT_ = rewrite_clj.zip.whitespace.skip_whitespace.call(null,clojure.zip.prev,clojure.zip.remove.call(null,rewrite_clj.zip.removez.remove_trailing_space.call(null,(((rewrite_clj.zip.move.rightmost_QMARK_.call(null,zloc)) || (rewrite_clj.zip.move.leftmost_QMARK_.call(null,zloc)))?rewrite_clj.zip.removez.remove_preceding_space.call(null,zloc,(function (p1__9208_SHARP_){var and__6486__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null,p1__9208_SHARP_);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,p1__9208_SHARP_));
} else
{return and__6486__auto__;
}
})):zloc),(function (p1__9209_SHARP_){var and__6486__auto__ = rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null,p1__9209_SHARP_);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,p1__9209_SHARP_));
} else
{return and__6486__auto__;
}
}))));if(cljs.core.truth_(_PERCENT_))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,new cljs.core.Symbol(null,"%","%",-1640531490,null)))].join('')));
}
return _PERCENT_;
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.editz')) {
goog.provide('rewrite_clj.zip.editz');
goog.require('cljs.core');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.zip.utils');
goog.require('rewrite_clj.zip.removez');
goog.require('rewrite_clj.zip.removez');
goog.require('rewrite_clj.zip.utils');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.whitespace');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.whitespace');
/**
* Replace the node at the given location with one representing
* the given value. (The value will be coerced to a node if
* possible.)
*/
rewrite_clj.zip.editz.replace = (function replace(zloc,value){return clojure.zip.replace.call(null,zloc,rewrite_clj.node.coerce.call(null,value));
});
/**
* Create s-expression from node, apply the function and create
* node from the result.
*/
rewrite_clj.zip.editz.edit_node = (function edit_node(node,f){return rewrite_clj.node.coerce.call(null,f.call(null,rewrite_clj.node.sexpr.call(null,node)));
});
/**
* Apply the given function to the s-expression at the given
* location, using its result to replace the node there. (The
* result will be coerced to a node if possible.)
* @param {...*} var_args
*/
rewrite_clj.zip.editz.edit = (function() { 
var edit__delegate = function (zloc,f,args){return clojure.zip.edit.call(null,zloc,rewrite_clj.zip.editz.edit_node,(function (p1__9250_SHARP_){return cljs.core.apply.call(null,f,p1__9250_SHARP_,args);
}));
};
var edit = function (zloc,f,var_args){
var args = null;if (arguments.length > 2) {
  args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return edit__delegate.call(this,zloc,f,args);};
edit.cljs$lang$maxFixedArity = 2;
edit.cljs$lang$applyTo = (function (arglist__9268){
var zloc = cljs.core.first(arglist__9268);
arglist__9268 = cljs.core.next(arglist__9268);
var f = cljs.core.first(arglist__9268);
var args = cljs.core.rest(arglist__9268);
return edit__delegate(zloc,f,args);
});
edit.cljs$core$IFn$_invoke$arity$variadic = edit__delegate;
return edit;
})()
;
/**
* Splice the given node, i.e. merge its children into the current one
* (akin to Clojure's `unquote-splicing` macro: `~@...`).
* - if the node is not one that can have children, no modification will
* be performed.
* - if the node has no or only whitespace children, it will be removed.
* - otherwise, splicing will be performed, moving the zipper to the first
* non-whitespace child afterwards.
* 
*/
rewrite_clj.zip.editz.splice = (function splice(zloc){if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null,zloc)))
{var temp__4090__auto__ = cljs.core.seq.call(null,cljs.core.drop_while.call(null,rewrite_clj.node.whitespace_QMARK_,cljs.core.reverse.call(null,cljs.core.drop_while.call(null,rewrite_clj.node.whitespace_QMARK_,clojure.zip.children.call(null,zloc)))));if(temp__4090__auto__)
{var children = temp__4090__auto__;var loc = rewrite_clj.zip.utils.remove_and_move_right.call(null,cljs.core.reduce.call(null,clojure.zip.insert_right,zloc,children));var or__6498__auto__ = rewrite_clj.zip.whitespace.skip_whitespace.call(null,loc);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return loc;
}
} else
{return rewrite_clj.zip.removez.remove.call(null,zloc);
}
} else
{return zloc;
}
});
rewrite_clj.zip.editz.edit_token = (function edit_token(zloc,str_fn){var e = rewrite_clj.zip.base.sexpr.call(null,zloc);var e_SINGLEQUOTE_ = ((typeof e === 'string')?str_fn.call(null,e):(((e instanceof cljs.core.Keyword))?cljs.core.keyword.call(null,cljs.core.namespace.call(null,e),str_fn.call(null,cljs.core.name.call(null,e))):(((e instanceof cljs.core.Symbol))?cljs.core.symbol.call(null,cljs.core.namespace.call(null,e),str_fn.call(null,cljs.core.name.call(null,e))):null)));return clojure.zip.replace.call(null,zloc,rewrite_clj.node.token_node.call(null,e_SINGLEQUOTE_));
});
rewrite_clj.zip.editz.edit_multi_line = (function edit_multi_line(zloc,line_fn){var n = cljs.core.update_in.call(null,clojure.zip.node.call(null,zloc),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"lines","lines",1116881521)], null),cljs.core.comp.call(null,line_fn,cljs.core.vec));return clojure.zip.replace.call(null,zloc,n);
});
rewrite_clj.zip.editz.prefix = (function prefix(zloc,s){var G__9254 = rewrite_clj.zip.base.tag.call(null,zloc);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"multi-line","multi-line",2217102202),G__9254))
{return rewrite_clj.zip.editz.edit_multi_line.call(null,zloc,((function (G__9254){
return (function (lines){if(cljs.core.empty_QMARK_.call(null,lines))
{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
} else
{return cljs.core.update_in.call(null,lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [0], null),((function (G__9254){
return (function (p1__9252_SHARP_){return [cljs.core.str(s),cljs.core.str(p1__9252_SHARP_)].join('');
});})(G__9254))
);
}
});})(G__9254))
);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"token","token",1124445547),G__9254))
{return rewrite_clj.zip.editz.edit_token.call(null,zloc,((function (G__9254){
return (function (p1__9251_SHARP_){return [cljs.core.str(s),cljs.core.str(p1__9251_SHARP_)].join('');
});})(G__9254))
);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{throw (new Error([cljs.core.str("No matching clause: "),cljs.core.str(rewrite_clj.zip.base.tag.call(null,zloc))].join('')));
} else
{return null;
}
}
}
});
rewrite_clj.zip.editz.suffix = (function suffix(zloc,s){var G__9257 = rewrite_clj.zip.base.tag.call(null,zloc);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"multi-line","multi-line",2217102202),G__9257))
{return rewrite_clj.zip.editz.edit_multi_line.call(null,zloc,((function (G__9257){
return (function (lines){if(cljs.core.empty_QMARK_.call(null,lines))
{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
} else
{return cljs.core.concat.call(null,cljs.core.butlast.call(null,lines),[cljs.core.str(cljs.core.last.call(null,lines)),cljs.core.str(s)].join(''));
}
});})(G__9257))
);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"token","token",1124445547),G__9257))
{return rewrite_clj.zip.editz.edit_token.call(null,zloc,((function (G__9257){
return (function (p1__9255_SHARP_){return [cljs.core.str(p1__9255_SHARP_),cljs.core.str(s)].join('');
});})(G__9257))
);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{throw (new Error([cljs.core.str("No matching clause: "),cljs.core.str(rewrite_clj.zip.base.tag.call(null,zloc))].join('')));
} else
{return null;
}
}
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.insert')) {
goog.provide('rewrite_clj.zip.insert');
goog.require('cljs.core');
goog.require('clojure.zip');
goog.require('clojure.zip');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.zip.base');
rewrite_clj.zip.insert.space = rewrite_clj.node.spaces.call(null,1);
/**
* Generic insertion helper. If the node reached by `move-fn`
* is a whitespace, insert an additional space.
*/
rewrite_clj.zip.insert.insert = (function insert(move_fn,insert_fn,prefix,zloc,item){var item_node = rewrite_clj.node.coerce.call(null,item);var next_node = move_fn.call(null,zloc);return cljs.core.reduce.call(null,insert_fn,zloc,(cljs.core.truth_((function (){var or__6498__auto__ = cljs.core.not.call(null,next_node);if(or__6498__auto__)
{return or__6498__auto__;
} else
{return rewrite_clj.zip.whitespace.whitespace_QMARK_.call(null,next_node);
}
})())?cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [item_node], null),prefix):cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space,item_node], null),prefix)));
});
/**
* Insert item to the right of the current location. Will insert a space if necessary.
*/
rewrite_clj.zip.insert.insert_right = (function insert_right(zloc,item){return rewrite_clj.zip.insert.insert.call(null,clojure.zip.right,clojure.zip.insert_right,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null),zloc,item);
});
/**
* Insert item to the right of the left location. Will insert a space if necessary.
*/
rewrite_clj.zip.insert.insert_left = (function insert_left(zloc,item){return rewrite_clj.zip.insert.insert.call(null,clojure.zip.left,clojure.zip.insert_left,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.insert.space], null),zloc,item);
});
/**
* Insert item as first child of the current node. Will insert a space if necessary.
*/
rewrite_clj.zip.insert.insert_child = (function insert_child(zloc,item){return rewrite_clj.zip.insert.insert.call(null,clojure.zip.down,clojure.zip.insert_child,cljs.core.PersistentVector.EMPTY,zloc,item);
});
/**
* Insert item as last child of the current node. Will insert a space if necessary.
*/
rewrite_clj.zip.insert.append_child = (function append_child(zloc,item){return rewrite_clj.zip.insert.insert.call(null,(function (p1__9195_SHARP_){var G__9197 = p1__9195_SHARP_;var G__9197__$1 = (((G__9197 == null))?null:clojure.zip.down.call(null,G__9197));var G__9197__$2 = (((G__9197__$1 == null))?null:clojure.zip.rightmost.call(null,G__9197__$1));return G__9197__$2;
}),clojure.zip.append_child,cljs.core.PersistentVector.EMPTY,zloc,item);
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip.seqz')) {
goog.provide('rewrite_clj.zip.seqz');
goog.require('cljs.core');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.zip.insert');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.editz');
goog.require('rewrite_clj.zip.findz');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.findz');
goog.require('rewrite_clj.zip.editz');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.zip.insert');
goog.require('rewrite_clj.zip.base');
rewrite_clj.zip.seqz.seq_QMARK_ = (function seq_QMARK_(zloc){return cljs.core.contains_QMARK_.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"vector","vector",4488484021),null,new cljs.core.Keyword(null,"forms","forms",1111523233),null,new cljs.core.Keyword(null,"map","map",1014012110),null,new cljs.core.Keyword(null,"set","set",1014018004),null,new cljs.core.Keyword(null,"list","list",1017226256),null], null), null),rewrite_clj.zip.base.tag.call(null,zloc));
});
rewrite_clj.zip.seqz.list_QMARK_ = (function list_QMARK_(zloc){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,zloc),new cljs.core.Keyword(null,"list","list",1017226256));
});
rewrite_clj.zip.seqz.vector_QMARK_ = (function vector_QMARK_(zloc){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,zloc),new cljs.core.Keyword(null,"vector","vector",4488484021));
});
rewrite_clj.zip.seqz.set_QMARK_ = (function set_QMARK_(zloc){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,zloc),new cljs.core.Keyword(null,"set","set",1014018004));
});
rewrite_clj.zip.seqz.map_QMARK_ = (function map_QMARK_(zloc){return cljs.core._EQ_.call(null,rewrite_clj.zip.base.tag.call(null,zloc),new cljs.core.Keyword(null,"map","map",1014012110));
});
rewrite_clj.zip.seqz.map_seq = (function map_seq(f,zloc){if(rewrite_clj.zip.seqz.seq_QMARK_.call(null,zloc))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"seq?","seq?",-1637004935,null),new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null))))].join('')));
}
var temp__4090__auto__ = rewrite_clj.zip.move.down.call(null,zloc);if(cljs.core.truth_(temp__4090__auto__))
{var n0 = temp__4090__auto__;var G__9115 = f.call(null,n0);var G__9115__$1 = (((G__9115 == null))?null:cljs.core.iterate.call(null,((function (G__9115,n0,temp__4090__auto__){
return (function (loc){var temp__4090__auto____$1 = rewrite_clj.zip.move.right.call(null,loc);if(cljs.core.truth_(temp__4090__auto____$1))
{var n = temp__4090__auto____$1;return f.call(null,n);
} else
{return null;
}
});})(G__9115,n0,temp__4090__auto__))
,G__9115));var G__9115__$2 = (((G__9115__$1 == null))?null:cljs.core.take_while.call(null,cljs.core.identity,G__9115__$1));var G__9115__$3 = (((G__9115__$2 == null))?null:cljs.core.last.call(null,G__9115__$2));var G__9115__$4 = (((G__9115__$3 == null))?null:rewrite_clj.zip.move.up.call(null,G__9115__$3));return G__9115__$4;
} else
{return zloc;
}
});
/**
* Apply function to all value nodes of the given map node.
*/
rewrite_clj.zip.seqz.map_vals = (function map_vals(f,zloc){if(rewrite_clj.zip.seqz.map_QMARK_.call(null,zloc))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"map?","map?",-1637187556,null),new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null))))].join('')));
}
var loc = rewrite_clj.zip.move.down.call(null,zloc);var parent = zloc;while(true){
if(cljs.core.not.call(null,(function (){var and__6486__auto__ = loc;if(cljs.core.truth_(and__6486__auto__))
{return clojure.zip.node.call(null,loc);
} else
{return and__6486__auto__;
}
})()))
{return parent;
} else
{var temp__4090__auto__ = rewrite_clj.zip.move.right.call(null,loc);if(cljs.core.truth_(temp__4090__auto__))
{var v0 = temp__4090__auto__;var temp__4090__auto____$1 = f.call(null,v0);if(cljs.core.truth_(temp__4090__auto____$1))
{var v = temp__4090__auto____$1;{
var G__9130 = rewrite_clj.zip.move.right.call(null,v);
var G__9131 = rewrite_clj.zip.move.up.call(null,v);
loc = G__9130;
parent = G__9131;
continue;
}
} else
{{
var G__9132 = rewrite_clj.zip.move.right.call(null,v0);
var G__9133 = parent;
loc = G__9132;
parent = G__9133;
continue;
}
}
} else
{return parent;
}
}
break;
}
});
/**
* Apply function to all key nodes of the given map node.
*/
rewrite_clj.zip.seqz.map_keys = (function map_keys(f,zloc){if(rewrite_clj.zip.seqz.map_QMARK_.call(null,zloc))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"map?","map?",-1637187556,null),new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null))))].join('')));
}
var loc = rewrite_clj.zip.move.down.call(null,zloc);var parent = zloc;while(true){
if(cljs.core.not.call(null,(function (){var and__6486__auto__ = loc;if(cljs.core.truth_(and__6486__auto__))
{return clojure.zip.node.call(null,loc);
} else
{return and__6486__auto__;
}
})()))
{return parent;
} else
{var temp__4090__auto__ = f.call(null,loc);if(cljs.core.truth_(temp__4090__auto__))
{var v = temp__4090__auto__;{
var G__9134 = rewrite_clj.zip.move.right.call(null,rewrite_clj.zip.move.right.call(null,v));
var G__9135 = rewrite_clj.zip.move.up.call(null,v);
loc = G__9134;
parent = G__9135;
continue;
}
} else
{{
var G__9136 = rewrite_clj.zip.move.right.call(null,rewrite_clj.zip.move.right.call(null,loc));
var G__9137 = parent;
loc = G__9136;
parent = G__9137;
continue;
}
}
}
break;
}
});
/**
* Apply function to all value nodes in the given seq node. Iterates over
* value nodes of maps but over each element of a seq.
*/
rewrite_clj.zip.seqz.map = (function map(f,zloc){if(rewrite_clj.zip.seqz.seq_QMARK_.call(null,zloc))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"seq?","seq?",-1637004935,null),new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null))))].join('')));
}
if(rewrite_clj.zip.seqz.map_QMARK_.call(null,zloc))
{return rewrite_clj.zip.seqz.map_vals.call(null,f,zloc);
} else
{return rewrite_clj.zip.seqz.map_seq.call(null,f,zloc);
}
});
/**
* If a map is given, get element with the given key; if a seq is given, get nth element.
*/
rewrite_clj.zip.seqz.get = (function get(zloc,k){if((rewrite_clj.zip.seqz.map_QMARK_.call(null,zloc)) || ((rewrite_clj.zip.seqz.seq_QMARK_.call(null,zloc)) && (cljs.core.integer_QMARK_.call(null,k))))
{} else
{throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.call(null,cljs.core.list(new cljs.core.Symbol(null,"or","or",-1640527972,null),cljs.core.list(new cljs.core.Symbol(null,"map?","map?",-1637187556,null),new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null)),cljs.core.list(new cljs.core.Symbol(null,"and","and",-1640434800,null),cljs.core.list(new cljs.core.Symbol(null,"seq?","seq?",-1637004935,null),new cljs.core.Symbol(null,"zloc","zloc",-1636789697,null)),cljs.core.list(new cljs.core.Symbol(null,"integer?","integer?",-1070456710,null),new cljs.core.Symbol(null,"k","k",-1640531420,null))))))].join('')));
}
if(rewrite_clj.zip.seqz.map_QMARK_.call(null,zloc))
{var G__9118 = zloc;var G__9118__$1 = (((G__9118 == null))?null:rewrite_clj.zip.move.down.call(null,G__9118));var G__9118__$2 = (((G__9118__$1 == null))?null:rewrite_clj.zip.findz.find_value.call(null,G__9118__$1,k));var G__9118__$3 = (((G__9118__$2 == null))?null:rewrite_clj.zip.move.right.call(null,G__9118__$2));return G__9118__$3;
} else
{return cljs.core.nth.call(null,(function (){var G__9119 = rewrite_clj.zip.move.down.call(null,zloc);var G__9119__$1 = (((G__9119 == null))?null:cljs.core.iterate.call(null,rewrite_clj.zip.move.right,G__9119));var G__9119__$2 = (((G__9119__$1 == null))?null:cljs.core.take_while.call(null,cljs.core.identity,G__9119__$1));return G__9119__$2;
})(),k);
}
});
/**
* Set map/seq element to the given value.
*/
rewrite_clj.zip.seqz.assoc = (function assoc(zloc,k,v){var temp__4090__auto__ = rewrite_clj.zip.seqz.get.call(null,zloc,k);if(cljs.core.truth_(temp__4090__auto__))
{var vloc = temp__4090__auto__;return rewrite_clj.zip.move.up.call(null,rewrite_clj.zip.editz.replace.call(null,vloc,v));
} else
{if(rewrite_clj.zip.seqz.map_QMARK_.call(null,zloc))
{return rewrite_clj.zip.insert.append_child.call(null,rewrite_clj.zip.insert.append_child.call(null,zloc,k),v);
} else
{throw (new Error([cljs.core.str("index out of bounds: "),cljs.core.str(k)].join('')));
}
}
});
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.zip')) {
goog.provide('rewrite_clj.zip');
goog.require('cljs.core');
goog.require('rewrite_clj.zip.seqz');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.zip.insert');
goog.require('rewrite_clj.zip.removez');
goog.require('rewrite_clj.parser');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.editz');
goog.require('rewrite_clj.zip.findz');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.findz');
goog.require('rewrite_clj.zip.seqz');
goog.require('rewrite_clj.zip.move');
goog.require('rewrite_clj.parser');
goog.require('rewrite_clj.zip.insert');
goog.require('rewrite_clj.zip.base');
goog.require('rewrite_clj.zip.removez');
goog.require('rewrite_clj.zip.editz');
/**
* Function reference to clojure.zip/node
*/
rewrite_clj.zip.node = clojure.zip.node;
/**
* Function reference to clojure.zip/root
*/
rewrite_clj.zip.root = clojure.zip.root;
/**
* See [[base/of-string]]
*/
rewrite_clj.zip.of_string = rewrite_clj.zip.base.of_string;
/**
* See [[base/root-string]]
*/
rewrite_clj.zip.root_string = rewrite_clj.zip.base.root_string;
/**
* See [[base/string]]
*/
rewrite_clj.zip.string = rewrite_clj.zip.base.string;
/**
* See [[base/tag]]
*/
rewrite_clj.zip.tag = rewrite_clj.zip.base.tag;
/**
* See [[base/sexpr]]
*/
rewrite_clj.zip.sexpr = rewrite_clj.zip.base.sexpr;
/**
* See [[move/right]]
*/
rewrite_clj.zip.right = rewrite_clj.zip.move.right;
/**
* See [[move/left]]
*/
rewrite_clj.zip.left = rewrite_clj.zip.move.left;
/**
* See [[move/down]]
*/
rewrite_clj.zip.down = rewrite_clj.zip.move.down;
/**
* See [[move/up]]
*/
rewrite_clj.zip.up = rewrite_clj.zip.move.up;
/**
* See [[move/next]]
*/
rewrite_clj.zip.next = rewrite_clj.zip.move.next;
/**
* See [[move/end?]]
*/
rewrite_clj.zip.end_QMARK_ = rewrite_clj.zip.move.end_QMARK_;
/**
* See [[move/rightmost?]]
*/
rewrite_clj.zip.rightmost_QMARK_ = rewrite_clj.zip.move.rightmost_QMARK_;
/**
* See [[move/leftmost?]]
*/
rewrite_clj.zip.leftmost_QMARK_ = rewrite_clj.zip.move.leftmost_QMARK_;
/**
* See [[move/prev]]
*/
rewrite_clj.zip.prev = rewrite_clj.zip.move.prev;
/**
* See [[move/leftmost]]
*/
rewrite_clj.zip.leftmost = rewrite_clj.zip.move.leftmost;
/**
* See [[move/rightmost]]
*/
rewrite_clj.zip.rightmost = rewrite_clj.zip.move.rightmost;
/**
* See [[findz/find]]
*/
rewrite_clj.zip.find = rewrite_clj.zip.findz.find;
/**
* See [[findz/find-last-by-pos]]
*/
rewrite_clj.zip.find_last_by_pos = rewrite_clj.zip.findz.find_last_by_pos;
/**
* See [[findz/find-depth-first]]
*/
rewrite_clj.zip.find_depth_first = rewrite_clj.zip.findz.find_depth_first;
/**
* See [[findz/find-next]]
*/
rewrite_clj.zip.find_next = rewrite_clj.zip.findz.find_next;
/**
* See [[findz/find-next-depth-first]]
*/
rewrite_clj.zip.find_next_depth_first = rewrite_clj.zip.findz.find_next_depth_first;
/**
* See [[findz/find-tag]]
*/
rewrite_clj.zip.find_tag = rewrite_clj.zip.findz.find_tag;
/**
* See [[findz/find-next-tag]]
*/
rewrite_clj.zip.find_next_tag = rewrite_clj.zip.findz.find_next_tag;
/**
* See [[findz/tag-by-pos]]
*/
rewrite_clj.zip.find_tag_by_pos = rewrite_clj.zip.findz.find_tag_by_pos;
/**
* See [[findz/find-token]]
*/
rewrite_clj.zip.find_token = rewrite_clj.zip.findz.find_token;
/**
* See [[findz/find-next-token]]
*/
rewrite_clj.zip.find_next_token = rewrite_clj.zip.findz.find_next_token;
/**
* See [[findz/find-value]]
*/
rewrite_clj.zip.find_value = rewrite_clj.zip.findz.find_value;
/**
* See [[findz/find-next-value]]
*/
rewrite_clj.zip.find_next_value = rewrite_clj.zip.findz.find_next_value;
/**
* See [[editz/replace]]
*/
rewrite_clj.zip.replace = rewrite_clj.zip.editz.replace;
/**
* See [[editz/edit]]
*/
rewrite_clj.zip.edit = rewrite_clj.zip.editz.edit;
/**
* See [[editz/splice]]
*/
rewrite_clj.zip.splice = rewrite_clj.zip.editz.splice;
/**
* See [[editz/prefix]]
*/
rewrite_clj.zip.prefix = rewrite_clj.zip.editz.prefix;
/**
* See [[editz/suffix]]
*/
rewrite_clj.zip.suffix = rewrite_clj.zip.editz.suffix;
/**
* See [[removez/remove]]
*/
rewrite_clj.zip.remove = rewrite_clj.zip.removez.remove;
/**
* See [[removez/remove-preserve-newline]]
*/
rewrite_clj.zip.remove_preserve_newline = rewrite_clj.zip.removez.remove_preserve_newline;
/**
* See [[insert/insert-right]]
*/
rewrite_clj.zip.insert_right = rewrite_clj.zip.insert.insert_right;
/**
* See [[insert/insert-left]]
*/
rewrite_clj.zip.insert_left = rewrite_clj.zip.insert.insert_left;
/**
* See [[insert/insert-child]]
*/
rewrite_clj.zip.insert_child = rewrite_clj.zip.insert.insert_child;
/**
* See [[insert/append-child]]
*/
rewrite_clj.zip.append_child = rewrite_clj.zip.insert.append_child;
/**
* See [[seqz/seq?]]
*/
rewrite_clj.zip.seq_QMARK_ = rewrite_clj.zip.seqz.seq_QMARK_;
/**
* See [[seqz/list?]]
*/
rewrite_clj.zip.list_QMARK_ = rewrite_clj.zip.seqz.list_QMARK_;
/**
* See [[seqz/vector?]]
*/
rewrite_clj.zip.vector_QMARK_ = rewrite_clj.zip.seqz.vector_QMARK_;
/**
* See [[seqz/set?]]
*/
rewrite_clj.zip.set_QMARK_ = rewrite_clj.zip.seqz.set_QMARK_;
/**
* See [[seqz/map?]]
*/
rewrite_clj.zip.map_QMARK_ = rewrite_clj.zip.seqz.map_QMARK_;
/**
* See [[seqz/map-vals]]
*/
rewrite_clj.zip.map_vals = rewrite_clj.zip.seqz.map_vals;
/**
* See [[seqz/map-keys]]
*/
rewrite_clj.zip.map_keys = rewrite_clj.zip.seqz.map_keys;
/**
* See [[seqz/map]]
*/
rewrite_clj.zip.map = rewrite_clj.zip.seqz.map;
/**
* See [[seqz/get]]
*/
rewrite_clj.zip.get = rewrite_clj.zip.seqz.get;
/**
* See [[seqz/assoc]]
*/
rewrite_clj.zip.assoc = rewrite_clj.zip.seqz.assoc;
}
if(!lt.util.load.provided_QMARK_('rewrite-clj.paredit')) {
goog.provide('rewrite_clj.paredit');
goog.require('cljs.core');
goog.require('rewrite_clj.node.stringz');
goog.require('rewrite_clj.zip.utils');
goog.require('rewrite_clj.zip.utils');
goog.require('clojure.zip');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.whitespace');
goog.require('rewrite_clj.zip');
goog.require('rewrite_clj.zip');
goog.require('rewrite_clj.node');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('rewrite_clj.node.stringz');
goog.require('rewrite_clj.node.stringz');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.whitespace');
rewrite_clj.paredit.empty_seq_QMARK_ = (function empty_seq_QMARK_(zloc){var and__6486__auto__ = rewrite_clj.zip.seq_QMARK_.call(null,zloc);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,cljs.core.seq.call(null,rewrite_clj.zip.sexpr.call(null,zloc)));
} else
{return and__6486__auto__;
}
});
rewrite_clj.paredit.move_n = (function move_n(loc,f,n){if(cljs.core._EQ_.call(null,0,n))
{return loc;
} else
{return cljs.core.last.call(null,cljs.core.take.call(null,(n + 1),cljs.core.iterate.call(null,f,loc)));
}
});
rewrite_clj.paredit.top = (function top(zloc){return cljs.core.last.call(null,cljs.core.take_while.call(null,cljs.core.identity,cljs.core.iterate.call(null,rewrite_clj.zip.up,zloc)));
});
rewrite_clj.paredit.global_find_by_node = (function global_find_by_node(zloc,n){return rewrite_clj.zip.find.call(null,rewrite_clj.paredit.top.call(null,zloc),clojure.zip.next,(function (p1__9526_SHARP_){return cljs.core._EQ_.call(null,cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,p1__9526_SHARP_)),cljs.core.meta.call(null,n));
}));
});
rewrite_clj.paredit.nodes_by_dir = (function() {
var nodes_by_dir = null;
var nodes_by_dir__2 = (function (zloc,f){return nodes_by_dir.call(null,zloc,f,cljs.core.constantly);
});
var nodes_by_dir__3 = (function (zloc,f,p_QMARK_){return cljs.core.map.call(null,rewrite_clj.zip.node,cljs.core.take_while.call(null,p_QMARK_,cljs.core.take_while.call(null,cljs.core.identity,cljs.core.iterate.call(null,f,zloc))));
});
nodes_by_dir = function(zloc,f,p_QMARK_){
switch(arguments.length){
case 2:
return nodes_by_dir__2.call(this,zloc,f);
case 3:
return nodes_by_dir__3.call(this,zloc,f,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nodes_by_dir.cljs$core$IFn$_invoke$arity$2 = nodes_by_dir__2;
nodes_by_dir.cljs$core$IFn$_invoke$arity$3 = nodes_by_dir__3;
return nodes_by_dir;
})()
;
rewrite_clj.paredit.remove_first_if_ws = (function remove_first_if_ws(nodes){if(cljs.core.seq.call(null,nodes))
{if(cljs.core.truth_(rewrite_clj.node.whitespace_QMARK_.call(null,cljs.core.first.call(null,nodes))))
{return cljs.core.rest.call(null,nodes);
} else
{return nodes;
}
} else
{return null;
}
});
rewrite_clj.paredit.remove_ws_or_comment = (function remove_ws_or_comment(zloc){while(true){
if(cljs.core.not.call(null,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_.call(null,zloc)))
{return zloc;
} else
{{
var G__9585 = clojure.zip.remove.call(null,zloc);
zloc = G__9585;
continue;
}
}
break;
}
});
/**
* Creates a sequence node of given type `t` with node values of `v`
*/
rewrite_clj.paredit.create_seq_node = (function create_seq_node(t,v){var G__9528 = t;if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"set","set",1014018004),G__9528))
{return rewrite_clj.node.set_node.call(null,v);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"map","map",1014012110),G__9528))
{return rewrite_clj.node.map_node.call(null,v);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"vector","vector",4488484021),G__9528))
{return rewrite_clj.node.vector_node.call(null,v);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"list","list",1017226256),G__9528))
{return rewrite_clj.node.list_node.call(null,v);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{throw (new Error([cljs.core.str("Unsupported wrap type: "),cljs.core.str(t)].join('')));
} else
{return null;
}
}
}
}
}
});
rewrite_clj.paredit.string_node_QMARK_ = (function string_node_QMARK_(zloc){return cljs.core._EQ_.call(null,(function (){var G__9530 = zloc;var G__9530__$1 = (((G__9530 == null))?null:rewrite_clj.zip.node.call(null,G__9530));var G__9530__$2 = (((G__9530__$1 == null))?null:cljs.core.type.call(null,G__9530__$1));return G__9530__$2;
})(),cljs.core.type.call(null,rewrite_clj.node.string_node.call(null," ")));
});
/**
* Kill all sibling nodes to the right of the current node
* 
* - [1 2| 3 4] => [1 2|]
*/
rewrite_clj.paredit.kill = (function kill(zloc){var left = clojure.zip.left.call(null,zloc);return ((function (left){
return (function (p1__9531_SHARP_){if(cljs.core.truth_(left))
{return rewrite_clj.paredit.global_find_by_node.call(null,p1__9531_SHARP_,rewrite_clj.zip.node.call(null,left));
} else
{return p1__9531_SHARP_;
}
});})(left))
.call(null,clojure.zip.remove.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,zloc,cljs.core.constantly.call(null,true))));
});
rewrite_clj.paredit.kill_in_string_node = (function kill_in_string_node(zloc,pos){if(cljs.core._EQ_.call(null,rewrite_clj.zip.string.call(null,zloc),"\"\""))
{return rewrite_clj.zip.remove.call(null,zloc);
} else
{var bounds = cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,zloc));var row_idx = (new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(pos) - new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(bounds));var sub_length = ((!(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(pos),new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(bounds))))?(new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - 1):(new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - (new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(bounds) + 1)));return ((function (bounds,row_idx,sub_length){
return (function (p1__9533_SHARP_){return rewrite_clj.zip.replace.call(null,zloc,rewrite_clj.node.string_node.call(null,p1__9533_SHARP_));
});})(bounds,row_idx,sub_length))
.call(null,cljs.core.update_in.call(null,cljs.core.vec.call(null,cljs.core.take.call(null,(row_idx + 1),new cljs.core.Keyword(null,"lines","lines",1116881521).cljs$core$IFn$_invoke$arity$1(rewrite_clj.zip.node.call(null,zloc)))),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [row_idx], null),((function (bounds,row_idx,sub_length){
return (function (p1__9532_SHARP_){return p1__9532_SHARP_.substring(0,sub_length);
});})(bounds,row_idx,sub_length))
));
}
});
rewrite_clj.paredit.kill_in_comment_node = (function kill_in_comment_node(zloc,pos){var col_bounds = new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,zloc)));if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos),col_bounds))
{return rewrite_clj.zip.remove.call(null,zloc);
} else
{return ((function (col_bounds){
return (function (p1__9534_SHARP_){if(cljs.core.truth_(clojure.zip.right.call(null,p1__9534_SHARP_)))
{return clojure.zip.insert_right.call(null,p1__9534_SHARP_,rewrite_clj.node.newlines.call(null,1));
} else
{return p1__9534_SHARP_;
}
});})(col_bounds))
.call(null,rewrite_clj.zip.replace.call(null,zloc,rewrite_clj.node.comment_node.call(null,new cljs.core.Keyword(null,"s","s",1013904357).cljs$core$IFn$_invoke$arity$1(rewrite_clj.zip.node.call(null,zloc)).substring(0,((new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - col_bounds) - 1)))));
}
});
/**
* In string and comment aware kill
* 
* Perform kill for given position `pos` Like [[kill]], but:
* 
* - if inside string kills to end of string and stops there
* - If inside comment kills to end of line (not including linebreak!)
* 
* `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents
* `zloc` must be positioned at a node previous (given depth first) to the node at given pos
*/
rewrite_clj.paredit.kill_at_pos = (function kill_at_pos(zloc,pos){var temp__4090__auto__ = rewrite_clj.zip.find_last_by_pos.call(null,zloc,pos);if(cljs.core.truth_(temp__4090__auto__))
{var candidate = temp__4090__auto__;if(rewrite_clj.paredit.string_node_QMARK_.call(null,candidate))
{return rewrite_clj.paredit.kill_in_string_node.call(null,candidate,pos);
} else
{if(cljs.core.truth_(rewrite_clj.zip.whitespace.comment_QMARK_.call(null,candidate)))
{return rewrite_clj.paredit.kill_in_comment_node.call(null,candidate,pos);
} else
{if(cljs.core.truth_((function (){var and__6486__auto__ = rewrite_clj.paredit.empty_seq_QMARK_.call(null,candidate);if(cljs.core.truth_(and__6486__auto__))
{return (new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) > new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,candidate))));
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.zip.remove.call(null,candidate);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return rewrite_clj.paredit.kill.call(null,candidate);
} else
{return null;
}
}
}
}
} else
{return zloc;
}
});
rewrite_clj.paredit.find_word_bounds = (function find_word_bounds(v,col){if((col <= cljs.core.count.call(null,v)))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(col - cljs.core.count.call(null,cljs.core.take_while.call(null,(function (p1__9535_SHARP_){return !(cljs.core._EQ_.call(null,p1__9535_SHARP_," "));
}),cljs.core.reverse.call(null,cljs.core.take.call(null,col,cljs.core.seq.call(null,v)))))),(col + cljs.core.count.call(null,cljs.core.take_while.call(null,(function (p1__9536_SHARP_){return !((cljs.core._EQ_.call(null,p1__9536_SHARP_," ")) || (cljs.core._EQ_.call(null,p1__9536_SHARP_,"\n")));
}),cljs.core.drop.call(null,col,cljs.core.seq.call(null,v)))))], null);
} else
{return null;
}
});
rewrite_clj.paredit.remove_word_at = (function remove_word_at(v,col){var temp__4092__auto__ = rewrite_clj.paredit.find_word_bounds.call(null,v,col);if(cljs.core.truth_(temp__4092__auto__))
{var vec__9538 = temp__4092__auto__;var start = cljs.core.nth.call(null,vec__9538,0,null);var end = cljs.core.nth.call(null,vec__9538,1,null);return [cljs.core.str(v.substring(0,start)),cljs.core.str(v.substring(end))].join('');
} else
{return null;
}
});
rewrite_clj.paredit.kill_word_in_comment_node = (function kill_word_in_comment_node(zloc,pos){var col_bounds = new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,zloc)));return rewrite_clj.zip.replace.call(null,zloc,rewrite_clj.node.comment_node.call(null,rewrite_clj.paredit.remove_word_at.call(null,new cljs.core.Keyword(null,"s","s",1013904357).cljs$core$IFn$_invoke$arity$1(rewrite_clj.zip.node.call(null,zloc)),(new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - col_bounds))));
});
rewrite_clj.paredit.kill_word_in_string_node = (function kill_word_in_string_node(zloc,pos){var bounds = cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,zloc));var row_idx = (new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(pos) - new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(bounds));var col = ((cljs.core._EQ_.call(null,0,row_idx))?(new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(bounds)):new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos));return rewrite_clj.zip.replace.call(null,zloc,rewrite_clj.node.string_node.call(null,cljs.core.update_in.call(null,new cljs.core.Keyword(null,"lines","lines",1116881521).cljs$core$IFn$_invoke$arity$1(rewrite_clj.zip.node.call(null,zloc)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [row_idx], null),((function (bounds,row_idx,col){
return (function (p1__9539_SHARP_){return rewrite_clj.paredit.remove_word_at.call(null,p1__9539_SHARP_,col);
});})(bounds,row_idx,col))
)));
});
/**
* In string and comment aware kill for one node/word at given pos
* 
* - `(+ |100 100) => (+ |100)`
* - `(for |(bar do)) => (foo)`
* - `"|hello world" => "| world"`
* - ` ; |hello world => ;  |world`
*/
rewrite_clj.paredit.kill_one_at_pos = (function kill_one_at_pos(zloc,pos){var temp__4090__auto__ = rewrite_clj.zip.whitespace.skip.call(null,clojure.zip.right,rewrite_clj.zip.whitespace.whitespace_QMARK_,rewrite_clj.zip.find_last_by_pos.call(null,zloc,pos));if(cljs.core.truth_(temp__4090__auto__))
{var candidate = temp__4090__auto__;var bounds = cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,candidate));var kill_in_node_QMARK_ = !((cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(pos),new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(bounds))) && ((new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) <= new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(bounds))));if((kill_in_node_QMARK_) && (rewrite_clj.paredit.string_node_QMARK_.call(null,candidate)))
{return rewrite_clj.paredit.kill_word_in_string_node.call(null,candidate,pos);
} else
{if(cljs.core.truth_((function (){var and__6486__auto__ = kill_in_node_QMARK_;if(and__6486__auto__)
{return rewrite_clj.zip.whitespace.comment_QMARK_.call(null,candidate);
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.paredit.kill_word_in_comment_node.call(null,candidate,pos);
} else
{if(cljs.core.not.call(null,rewrite_clj.zip.leftmost_QMARK_.call(null,candidate)))
{return rewrite_clj.paredit.global_find_by_node.call(null,rewrite_clj.zip.remove.call(null,candidate),rewrite_clj.zip.node.call(null,rewrite_clj.zip.left.call(null,candidate)));
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return rewrite_clj.zip.remove.call(null,candidate);
} else
{return null;
}
}
}
}
} else
{return zloc;
}
});
rewrite_clj.paredit.find_slurpee_up = (function find_slurpee_up(zloc,f){var l = rewrite_clj.zip.up.call(null,zloc);var n = 1;while(true){
if((l == null))
{return null;
} else
{if(!((f.call(null,l) == null)))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [n,f.call(null,l)], null);
} else
{if((rewrite_clj.zip.up.call(null,l) == null))
{return null;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{{
var G__9586 = rewrite_clj.zip.up.call(null,l);
var G__9587 = (n + 1);
l = G__9586;
n = G__9587;
continue;
}
} else
{return null;
}
}
}
}
break;
}
});
rewrite_clj.paredit.find_slurpee = (function find_slurpee(zloc,f){if(cljs.core.truth_(rewrite_clj.paredit.empty_seq_QMARK_.call(null,zloc)))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.call(null,zloc),0], null);
} else
{var G__9541 = zloc;var G__9541__$1 = (((G__9541 == null))?null:rewrite_clj.paredit.find_slurpee_up.call(null,G__9541,f));var G__9541__$2 = (((G__9541__$1 == null))?null:cljs.core.reverse.call(null,G__9541__$1));return G__9541__$2;
}
});
/**
* Pull in next right outer node (if none at first level, tries next etc) into
* current S-expression
* 
* - `[1 2 [|3] 4 5] => [1 2 [|3 4] 5]`
*/
rewrite_clj.paredit.slurp_forward = (function slurp_forward(zloc){var vec__9546 = rewrite_clj.paredit.find_slurpee.call(null,zloc,rewrite_clj.zip.right);var slurpee_loc = cljs.core.nth.call(null,vec__9546,0,null);var n_ups = cljs.core.nth.call(null,vec__9546,1,null);if(cljs.core.not.call(null,slurpee_loc))
{return zloc;
} else
{var slurper_loc = rewrite_clj.paredit.move_n.call(null,zloc,rewrite_clj.zip.up,n_ups);var preserves = cljs.core.filter.call(null,((function (slurper_loc,vec__9546,slurpee_loc,n_ups){
return (function (p1__9543_SHARP_){var or__6498__auto__ = rewrite_clj.node.linebreak_QMARK_.call(null,p1__9543_SHARP_);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.node.comment_QMARK_.call(null,p1__9543_SHARP_);
}
});})(slurper_loc,vec__9546,slurpee_loc,n_ups))
,rewrite_clj.paredit.nodes_by_dir.call(null,clojure.zip.right.call(null,slurper_loc),clojure.zip.right,((function (slurper_loc,vec__9546,slurpee_loc,n_ups){
return (function (p1__9542_SHARP_){return !(cljs.core._EQ_.call(null,rewrite_clj.zip.node.call(null,slurpee_loc),rewrite_clj.zip.node.call(null,p1__9542_SHARP_)));
});})(slurper_loc,vec__9546,slurpee_loc,n_ups))
));return ((function (slurper_loc,preserves,vec__9546,slurpee_loc,n_ups){
return (function (p1__9544_SHARP_){if(cljs.core.truth_(rewrite_clj.paredit.empty_seq_QMARK_.call(null,zloc)))
{return rewrite_clj.zip.utils.remove_left_while.call(null,rewrite_clj.zip.down.call(null,p1__9544_SHARP_),rewrite_clj.zip.whitespace.whitespace_QMARK_);
} else
{return rewrite_clj.paredit.global_find_by_node.call(null,p1__9544_SHARP_,rewrite_clj.zip.node.call(null,zloc));
}
});})(slurper_loc,preserves,vec__9546,slurpee_loc,n_ups))
.call(null,rewrite_clj.zip.append_child.call(null,cljs.core.partial.call(null,cljs.core.reduce,rewrite_clj.zip.append_child).call(null,rewrite_clj.zip.utils.remove_right.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,slurper_loc,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_)),preserves),rewrite_clj.zip.node.call(null,slurpee_loc)));
}
});
/**
* Pull in all right outer-nodes into current S-expression, but only the ones at the same level
* as the the first one.
* 
* - `[1 2 [|3] 4 5] => [1 2 [|3 4 5]]`
*/
rewrite_clj.paredit.slurp_forward_fully = (function slurp_forward_fully(zloc){var curr_slurpee = (function (){var G__9549 = zloc;var G__9549__$1 = (((G__9549 == null))?null:rewrite_clj.paredit.find_slurpee.call(null,G__9549,rewrite_clj.zip.right));var G__9549__$2 = (((G__9549__$1 == null))?null:cljs.core.first.call(null,G__9549__$1));return G__9549__$2;
})();var num_slurps = (function (){var G__9550 = curr_slurpee;var G__9550__$1 = (((G__9550 == null))?null:rewrite_clj.paredit.nodes_by_dir.call(null,G__9550,rewrite_clj.zip.right));var G__9550__$2 = (((G__9550__$1 == null))?null:cljs.core.count.call(null,G__9550__$1));var G__9550__$3 = (((G__9550__$2 == null))?null:(G__9550__$2 + 1));return G__9550__$3;
})();return cljs.core.last.call(null,cljs.core.take.call(null,num_slurps,cljs.core.iterate.call(null,rewrite_clj.paredit.slurp_forward,zloc)));
});
/**
* Pull in prev left outer node (if none at first level, tries next etc) into
* current S-expression
* 
* - `[1 2 [|3] 4 5] => [1 [2 |3] 4 5]`
*/
rewrite_clj.paredit.slurp_backward = (function slurp_backward(zloc){var temp__4090__auto__ = rewrite_clj.paredit.find_slurpee.call(null,zloc,rewrite_clj.zip.left);if(cljs.core.truth_(temp__4090__auto__))
{var vec__9555 = temp__4090__auto__;var slurpee_loc = cljs.core.nth.call(null,vec__9555,0,null);var _ = cljs.core.nth.call(null,vec__9555,1,null);var preserves = cljs.core.filter.call(null,((function (vec__9555,slurpee_loc,_,temp__4090__auto__){
return (function (p1__9551_SHARP_){var or__6498__auto__ = rewrite_clj.node.linebreak_QMARK_.call(null,p1__9551_SHARP_);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.node.comment_QMARK_.call(null,p1__9551_SHARP_);
}
});})(vec__9555,slurpee_loc,_,temp__4090__auto__))
,rewrite_clj.paredit.nodes_by_dir.call(null,clojure.zip.right.call(null,slurpee_loc),clojure.zip.right,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_));return ((function (preserves,vec__9555,slurpee_loc,_,temp__4090__auto__){
return (function (p1__9553_SHARP_){if(cljs.core.truth_(rewrite_clj.paredit.empty_seq_QMARK_.call(null,zloc)))
{return rewrite_clj.zip.utils.remove_right_while.call(null,rewrite_clj.zip.down.call(null,p1__9553_SHARP_),rewrite_clj.zip.whitespace.linebreak_QMARK_);
} else
{return rewrite_clj.paredit.global_find_by_node.call(null,p1__9553_SHARP_,rewrite_clj.zip.node.call(null,zloc));
}
});})(preserves,vec__9555,slurpee_loc,_,temp__4090__auto__))
.call(null,rewrite_clj.zip.insert_child.call(null,cljs.core.partial.call(null,cljs.core.reduce,rewrite_clj.zip.insert_child).call(null,rewrite_clj.zip.next.call(null,clojure.zip.remove.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,((function (preserves,vec__9555,slurpee_loc,_,temp__4090__auto__){
return (function (p1__9552_SHARP_){if(cljs.core.truth_((function (){var and__6486__auto__ = rewrite_clj.zip.left.call(null,slurpee_loc);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,clojure.zip.left.call(null,p1__9552_SHARP_)));
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.zip.whitespace.prepend_space.call(null,p1__9552_SHARP_);
} else
{return p1__9552_SHARP_;
}
});})(preserves,vec__9555,slurpee_loc,_,temp__4090__auto__))
.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,slurpee_loc,rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_)),rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_))),preserves),rewrite_clj.zip.node.call(null,slurpee_loc)));
} else
{return zloc;
}
});
/**
* Pull in all left outer-nodes into current S-expression, but only the ones at the same level
* as the the first one.
* 
* - `[1 2 [|3] 4 5] => [[1 2 |3] 4 5]`
*/
rewrite_clj.paredit.slurp_backward_fully = (function slurp_backward_fully(zloc){var curr_slurpee = (function (){var G__9558 = zloc;var G__9558__$1 = (((G__9558 == null))?null:rewrite_clj.paredit.find_slurpee.call(null,G__9558,rewrite_clj.zip.left));var G__9558__$2 = (((G__9558__$1 == null))?null:cljs.core.first.call(null,G__9558__$1));return G__9558__$2;
})();var num_slurps = (function (){var G__9559 = curr_slurpee;var G__9559__$1 = (((G__9559 == null))?null:rewrite_clj.paredit.nodes_by_dir.call(null,G__9559,rewrite_clj.zip.left));var G__9559__$2 = (((G__9559__$1 == null))?null:cljs.core.count.call(null,G__9559__$1));var G__9559__$3 = (((G__9559__$2 == null))?null:(G__9559__$2 + 1));return G__9559__$3;
})();return cljs.core.last.call(null,cljs.core.take.call(null,num_slurps,cljs.core.iterate.call(null,rewrite_clj.paredit.slurp_backward,zloc)));
});
/**
* Push out the rightmost node of the current S-expression into outer right form
* 
* - `[1 2 [|3 4] 5] => [1 2 [|3] 4 5]`
*/
rewrite_clj.paredit.barf_forward = (function barf_forward(zloc){var barfee_loc = rewrite_clj.zip.rightmost.call(null,zloc);if(cljs.core.not.call(null,rewrite_clj.zip.up.call(null,zloc)))
{return zloc;
} else
{var preserves = cljs.core.reverse.call(null,cljs.core.filter.call(null,((function (barfee_loc){
return (function (p1__9560_SHARP_){var or__6498__auto__ = rewrite_clj.node.linebreak_QMARK_.call(null,p1__9560_SHARP_);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.node.comment_QMARK_.call(null,p1__9560_SHARP_);
}
});})(barfee_loc))
,rewrite_clj.paredit.nodes_by_dir.call(null,clojure.zip.left.call(null,barfee_loc),clojure.zip.left,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_)));return ((function (preserves,barfee_loc){
return (function (p1__9561_SHARP_){var or__6498__auto__ = rewrite_clj.paredit.global_find_by_node.call(null,p1__9561_SHARP_,rewrite_clj.zip.node.call(null,zloc));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.paredit.global_find_by_node.call(null,p1__9561_SHARP_,rewrite_clj.zip.node.call(null,barfee_loc));
}
});})(preserves,barfee_loc))
.call(null,cljs.core.partial.call(null,cljs.core.reduce,rewrite_clj.zip.insert_right).call(null,rewrite_clj.zip.insert_right.call(null,rewrite_clj.zip.utils.remove_and_move_up.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,barfee_loc,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_),rewrite_clj.zip.whitespace.whitespace_QMARK_)),rewrite_clj.zip.node.call(null,barfee_loc)),preserves));
}
});
/**
* Push out the leftmost node of the current S-expression into outer left form
* 
* - `[1 2 [3 |4] 5] => [1 2 3 [|4] 5]`
*/
rewrite_clj.paredit.barf_backward = (function barf_backward(zloc){var barfee_loc = rewrite_clj.zip.leftmost.call(null,zloc);if(cljs.core.not.call(null,rewrite_clj.zip.up.call(null,zloc)))
{return zloc;
} else
{var preserves = cljs.core.filter.call(null,((function (barfee_loc){
return (function (p1__9562_SHARP_){var or__6498__auto__ = rewrite_clj.node.linebreak_QMARK_.call(null,p1__9562_SHARP_);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.node.comment_QMARK_.call(null,p1__9562_SHARP_);
}
});})(barfee_loc))
,rewrite_clj.paredit.nodes_by_dir.call(null,clojure.zip.right.call(null,barfee_loc),clojure.zip.right,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_));return ((function (preserves,barfee_loc){
return (function (p1__9563_SHARP_){var or__6498__auto__ = rewrite_clj.paredit.global_find_by_node.call(null,p1__9563_SHARP_,rewrite_clj.zip.node.call(null,zloc));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.paredit.global_find_by_node.call(null,p1__9563_SHARP_,rewrite_clj.zip.node.call(null,barfee_loc));
}
});})(preserves,barfee_loc))
.call(null,cljs.core.partial.call(null,cljs.core.reduce,rewrite_clj.zip.insert_left).call(null,rewrite_clj.zip.insert_left.call(null,clojure.zip.remove.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,barfee_loc,rewrite_clj.zip.whitespace.whitespace_QMARK_),rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_)),rewrite_clj.zip.node.call(null,barfee_loc)),preserves));
}
});
/**
* Wrap current node with a given type `t` (:vector, :list, :set, :map :fn)
* 
* - `|123 => [|123] ; given :vector`
* - `|[1 [2]] => [|[1 [2]]]`
*/
rewrite_clj.paredit.wrap_around = (function wrap_around(zloc,t){return rewrite_clj.zip.down.call(null,clojure.zip.append_child.call(null,rewrite_clj.zip.utils.remove_right.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,rewrite_clj.zip.left.call(null,rewrite_clj.zip.insert_left.call(null,zloc,rewrite_clj.paredit.create_seq_node.call(null,t,null))),rewrite_clj.zip.whitespace.whitespace_QMARK_)),rewrite_clj.zip.node.call(null,zloc)));
});
/**
* Create a new seq node of type `t` left of `zloc` then slurp fully into the new node
* 
* - `[1 |2 3 4] => [1 [|2 3 4]]`
*/
rewrite_clj.paredit.wrap_fully_forward_slurp = (function wrap_fully_forward_slurp(zloc,t){return rewrite_clj.paredit.slurp_forward_fully.call(null,rewrite_clj.zip.left.call(null,rewrite_clj.zip.insert_left.call(null,zloc,rewrite_clj.paredit.create_seq_node.call(null,t,null))));
});
/**
* See rewrite-clj.zip/splice
*/
rewrite_clj.paredit.splice = rewrite_clj.zip.splice;
rewrite_clj.paredit.splice_killing = (function splice_killing(zloc,f){if(cljs.core.not.call(null,rewrite_clj.zip.up.call(null,zloc)))
{return zloc;
} else
{return rewrite_clj.paredit.global_find_by_node.call(null,rewrite_clj.paredit.splice.call(null,rewrite_clj.zip.up.call(null,f.call(null,zloc,cljs.core.constantly.call(null,true)))),rewrite_clj.zip.node.call(null,zloc));
}
});
/**
* Remove left siblings of current given node in S-Expression and unwrap remaining into enclosing S-expression
* 
* - `(foo (let ((x 5)) |(sqrt n)) bar) => (foo (sqrt n) bar)`
*/
rewrite_clj.paredit.splice_killing_backward = (function splice_killing_backward(zloc){return rewrite_clj.paredit.splice_killing.call(null,zloc,rewrite_clj.zip.utils.remove_left_while);
});
/**
* Remove current given node and its right siblings in S-Expression and unwrap remaining into enclosing S-expression
* 
* - `(a (b c |d e) f) => (a b |c f)`
*/
rewrite_clj.paredit.splice_killing_forward = (function splice_killing_forward(zloc){if(cljs.core.truth_((function (){var and__6486__auto__ = rewrite_clj.zip.up.call(null,zloc);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,rewrite_clj.zip.leftmost_QMARK_.call(null,zloc));
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.paredit.splice_killing.call(null,rewrite_clj.zip.left.call(null,zloc),rewrite_clj.zip.utils.remove_right_while);
} else
{if(cljs.core.truth_(rewrite_clj.zip.up.call(null,zloc)))
{return rewrite_clj.zip.remove.call(null,rewrite_clj.zip.up.call(null,zloc));
} else
{return zloc;
}
}
});
/**
* Split current s-sexpression in two at given node `zloc`
* 
* -  `[1 2 |3 4 5] => [1 2 3] [4 5]`
*/
rewrite_clj.paredit.split = (function split(zloc){var parent_loc = rewrite_clj.zip.up.call(null,zloc);if(cljs.core.not.call(null,parent_loc))
{return zloc;
} else
{var t = rewrite_clj.zip.tag.call(null,parent_loc);var lefts = cljs.core.reverse.call(null,rewrite_clj.paredit.remove_first_if_ws.call(null,cljs.core.rest.call(null,rewrite_clj.paredit.nodes_by_dir.call(null,rewrite_clj.zip.right.call(null,zloc),clojure.zip.left))));var rights = rewrite_clj.paredit.remove_first_if_ws.call(null,rewrite_clj.paredit.nodes_by_dir.call(null,rewrite_clj.zip.right.call(null,zloc),clojure.zip.right));if(!((cljs.core.seq.call(null,lefts)) && (cljs.core.seq.call(null,rights))))
{return zloc;
} else
{return ((function (t,lefts,rights,parent_loc){
return (function (p1__9564_SHARP_){var or__6498__auto__ = rewrite_clj.paredit.global_find_by_node.call(null,p1__9564_SHARP_,rewrite_clj.zip.node.call(null,zloc));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return rewrite_clj.paredit.global_find_by_node.call(null,p1__9564_SHARP_,cljs.core.last.call(null,lefts));
}
});})(t,lefts,rights,parent_loc))
.call(null,rewrite_clj.zip.remove.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.zip.insert_left.call(null,parent_loc,rewrite_clj.paredit.create_seq_node.call(null,t,lefts)),rewrite_clj.paredit.create_seq_node.call(null,t,rights))));
}
}
});
rewrite_clj.paredit.split_string = (function split_string(zloc,pos){var bounds = cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,zloc));var row_idx = (new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(pos) - new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(bounds));var lines = new cljs.core.Keyword(null,"lines","lines",1116881521).cljs$core$IFn$_invoke$arity$1(rewrite_clj.zip.node.call(null,zloc));var split_col = ((!(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(pos),new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(bounds))))?(new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - 1):(new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(pos) - (new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(bounds) + 1)));return rewrite_clj.zip.insert_right.call(null,rewrite_clj.zip.replace.call(null,zloc,rewrite_clj.node.string_node.call(null,cljs.core.update_in.call(null,cljs.core.vec.call(null,cljs.core.take.call(null,(row_idx + 1),lines)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [row_idx], null),((function (bounds,row_idx,lines,split_col){
return (function (p1__9565_SHARP_){return p1__9565_SHARP_.substring(0,split_col);
});})(bounds,row_idx,lines,split_col))
))),rewrite_clj.node.string_node.call(null,cljs.core.update_in.call(null,cljs.core.vec.call(null,cljs.core.drop.call(null,row_idx,lines)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [0], null),((function (bounds,row_idx,lines,split_col){
return (function (p1__9566_SHARP_){return p1__9566_SHARP_.substring(split_col);
});})(bounds,row_idx,lines,split_col))
)));
});
/**
* In string aware split
* 
* Perform split at given position `pos` Like split, but:
* 
* - if inside string splits string into two strings
* 
* `pos` should provide `{:row :col }` which are relative to the start of the given form the zipper represents
* `zloc` must be positioned at a node previous (given depth first) to the node at given pos
*/
rewrite_clj.paredit.split_at_pos = (function split_at_pos(zloc,pos){var temp__4090__auto__ = rewrite_clj.zip.find_last_by_pos.call(null,zloc,pos);if(cljs.core.truth_(temp__4090__auto__))
{var candidate = temp__4090__auto__;if(rewrite_clj.paredit.string_node_QMARK_.call(null,candidate))
{return rewrite_clj.paredit.split_string.call(null,candidate,pos);
} else
{return rewrite_clj.paredit.split.call(null,candidate);
}
} else
{return zloc;
}
});
rewrite_clj.paredit.join_seqs = (function join_seqs(left,right){var lefts = rewrite_clj.node.children.call(null,rewrite_clj.zip.node.call(null,left));var ws_nodes = rewrite_clj.paredit.nodes_by_dir.call(null,clojure.zip.right.call(null,left),clojure.zip.right,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_);var rights = rewrite_clj.node.children.call(null,rewrite_clj.zip.node.call(null,right));return rewrite_clj.paredit.global_find_by_node.call(null,rewrite_clj.zip.remove.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.zip.up.call(null,rewrite_clj.paredit.remove_ws_or_comment.call(null,clojure.zip.remove.call(null,right))),rewrite_clj.paredit.create_seq_node.call(null,new cljs.core.Keyword(null,"vector","vector",4488484021),cljs.core.concat.call(null,lefts,ws_nodes,rights)))),cljs.core.first.call(null,rights));
});
rewrite_clj.paredit.join_strings = (function join_strings(left,right){return rewrite_clj.zip.replace.call(null,rewrite_clj.paredit.remove_ws_or_comment.call(null,clojure.zip.remove.call(null,right)),rewrite_clj.node.string_node.call(null,[cljs.core.str(rewrite_clj.node.sexpr.call(null,rewrite_clj.zip.node.call(null,left))),cljs.core.str(rewrite_clj.node.sexpr.call(null,rewrite_clj.zip.node.call(null,right)))].join('')));
});
/**
* Join S-expression to the left and right of current loc. Also works for strings.
* 
* - `[[1 2] |[3 4]] => [[1 2 3 4]]`
* - `["Hello " | "World"] => ["Hello World"]
*/
rewrite_clj.paredit.join = (function join(zloc){var left = (function (){var G__9569 = zloc;var G__9569__$1 = (((G__9569 == null))?null:rewrite_clj.zip.left.call(null,G__9569));return G__9569__$1;
})();var right = (cljs.core.truth_((function (){var G__9570 = zloc;var G__9570__$1 = (((G__9570 == null))?null:rewrite_clj.zip.node.call(null,G__9570));var G__9570__$2 = (((G__9570__$1 == null))?null:rewrite_clj.node.whitespace_QMARK_.call(null,G__9570__$1));return G__9570__$2;
})())?rewrite_clj.zip.right.call(null,zloc):zloc);if(cljs.core.not.call(null,(function (){var and__6486__auto__ = left;if(cljs.core.truth_(and__6486__auto__))
{return right;
} else
{return and__6486__auto__;
}
})()))
{return zloc;
} else
{if(cljs.core.truth_((function (){var and__6486__auto__ = rewrite_clj.zip.seq_QMARK_.call(null,left);if(cljs.core.truth_(and__6486__auto__))
{return rewrite_clj.zip.seq_QMARK_.call(null,right);
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.paredit.join_seqs.call(null,left,right);
} else
{if((rewrite_clj.paredit.string_node_QMARK_.call(null,left)) && (rewrite_clj.paredit.string_node_QMARK_.call(null,right)))
{return rewrite_clj.paredit.join_strings.call(null,left,right);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return zloc;
} else
{return null;
}
}
}
}
});
/**
* Delete siblings and raise node at zloc one level up
* 
* - `[1 [2 |3 4]] => [1 |3]`
*/
rewrite_clj.paredit.raise = (function raise(zloc){var temp__4090__auto__ = rewrite_clj.zip.up.call(null,zloc);if(cljs.core.truth_(temp__4090__auto__))
{var containing = temp__4090__auto__;return rewrite_clj.zip.replace.call(null,containing,rewrite_clj.zip.node.call(null,zloc));
} else
{return zloc;
}
});
/**
* Move node at current location to the position of previous location given a depth first traversal
* 
* -  `(+ 1 (+ 2 |3) 4) => (+ 1 (+ |3 2) 4)`
* - `(+ 1 (+ 2 3) |4) => (+ 1 (+ 2 3 |4))`
* 
* returns zloc after move or given zloc if a move isn't possible
*/
rewrite_clj.paredit.move_to_prev = (function move_to_prev(zloc){var n = rewrite_clj.zip.node.call(null,zloc);var p = (function (){var G__9574 = zloc;var G__9574__$1 = (((G__9574 == null))?null:rewrite_clj.zip.left.call(null,G__9574));var G__9574__$2 = (((G__9574__$1 == null))?null:rewrite_clj.zip.node.call(null,G__9574__$1));return G__9574__$2;
})();var ins_fn = ((((p == null)) || (cljs.core._EQ_.call(null,rewrite_clj.zip.node.call(null,rewrite_clj.zip.remove.call(null,zloc)),p)))?((function (n,p){
return (function (p1__9571_SHARP_){return rewrite_clj.zip.left.call(null,rewrite_clj.zip.insert_left.call(null,p1__9571_SHARP_,n));
});})(n,p))
:((function (n,p){
return (function (p1__9572_SHARP_){return rewrite_clj.zip.right.call(null,rewrite_clj.zip.insert_right.call(null,p1__9572_SHARP_,n));
});})(n,p))
);if(cljs.core.not.call(null,rewrite_clj.zip.prev.call(null,rewrite_clj.zip.remove.call(null,zloc))))
{return zloc;
} else
{return ins_fn.call(null,rewrite_clj.zip.remove.call(null,zloc));
}
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.util')) {
goog.provide('lt.plugins.cljrefactor.util');
goog.require('cljs.core');
goog.require('lt.plugins.paredit');
goog.require('lt.plugins.paredit');
goog.require('clojure.string');
goog.require('lt.objs.command');
goog.require('clojure.string');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.util.replace_token = (function replace_token(s,bounds,neue){var lines = cljs.core.vec.call(null,clojure.string.split.call(null,s,/\n/));return clojure.string.join.call(null,"\n",cljs.core.update_in.call(null,lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(bounds)], null),((function (lines){
return (function (p1__15110_SHARP_){return [cljs.core.str(p1__15110_SHARP_.substr(0,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(bounds))),cljs.core.str(neue),cljs.core.str(p1__15110_SHARP_.substr(new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(bounds)))].join('');
});})(lines))
));
});
lt.plugins.cljrefactor.util.find_token_bounds = (function find_token_bounds(s,token){return cljs.core.some.call(null,(function (p1__15111_SHARP_){var idx = new cljs.core.Keyword(null,"content","content",1965434859).cljs$core$IFn$_invoke$arity$1(p1__15111_SHARP_).indexOf(token);if((idx > -1))
{return cljs.core.assoc.call(null,p1__15111_SHARP_,new cljs.core.Keyword(null,"start","start",1123661780),idx,new cljs.core.Keyword(null,"end","end",1014004813),(idx + cljs.core.count.call(null,token)));
} else
{return null;
}
}),cljs.core.keep_indexed.call(null,(function (line,content){return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),line,new cljs.core.Keyword(null,"content","content",1965434859),content], null);
}),clojure.string.split.call(null,s,/\n/)));
});
lt.plugins.cljrefactor.util.find_all_token_bounds = (function find_all_token_bounds(s,token){return cljs.core.remove.call(null,cljs.core.nil_QMARK_,cljs.core.map.call(null,(function (p1__15112_SHARP_){var idx = new cljs.core.Keyword(null,"content","content",1965434859).cljs$core$IFn$_invoke$arity$1(p1__15112_SHARP_).indexOf(token);if((idx > -1))
{return cljs.core.assoc.call(null,p1__15112_SHARP_,new cljs.core.Keyword(null,"start","start",1123661780),idx,new cljs.core.Keyword(null,"end","end",1014004813),(idx + cljs.core.count.call(null,token)));
} else
{return null;
}
}),cljs.core.keep_indexed.call(null,(function (line,content){return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),line,new cljs.core.Keyword(null,"content","content",1965434859),content], null);
}),clojure.string.split.call(null,s,/\n/))));
});
lt.plugins.cljrefactor.util.hash_prefixed_QMARK_ = (function hash_prefixed_QMARK_(ed,start){return cljs.core._EQ_.call(null,lt.objs.editor.range.call(null,ed,start,cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc)),"#");
});
lt.plugins.cljrefactor.util.set_form_QMARK_ = (function() {
var set_form_QMARK_ = null;
var set_form_QMARK___1 = (function (form_str){return cljs.core._EQ_.call(null,form_str.indexOf("#{"),0);
});
var set_form_QMARK___2 = (function (ed,start){return ((new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(start) > 0)) && (lt.plugins.cljrefactor.util.hash_prefixed_QMARK_.call(null,ed,cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.dec)));
});
set_form_QMARK_ = function(ed,start){
switch(arguments.length){
case 1:
return set_form_QMARK___1.call(this,ed);
case 2:
return set_form_QMARK___2.call(this,ed,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
set_form_QMARK_.cljs$core$IFn$_invoke$arity$1 = set_form_QMARK___1;
set_form_QMARK_.cljs$core$IFn$_invoke$arity$2 = set_form_QMARK___2;
return set_form_QMARK_;
})()
;
lt.plugins.cljrefactor.util.get_form = (function() {
var get_form = null;
var get_form__1 = (function (ed){return get_form.call(null,ed,lt.objs.editor.__GT_cursor.call(null,ed));
});
var get_form__2 = (function (ed,pos){var vec__15114 = lt.plugins.paredit.form_boundary.call(null,ed,pos);var start = cljs.core.nth.call(null,vec__15114,0,null);var end = cljs.core.nth.call(null,vec__15114,1,null);var end__$1 = cljs.core.update_in.call(null,end,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc);if(cljs.core.truth_((function (){var and__6486__auto__ = start;if(cljs.core.truth_(and__6486__auto__))
{return end__$1;
} else
{return and__6486__auto__;
}
})()))
{if(lt.plugins.cljrefactor.util.set_form_QMARK_.call(null,ed,start))
{return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"form-str","form-str",1486434586),lt.objs.editor.range.call(null,ed,cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.dec),end__$1),new cljs.core.Keyword(null,"start","start",1123661780),cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.dec),new cljs.core.Keyword(null,"end","end",1014004813),end__$1], null);
} else
{return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"form-str","form-str",1486434586),lt.objs.editor.range.call(null,ed,start,end__$1),new cljs.core.Keyword(null,"start","start",1123661780),start,new cljs.core.Keyword(null,"end","end",1014004813),end__$1], null);
}
} else
{return null;
}
});
get_form = function(ed,pos){
switch(arguments.length){
case 1:
return get_form__1.call(this,ed);
case 2:
return get_form__2.call(this,ed,pos);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_form.cljs$core$IFn$_invoke$arity$1 = get_form__1;
get_form.cljs$core$IFn$_invoke$arity$2 = get_form__2;
return get_form;
})()
;
lt.plugins.cljrefactor.util.multiple_cursors_QMARK_ = (function multiple_cursors_QMARK_(ed){var cm_ed = lt.objs.editor.__GT_cm_ed.call(null,ed);return (cljs.core.count.call(null,cljs.core.js__GT_clj.call(null,cm_ed.getSelections())) > 1);
});
/**
* Format form at pos and keep cursor position.
*/
lt.plugins.cljrefactor.util.format_keep_pos = (function format_keep_pos(ed){var pos = lt.objs.editor.__GT_cursor.call(null,ed);var temp__4092__auto__ = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,pos);if(cljs.core.truth_(temp__4092__auto__))
{var form = temp__4092__auto__;var hist_15144 = lt.objs.editor.get_history.call(null,ed);lt.objs.editor.set_selection.call(null,ed,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form));
lt.objs.editor.set_history.call(null,ed,hist_15144);
lt.objs.editor.indent_selection.call(null,ed,"smart");
return lt.objs.editor.move_cursor.call(null,ed,pos);
} else
{return null;
}
});
/**
* Calculate zipper pos start coordinates from LT cursor coordinates
*/
lt.plugins.cljrefactor.util.__GT_zipper_pos_start = (function __GT_zipper_pos_start(pos,form){var row = ((new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(pos) - new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form))) + 1);return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"row","row",1014017356),row,new cljs.core.Keyword(null,"col","col",1014002930),((new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(pos) - ((cljs.core._EQ_.call(null,1,row))?new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form)):0)) + 1)], null);
});
/**
* Convert zipper position to LT editor coordinates for start of a given form
*/
lt.plugins.cljrefactor.util.__GT_start_pos = (function __GT_start_pos(z_pos,form){return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"ch","ch",1013907415),((new cljs.core.Keyword(null,"col","col",1014002930).cljs$core$IFn$_invoke$arity$1(z_pos) - 1) + ((cljs.core._EQ_.call(null,1,new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(z_pos)))?new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form)):0)),new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form)) + (new cljs.core.Keyword(null,"row","row",1014017356).cljs$core$IFn$_invoke$arity$1(z_pos) - 1))], null);
});
lt.plugins.cljrefactor.util.whitespace_QMARK_ = (function whitespace_QMARK_(ch){return cljs.core.some.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [" ",null,"\t",null,"\n",null], null), null),ch);
});
lt.plugins.cljrefactor.util.end_pair_QMARK_ = (function end_pair_QMARK_(ch){return cljs.core.some.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [")",null,"]",null,"}",null], null), null),ch);
});
lt.plugins.cljrefactor.util.start_pair_QMARK_ = (function start_pair_QMARK_(ch){return cljs.core.some.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["(",null,"[",null,"{",null], null), null),ch);
});
lt.plugins.cljrefactor.util.opposites = {"]": "[", "[": "]", "}": "{", "{": "}", "(": ")", ")": "("};
lt.plugins.cljrefactor.util.get_ch = (function get_ch(ed,loc){return cljs.core.get.call(null,lt.objs.editor.line.call(null,ed,(function (){var or__6498__auto__ = (loc["line"]);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(loc);
}
})()),(function (){var or__6498__auto__ = (loc["ch"]);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(loc);
}
})());
});
lt.plugins.cljrefactor.util.adjust_loc = (function adjust_loc(loc,delta){var obj15118 = {"line":(loc["line"]),"ch":((loc["ch"]) + delta)};return obj15118;
});
lt.plugins.cljrefactor.util.str_contains_QMARK_ = (function str_contains_QMARK_(a,b){return (a.indexOf(b) > -1);
});
lt.plugins.cljrefactor.util.stringz_QMARK_ = (function stringz_QMARK_(ed,loc,line,token_type){if(cljs.core.truth_(token_type))
{var ch = cljs.core.get.call(null,line,(loc["ch"]));var left_ch = cljs.core.get.call(null,line,(lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,-1)["ch"]));return (lt.plugins.cljrefactor.util.str_contains_QMARK_.call(null,token_type,"string")) && (cljs.core.not.call(null,(function (){var and__6486__auto__ = lt.plugins.cljrefactor.util.end_pair_QMARK_.call(null,ch);if(cljs.core.truth_(and__6486__auto__))
{return (cljs.core._EQ_.call(null,"\"",left_ch)) && (!(cljs.core._EQ_.call(null,"string",lt.objs.editor.__GT_token_type.call(null,ed,cljs.core.js__GT_clj.call(null,lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,1))))));
} else
{return and__6486__auto__;
}
})()));
} else
{return null;
}
});
lt.plugins.cljrefactor.util.string_BAR_comment_QMARK_ = (function string_BAR_comment_QMARK_(ed,loc,line){var t = lt.objs.editor.__GT_token_type.call(null,ed,loc);if(cljs.core.truth_(t))
{if(lt.plugins.cljrefactor.util.str_contains_QMARK_.call(null,t,"comment-form"))
{return false;
} else
{if(lt.plugins.cljrefactor.util.str_contains_QMARK_.call(null,t,"comment"))
{return true;
} else
{if(cljs.core.truth_(lt.plugins.cljrefactor.util.stringz_QMARK_.call(null,ed,loc,line,t)))
{return true;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return false;
} else
{return null;
}
}
}
}
} else
{return null;
}
});
lt.plugins.cljrefactor.util.move_loc_line = (function move_loc_line(ed,loc,dir){if(cljs.core.truth_(loc))
{var neue = (function (){var obj15124 = {"line":((cljs.core._EQ_.call(null,dir,new cljs.core.Keyword(null,"up","up",1013907981)))?((loc["line"]) - 1):((loc["line"]) + 1)),"ch":(loc["ch"])};return obj15124;
})();if(((neue["line"]) < 0))
{return null;
} else
{if(((neue["line"]) > lt.objs.editor.last_line.call(null,ed)))
{return null;
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{var obj15126 = {"line":(neue["line"]),"ch":((cljs.core._EQ_.call(null,dir,new cljs.core.Keyword(null,"up","up",1013907981)))?(function (){var x__6805__auto__ = (lt.objs.editor.line_length.call(null,ed,(neue["line"])) - 1);var y__6806__auto__ = 0;return ((x__6805__auto__ > y__6806__auto__) ? x__6805__auto__ : y__6806__auto__);
})():0)};return obj15126;
} else
{return null;
}
}
}
} else
{return null;
}
});
/**
* @param {...*} var_args
*/
lt.plugins.cljrefactor.util.move_loc = (function() { 
var move_loc__delegate = function (ed,dir,loc,p__15127){var map__15129 = p__15127;var map__15129__$1 = ((cljs.core.seq_QMARK_.call(null,map__15129))?cljs.core.apply.call(null,cljs.core.hash_map,map__15129):map__15129);var line = cljs.core.get.call(null,map__15129__$1,new cljs.core.Keyword(null,"line","line",1017226086));if(cljs.core.truth_(loc))
{var len = (cljs.core.truth_(line)?cljs.core.count.call(null,line):lt.objs.editor.line_length.call(null,ed,(loc["line"])));var neue = lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,((cljs.core._EQ_.call(null,dir,new cljs.core.Keyword(null,"left","left",1017222009)))?-1:1));if(((neue["ch"]) < 0))
{return lt.plugins.cljrefactor.util.move_loc_line.call(null,ed,loc,new cljs.core.Keyword(null,"up","up",1013907981));
} else
{if(((neue["ch"]) >= len))
{return lt.plugins.cljrefactor.util.move_loc_line.call(null,ed,loc,new cljs.core.Keyword(null,"down","down",1016993812));
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return neue;
} else
{return null;
}
}
}
} else
{return null;
}
};
var move_loc = function (ed,dir,loc,var_args){
var p__15127 = null;if (arguments.length > 3) {
  p__15127 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3),0);} 
return move_loc__delegate.call(this,ed,dir,loc,p__15127);};
move_loc.cljs$lang$maxFixedArity = 3;
move_loc.cljs$lang$applyTo = (function (arglist__15145){
var ed = cljs.core.first(arglist__15145);
arglist__15145 = cljs.core.next(arglist__15145);
var dir = cljs.core.first(arglist__15145);
arglist__15145 = cljs.core.next(arglist__15145);
var loc = cljs.core.first(arglist__15145);
var p__15127 = cljs.core.rest(arglist__15145);
return move_loc__delegate(ed,dir,loc,p__15127);
});
move_loc.cljs$core$IFn$_invoke$arity$variadic = move_loc__delegate;
return move_loc;
})()
;
lt.plugins.cljrefactor.util.within_range = (function within_range(p__15130,cur){var vec__15132 = p__15130;var start = cljs.core.nth.call(null,vec__15132,0,null);var end = cljs.core.nth.call(null,vec__15132,1,null);if(cljs.core.truth_(cur))
{return ((end >= (cur["line"]))) && (((cur["line"]) >= start));
} else
{return null;
}
});
lt.plugins.cljrefactor.util.move_matching_loc = (function move_matching_loc(ed,loc,dir,line){var ch = cljs.core.get.call(null,line,(loc["ch"]));var next_loc = lt.plugins.cljrefactor.util.move_loc.call(null,ed,dir,loc,new cljs.core.Keyword(null,"line","line",1017226086),line);var next_line = (cljs.core.truth_(next_loc)?((cljs.core.not_EQ_.call(null,(loc["line"]),(next_loc["line"])))?lt.objs.editor.line.call(null,ed,(next_loc["line"])):line):null);return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ch,next_loc,next_line], null);
});
lt.plugins.cljrefactor.util.opposites_reg_ex = (new RegExp("\\(|\\[|\\{|\\)|\\]|\\}"));
lt.plugins.cljrefactor.util.reverse_str = (function reverse_str(v){return v.split("").reverse().join("");
});
lt.plugins.cljrefactor.util.idx_next_opposites = (function idx_next_opposites(v){var temp__4092__auto__ = lt.plugins.cljrefactor.util.opposites_reg_ex.exec(v);if(cljs.core.truth_(temp__4092__auto__))
{var m = temp__4092__auto__;return m.index;
} else
{return null;
}
});
lt.plugins.cljrefactor.util.maybe_skip_to_next_opposites = (function maybe_skip_to_next_opposites(loc,line){if(cljs.core.truth_((function (){var and__6486__auto__ = loc;if(cljs.core.truth_(and__6486__auto__))
{return line;
} else
{return and__6486__auto__;
}
})()))
{var v = line.substr((loc["ch"]));var vl = (v["length"]);var idx = lt.plugins.cljrefactor.util.idx_next_opposites.call(null,v);if(cljs.core.truth_((function (){var and__6486__auto__ = idx;if(cljs.core.truth_(and__6486__auto__))
{return ((idx > 0)) && ((idx < vl));
} else
{return and__6486__auto__;
}
})()))
{return lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,idx);
} else
{if(cljs.core.not.call(null,idx))
{return lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,((line["length"]) - 1));
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return loc;
} else
{return null;
}
}
}
} else
{return loc;
}
});
lt.plugins.cljrefactor.util.idx_prev_opposites = (function idx_prev_opposites(v){return lt.plugins.cljrefactor.util.idx_next_opposites.call(null,lt.plugins.cljrefactor.util.reverse_str.call(null,v));
});
lt.plugins.cljrefactor.util.maybe_skip_to_prev_opposites = (function maybe_skip_to_prev_opposites(loc,line){if(cljs.core.truth_((function (){var and__6486__auto__ = loc;if(cljs.core.truth_(and__6486__auto__))
{return line;
} else
{return and__6486__auto__;
}
})()))
{var v = line.substr(0,((loc["ch"]) + 1));var vl = (v["length"]);var idx = lt.plugins.cljrefactor.util.idx_prev_opposites.call(null,v);if(cljs.core.truth_((function (){var and__6486__auto__ = idx;if(cljs.core.truth_(and__6486__auto__))
{return ((idx > 0)) && ((idx < vl));
} else
{return and__6486__auto__;
}
})()))
{return lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,(- idx));
} else
{if(cljs.core.not.call(null,idx))
{return lt.plugins.cljrefactor.util.adjust_loc.call(null,loc,(- (loc["ch"])));
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return loc;
} else
{return null;
}
}
}
} else
{return loc;
}
});
lt.plugins.cljrefactor.util.loc_next_end_pair = (function loc_next_end_pair(ed,loc){if(cljs.core.truth_(loc))
{var search_range = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(loc["line"]),((loc["line"]) + 200)], null);var cur = loc;var line = lt.objs.editor.line.call(null,ed,(loc["line"]));var level = 0;while(true){
if(cljs.core.not.call(null,(function (){var and__6486__auto__ = cur;if(cljs.core.truth_(and__6486__auto__))
{var and__6486__auto____$1 = line;if(cljs.core.truth_(and__6486__auto____$1))
{return lt.plugins.cljrefactor.util.within_range.call(null,search_range,cur);
} else
{return and__6486__auto____$1;
}
} else
{return and__6486__auto__;
}
})()))
{return null;
} else
{var vec__15134 = lt.plugins.cljrefactor.util.move_matching_loc.call(null,ed,cur,new cljs.core.Keyword(null,"right","right",1122416014),line);var ch = cljs.core.nth.call(null,vec__15134,0,null);var next_loc = cljs.core.nth.call(null,vec__15134,1,null);var next_line = cljs.core.nth.call(null,vec__15134,2,null);var next_loc__$1 = lt.plugins.cljrefactor.util.maybe_skip_to_next_opposites.call(null,next_loc,next_line);if(cljs.core.not.call(null,(function (){var or__6498__auto__ = lt.plugins.cljrefactor.util.start_pair_QMARK_.call(null,ch);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return lt.plugins.cljrefactor.util.end_pair_QMARK_.call(null,ch);
}
})()))
{{
var G__15146 = next_loc__$1;
var G__15147 = next_line;
var G__15148 = level;
cur = G__15146;
line = G__15147;
level = G__15148;
continue;
}
} else
{if(cljs.core.truth_(lt.plugins.cljrefactor.util.string_BAR_comment_QMARK_.call(null,ed,cur,line)))
{{
var G__15149 = next_loc__$1;
var G__15150 = next_line;
var G__15151 = level;
cur = G__15149;
line = G__15150;
level = G__15151;
continue;
}
} else
{if(cljs.core.truth_(lt.plugins.cljrefactor.util.start_pair_QMARK_.call(null,ch)))
{{
var G__15152 = next_loc__$1;
var G__15153 = next_line;
var G__15154 = (level + 1);
cur = G__15152;
line = G__15153;
level = G__15154;
continue;
}
} else
{if(cljs.core.truth_((function (){var and__6486__auto__ = lt.plugins.cljrefactor.util.end_pair_QMARK_.call(null,ch);if(cljs.core.truth_(and__6486__auto__))
{return cljs.core._EQ_.call(null,0,level);
} else
{return and__6486__auto__;
}
})()))
{return cur;
} else
{if(cljs.core.truth_(lt.plugins.cljrefactor.util.end_pair_QMARK_.call(null,ch)))
{{
var G__15155 = next_loc__$1;
var G__15156 = next_line;
var G__15157 = (level - 1);
cur = G__15155;
line = G__15156;
level = G__15157;
continue;
}
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{{
var G__15158 = next_loc__$1;
var G__15159 = next_line;
var G__15160 = level;
cur = G__15158;
line = G__15159;
level = G__15160;
continue;
}
} else
{return null;
}
}
}
}
}
}
}
break;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.util.loc_next_matching_start_pair = (function loc_next_matching_start_pair(ed,loc,pair_ch){if(cljs.core.truth_(loc))
{var search_range = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((loc["line"]) - 200),(loc["line"])], null);var cur = loc;var line = lt.objs.editor.line.call(null,ed,(loc["line"]));var level = 0;while(true){
if(cljs.core.not.call(null,(function (){var and__6486__auto__ = cur;if(cljs.core.truth_(and__6486__auto__))
{var and__6486__auto____$1 = line;if(cljs.core.truth_(and__6486__auto____$1))
{return lt.plugins.cljrefactor.util.within_range.call(null,search_range,cur);
} else
{return and__6486__auto____$1;
}
} else
{return and__6486__auto__;
}
})()))
{return null;
} else
{var vec__15136 = lt.plugins.cljrefactor.util.move_matching_loc.call(null,ed,cur,new cljs.core.Keyword(null,"left","left",1017222009),line);var ch = cljs.core.nth.call(null,vec__15136,0,null);var next_loc = cljs.core.nth.call(null,vec__15136,1,null);var next_line = cljs.core.nth.call(null,vec__15136,2,null);var next_loc__$1 = lt.plugins.cljrefactor.util.maybe_skip_to_prev_opposites.call(null,next_loc,next_line);if(!((cljs.core._EQ_.call(null,ch,(lt.plugins.cljrefactor.util.opposites[pair_ch]))) || (cljs.core._EQ_.call(null,ch,pair_ch))))
{{
var G__15161 = next_loc__$1;
var G__15162 = next_line;
var G__15163 = level;
cur = G__15161;
line = G__15162;
level = G__15163;
continue;
}
} else
{if(cljs.core.truth_(lt.plugins.cljrefactor.util.string_BAR_comment_QMARK_.call(null,ed,cur,line)))
{{
var G__15164 = next_loc__$1;
var G__15165 = next_line;
var G__15166 = level;
cur = G__15164;
line = G__15165;
level = G__15166;
continue;
}
} else
{if(cljs.core._EQ_.call(null,ch,(lt.plugins.cljrefactor.util.opposites[pair_ch])))
{{
var G__15167 = next_loc__$1;
var G__15168 = next_line;
var G__15169 = (level + 1);
cur = G__15167;
line = G__15168;
level = G__15169;
continue;
}
} else
{if((cljs.core._EQ_.call(null,ch,pair_ch)) && (cljs.core._EQ_.call(null,0,level)))
{return cur;
} else
{if(cljs.core._EQ_.call(null,ch,pair_ch))
{{
var G__15170 = next_loc__$1;
var G__15171 = next_line;
var G__15172 = (level - 1);
cur = G__15170;
line = G__15171;
level = G__15172;
continue;
}
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{{
var G__15173 = next_loc__$1;
var G__15174 = next_line;
var G__15175 = level;
cur = G__15173;
line = G__15174;
level = G__15175;
continue;
}
} else
{return null;
}
}
}
}
}
}
}
break;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.util.get_bounds_matching = (function get_bounds_matching(ed,loc){var temp__4092__auto__ = lt.plugins.cljrefactor.util.loc_next_end_pair.call(null,ed,loc);if(cljs.core.truth_(temp__4092__auto__))
{var loc_next_end = temp__4092__auto__;var temp__4092__auto____$1 = lt.plugins.cljrefactor.util.loc_next_matching_start_pair.call(null,ed,lt.plugins.cljrefactor.util.move_loc.call(null,ed,new cljs.core.Keyword(null,"left","left",1017222009),loc_next_end),(lt.plugins.cljrefactor.util.opposites[lt.plugins.cljrefactor.util.get_ch.call(null,ed,loc_next_end)]));if(cljs.core.truth_(temp__4092__auto____$1))
{var loc_next_start = temp__4092__auto____$1;return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [loc_next_start,loc_next_end], null);
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.util.get_next_bounds_matching = (function get_next_bounds_matching(ed,p__15137){var vec__15139 = p__15137;var start = cljs.core.nth.call(null,vec__15139,0,null);var end = cljs.core.nth.call(null,vec__15139,1,null);var temp__4092__auto__ = lt.plugins.cljrefactor.util.loc_next_end_pair.call(null,ed,lt.plugins.cljrefactor.util.move_loc.call(null,ed,new cljs.core.Keyword(null,"right","right",1122416014),end));if(cljs.core.truth_(temp__4092__auto__))
{var loc_next_end = temp__4092__auto__;var temp__4092__auto____$1 = lt.plugins.cljrefactor.util.loc_next_matching_start_pair.call(null,ed,lt.plugins.cljrefactor.util.move_loc.call(null,ed,new cljs.core.Keyword(null,"left","left",1017222009),start),(lt.plugins.cljrefactor.util.opposites[lt.plugins.cljrefactor.util.get_ch.call(null,ed,loc_next_end)]));if(cljs.core.truth_(temp__4092__auto____$1))
{var loc_next_start = temp__4092__auto____$1;return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [loc_next_start,loc_next_end], null);
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.util.get_top_level_form = (function() {
var get_top_level_form = null;
var get_top_level_form__1 = (function (ed){return get_top_level_form.call(null,ed,lt.objs.editor.__GT_cursor.call(null,ed));
});
var get_top_level_form__2 = (function (ed,loc){var temp__4090__auto__ = (function (){var G__15142 = lt.plugins.cljrefactor.util.get_bounds_matching.call(null,ed,cljs.core.clj__GT_js.call(null,loc));var G__15142__$1 = (((G__15142 == null))?null:cljs.core.iterate.call(null,cljs.core.partial.call(null,lt.plugins.cljrefactor.util.get_next_bounds_matching,ed),G__15142));var G__15142__$2 = (((G__15142__$1 == null))?null:cljs.core.take_while.call(null,cljs.core.identity,G__15142__$1));var G__15142__$3 = (((G__15142__$2 == null))?null:cljs.core.last.call(null,G__15142__$2));return G__15142__$3;
})();if(cljs.core.truth_(temp__4090__auto__))
{var vec__15143 = temp__4090__auto__;var start = cljs.core.nth.call(null,vec__15143,0,null);var end = cljs.core.nth.call(null,vec__15143,1,null);var start_c = cljs.core.js__GT_clj.call(null,start,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",4191781672),true);var end_c = cljs.core.js__GT_clj.call(null,end,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",4191781672),true);return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"form-str","form-str",1486434586),lt.objs.editor.range.call(null,ed,start_c,cljs.core.update_in.call(null,end_c,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc)),new cljs.core.Keyword(null,"start","start",1123661780),start_c,new cljs.core.Keyword(null,"end","end",1014004813),cljs.core.update_in.call(null,end_c,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc)], null);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(loc),0))
{return get_top_level_form.call(null,ed,cljs.core.assoc.call(null,loc,new cljs.core.Keyword(null,"ch","ch",1013907415),1));
} else
{return null;
}
}
});
get_top_level_form = function(ed,loc){
switch(arguments.length){
case 1:
return get_top_level_form__1.call(this,ed);
case 2:
return get_top_level_form__2.call(this,ed,loc);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_top_level_form.cljs$core$IFn$_invoke$arity$1 = get_top_level_form__1;
get_top_level_form.cljs$core$IFn$_invoke$arity$2 = get_top_level_form__2;
return get_top_level_form;
})()
;
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.letz')) {
goog.provide('lt.plugins.cljrefactor.letz');
goog.require('cljs.core');
goog.require('lt.plugins.cljrefactor.util');
goog.require('rewrite_clj.paredit');
goog.require('lt.objs.editor.pool');
goog.require('rewrite_clj.zip');
goog.require('rewrite_clj.zip');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.util');
goog.require('rewrite_clj.node');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('rewrite_clj.paredit');
goog.require('lt.objs.command');
goog.require('rewrite_clj.node');
lt.plugins.cljrefactor.letz.introduce_let = (function introduce_let(zloc){return rewrite_clj.zip.insert_right.call(null,rewrite_clj.zip.up.call(null,rewrite_clj.paredit.wrap_around.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.paredit.wrap_around.call(null,zloc,new cljs.core.Keyword(null,"list","list",1017226256)),rewrite_clj.node.token_node.call(null,new cljs.core.Symbol(null,"let","let",-1640424492,null))),new cljs.core.Keyword(null,"vector","vector",4488484021))),rewrite_clj.node.newlines.call(null,1));
});
lt.plugins.cljrefactor.letz.alet_QMARK_ = (function alet_QMARK_(zloc){return cljs.core.some.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["letfn",null,"when-let",null,"let",null], null), null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [rewrite_clj.zip.string.call(null,zloc)], null));
});
lt.plugins.cljrefactor.letz.find_let = (function() {
var find_let = null;
var find_let__1 = (function (zloc){return find_let.call(null,zloc,lt.plugins.cljrefactor.letz.alet_QMARK_);
});
var find_let__2 = (function (zloc,p_QMARK_){if(cljs.core.truth_(zloc))
{var temp__4090__auto__ = p_QMARK_.call(null,rewrite_clj.zip.leftmost.call(null,zloc));if(cljs.core.truth_(temp__4090__auto__))
{var alet = temp__4090__auto__;return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alet,rewrite_clj.zip.leftmost.call(null,zloc)], null);
} else
{return find_let.call(null,rewrite_clj.zip.up.call(null,zloc));
}
} else
{return null;
}
});
find_let = function(zloc,p_QMARK_){
switch(arguments.length){
case 1:
return find_let__1.call(this,zloc);
case 2:
return find_let__2.call(this,zloc,p_QMARK_);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
find_let.cljs$core$IFn$_invoke$arity$1 = find_let__1;
find_let.cljs$core$IFn$_invoke$arity$2 = find_let__2;
return find_let;
})()
;
lt.plugins.cljrefactor.letz.replace_let_defs = (function replace_let_defs(zloc,let_defs){var vs = cljs.core.apply.call(null,cljs.core.hash_map,cljs.core.reverse.call(null,cljs.core.map.call(null,rewrite_clj.node.string,cljs.core.remove.call(null,rewrite_clj.node.whitespace_or_comment_QMARK_,rewrite_clj.node.children.call(null,rewrite_clj.zip.node.call(null,let_defs))))));return cljs.core.last.call(null,cljs.core.take_while.call(null,cljs.core.complement.call(null,rewrite_clj.zip.end_QMARK_),cljs.core.take_while.call(null,cljs.core.identity,cljs.core.iterate.call(null,((function (vs){
return (function (loc){var temp__4090__auto__ = cljs.core.get.call(null,vs,rewrite_clj.zip.string.call(null,loc));if(cljs.core.truth_(temp__4090__auto__))
{var r = temp__4090__auto__;return rewrite_clj.zip.replace.call(null,loc,cljs.core.symbol.call(null,r));
} else
{return rewrite_clj.zip.next.call(null,loc);
}
});})(vs))
,zloc))));
});
lt.plugins.cljrefactor.letz.promote_let = (function promote_let(zloc){var vec__9077 = lt.plugins.cljrefactor.letz.find_let.call(null,zloc);var alet = cljs.core.nth.call(null,vec__9077,0,null);var cand = cljs.core.nth.call(null,vec__9077,1,null);if(cljs.core.truth_((function (){var and__6486__auto__ = alet;if(cljs.core.truth_(and__6486__auto__))
{var G__9078 = zloc;var G__9078__$1 = (((G__9078 == null))?null:rewrite_clj.zip.up.call(null,G__9078));var G__9078__$2 = (((G__9078__$1 == null))?null:rewrite_clj.zip.up.call(null,G__9078__$1));var G__9078__$3 = (((G__9078__$2 == null))?null:rewrite_clj.zip.up.call(null,G__9078__$2));return G__9078__$3;
} else
{return and__6486__auto__;
}
})()))
{return lt.plugins.cljrefactor.letz.replace_let_defs.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.paredit.wrap_around.call(null,rewrite_clj.zip.up.call(null,rewrite_clj.paredit.splice_killing_backward.call(null,rewrite_clj.zip.right.call(null,rewrite_clj.zip.right.call(null,cand)))),new cljs.core.Keyword(null,"list","list",1017226256)),rewrite_clj.node.token_node.call(null,cljs.core.symbol.call(null,alet))),rewrite_clj.zip.node.call(null,rewrite_clj.zip.right.call(null,cand))),rewrite_clj.node.newlines.call(null,1)),rewrite_clj.zip.right.call(null,cand));
} else
{return zloc;
}
});
lt.plugins.cljrefactor.letz.move_to_let = (function move_to_let(zloc,placeholder){var temp__4092__auto__ = lt.plugins.cljrefactor.letz.find_let.call(null,zloc,(function (p1__9079_SHARP_){return cljs.core._EQ_.call(null,"let",rewrite_clj.zip.string.call(null,p1__9079_SHARP_));
}));if(cljs.core.truth_(temp__4092__auto__))
{var vec__9082 = temp__4092__auto__;var alet = cljs.core.nth.call(null,vec__9082,0,null);var cand = cljs.core.nth.call(null,vec__9082,1,null);return rewrite_clj.zip.append_child.call(null,rewrite_clj.zip.append_child.call(null,rewrite_clj.zip.append_child.call(null,rewrite_clj.zip.right.call(null,cljs.core.second.call(null,lt.plugins.cljrefactor.letz.find_let.call(null,rewrite_clj.zip.replace.call(null,zloc,rewrite_clj.node.token_node.call(null,cljs.core.symbol.call(null,placeholder))),((function (vec__9082,alet,cand,temp__4092__auto__){
return (function (p1__9080_SHARP_){return cljs.core._EQ_.call(null,"let",rewrite_clj.zip.string.call(null,p1__9080_SHARP_));
});})(vec__9082,alet,cand,temp__4092__auto__))
))),rewrite_clj.node.newlines.call(null,1)),rewrite_clj.node.token_node.call(null,cljs.core.symbol.call(null,placeholder))),rewrite_clj.zip.node.call(null,zloc));
} else
{return null;
}
});
lt.plugins.cljrefactor.letz.introduce_let_STAR_ = (function introduce_let_STAR_(ed){var pos = lt.objs.editor.__GT_cursor.call(null,ed);var form = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,pos);var zloc = (function (){var G__9085 = form;var G__9085__$1 = (((G__9085 == null))?null:new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(G__9085));var G__9085__$2 = (((G__9085__$1 == null))?null:rewrite_clj.zip.of_string.call(null,G__9085__$1));var G__9085__$3 = (((G__9085__$2 == null))?null:rewrite_clj.zip.find_last_by_pos.call(null,G__9085__$2,lt.plugins.cljrefactor.util.__GT_zipper_pos_start.call(null,pos,form)));return G__9085__$3;
})();var temp__4092__auto__ = rewrite_clj.zip.root_string.call(null,lt.plugins.cljrefactor.letz.introduce_let.call(null,zloc));if(cljs.core.truth_(temp__4092__auto__))
{var res = temp__4092__auto__;lt.objs.editor.replace.call(null,ed,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form),res);
lt.objs.editor.move_cursor.call(null,ed,pos);
lt.plugins.cljrefactor.util.format_keep_pos.call(null,ed);
var start_pos_zloc = lt.plugins.cljrefactor.util.__GT_start_pos.call(null,cljs.core.meta.call(null,rewrite_clj.zip.node.call(null,zloc)),form);return lt.objs.editor.move_cursor.call(null,ed,cljs.core.update_in.call(null,start_pos_zloc,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),((function (start_pos_zloc,res,temp__4092__auto__,pos,form,zloc){
return (function (p1__9083_SHARP_){return (p1__9083_SHARP_ + 6);
});})(start_pos_zloc,res,temp__4092__auto__,pos,form,zloc))
));
} else
{return null;
}
});
lt.plugins.cljrefactor.letz.promote_let_STAR_ = (function promote_let_STAR_(ed){var pos = lt.objs.editor.__GT_cursor.call(null,ed);var form = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,pos);var zloc = (function (){var G__9087 = form;var G__9087__$1 = (((G__9087 == null))?null:new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(G__9087));var G__9087__$2 = (((G__9087__$1 == null))?null:rewrite_clj.zip.of_string.call(null,G__9087__$1));var G__9087__$3 = (((G__9087__$2 == null))?null:rewrite_clj.zip.find_last_by_pos.call(null,G__9087__$2,lt.plugins.cljrefactor.util.__GT_zipper_pos_start.call(null,pos,form)));return G__9087__$3;
})();var temp__4092__auto__ = rewrite_clj.zip.root_string.call(null,lt.plugins.cljrefactor.letz.promote_let.call(null,zloc));if(cljs.core.truth_(temp__4092__auto__))
{var res = temp__4092__auto__;lt.objs.editor.replace.call(null,ed,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form),res);
lt.objs.editor.move_cursor.call(null,ed,pos);
return lt.plugins.cljrefactor.util.format_keep_pos.call(null,ed);
} else
{return null;
}
});
lt.plugins.cljrefactor.letz.token_bounds__GT_selections = (function token_bounds__GT_selections(bounds,line_offset){return cljs.core.map.call(null,(function (p__9090){var map__9091 = p__9090;var map__9091__$1 = ((cljs.core.seq_QMARK_.call(null,map__9091))?cljs.core.apply.call(null,cljs.core.hash_map,map__9091):map__9091);var end = cljs.core.get.call(null,map__9091__$1,new cljs.core.Keyword(null,"end","end",1014004813));var start = cljs.core.get.call(null,map__9091__$1,new cljs.core.Keyword(null,"start","start",1123661780));var line = cljs.core.get.call(null,map__9091__$1,new cljs.core.Keyword(null,"line","line",1017226086));return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"anchor","anchor",3895572007),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),(line_offset + line),new cljs.core.Keyword(null,"ch","ch",1013907415),start], null),new cljs.core.Keyword(null,"head","head",1017102674),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),(line_offset + line),new cljs.core.Keyword(null,"ch","ch",1013907415),end], null)], null);
}),bounds);
});
lt.plugins.cljrefactor.letz.move_to_let_STAR_ = (function move_to_let_STAR_(ed){var pos = lt.objs.editor.__GT_cursor.call(null,ed);var bm = lt.objs.editor.bookmark.call(null,ed,pos,null);var form = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,pos);var zloc = (function (){var G__9093 = form;var G__9093__$1 = (((G__9093 == null))?null:new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(G__9093));var G__9093__$2 = (((G__9093__$1 == null))?null:rewrite_clj.zip.of_string.call(null,G__9093__$1));var G__9093__$3 = (((G__9093__$2 == null))?null:rewrite_clj.zip.find_last_by_pos.call(null,G__9093__$2,lt.plugins.cljrefactor.util.__GT_zipper_pos_start.call(null,pos,form)));return G__9093__$3;
})();var temp__4092__auto__ = lt.plugins.cljrefactor.letz.move_to_let.call(null,zloc,"var-x");if(cljs.core.truth_(temp__4092__auto__))
{var res = temp__4092__auto__;lt.objs.editor.replace.call(null,ed,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form),rewrite_clj.zip.root_string.call(null,res));
lt.objs.editor.move_cursor.call(null,ed,cljs.core.update_in.call(null,pos,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"line","line",1017226086)], null),cljs.core.inc));
lt.plugins.cljrefactor.util.format_keep_pos.call(null,ed);
var mod_form = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,pos);var ph_bounds = lt.plugins.cljrefactor.util.find_all_token_bounds.call(null,new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(mod_form),"var-x");var cm_ed = lt.objs.editor.__GT_cm_ed.call(null,ed);return cm_ed.setSelections(cljs.core.clj__GT_js.call(null,lt.plugins.cljrefactor.letz.token_bounds__GT_selections.call(null,ph_bounds,new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form)))));
} else
{return null;
}
});
lt.plugins.cljrefactor.letz.__BEH__introduce_let_BANG_ = (function __BEH__introduce_let_BANG_(ed){return lt.plugins.cljrefactor.letz.introduce_let_STAR_.call(null,ed);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.letz","introduce-let!","lt.plugins.cljrefactor.letz/introduce-let!",706125347),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.letz.__BEH__introduce_let_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.introduce-let!","refactor.introduce-let!",2931449586),null], null), null));
lt.plugins.cljrefactor.letz.__BEH__promote_let_BANG_ = (function __BEH__promote_let_BANG_(ed){return lt.plugins.cljrefactor.letz.promote_let_STAR_.call(null,ed);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.letz","promote-let!","lt.plugins.cljrefactor.letz/promote-let!",4789292070),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.letz.__BEH__promote_let_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.promote-let!","refactor.promote-let!",3780227057),null], null), null));
lt.plugins.cljrefactor.letz.__BEH__move_to_let_BANG_ = (function __BEH__move_to_let_BANG_(ed){return lt.plugins.cljrefactor.letz.move_to_let_STAR_.call(null,ed);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.letz","move-to-let!","lt.plugins.cljrefactor.letz/move-to-let!",2626702139),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.letz.__BEH__move_to_let_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.move-to-let!","refactor.move-to-let!",1617964058),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.letz","introduce-let","lt.plugins.cljrefactor.letz/introduce-let",1791326796),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Introduce let",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.introduce-let!","refactor.introduce-let!",2931449586));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.letz","promote-let","lt.plugins.cljrefactor.letz/promote-let",1537445993),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Promote let",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.promote-let!","refactor.promote-let!",3780227057));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.letz","move-to-let","lt.plugins.cljrefactor.letz/move-to-let",3425104436),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Move to let",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.move-to-let!","refactor.move-to-let!",1617964058));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.parser')) {
goog.provide('lt.plugins.cljrefactor.parser');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('cljs.reader');
goog.require('cljs.reader');
goog.require('clojure.zip');
goog.require('clojure.zip');
lt.plugins.cljrefactor.parser.str__GT_seq_zip = (function str__GT_seq_zip(form_str){cljs.reader.register_tag_parser_BANG_.call(null,"afn",(function (x){return [cljs.core.str("___#"),cljs.core.str(x),cljs.core.str("___")].join('');
}));
var res = ((cljs.core.seq.call(null,form_str))?clojure.zip.seq_zip.call(null,cljs.reader.read_string.call(null,clojure.string.replace.call(null,form_str,/#\(/,"#afn("))):null);cljs.reader.deregister_tag_parser_BANG_.call(null,"afn");
return res;
});
lt.plugins.cljrefactor.parser.zip__GT_str = (function zip__GT_str(zipnode){return clojure.string.replace.call(null,cljs.core.pr_str.call(null,clojure.zip.root.call(null,zipnode)),/\"___|___\"/,"");
});
lt.plugins.cljrefactor.parser.do_find_def = (function do_find_def(root){if(cljs.core.list_QMARK_.call(null,clojure.zip.node.call(null,root)))
{var def_node = clojure.zip.down.call(null,root);if(cljs.core._EQ_.call(null,[cljs.core.str(clojure.zip.node.call(null,def_node))].join('').indexOf("def"),0))
{return cljs.core.pr_str.call(null,clojure.zip.node.call(null,clojure.zip.right.call(null,def_node)));
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.parser.find_def = (function find_def(form){var temp__4092__auto__ = lt.plugins.cljrefactor.parser.str__GT_seq_zip.call(null,form);if(cljs.core.truth_(temp__4092__auto__))
{var root = temp__4092__auto__;return lt.plugins.cljrefactor.parser.do_find_def.call(null,root);
} else
{return null;
}
});
lt.plugins.cljrefactor.parser.find_test_def = (function find_test_def(form){var temp__4092__auto__ = lt.plugins.cljrefactor.parser.str__GT_seq_zip.call(null,form);if(cljs.core.truth_(temp__4092__auto__))
{var root = temp__4092__auto__;if(cljs.core.list_QMARK_.call(null,clojure.zip.node.call(null,root)))
{var temp__4090__auto__ = lt.plugins.cljrefactor.parser.do_find_def.call(null,root);if(cljs.core.truth_(temp__4090__auto__))
{var v = temp__4090__auto__;return v;
} else
{if(cljs.core._EQ_.call(null,cljs.core.pr_str.call(null,clojure.zip.node.call(null,clojure.zip.down.call(null,root))),"with-test"))
{return lt.plugins.cljrefactor.parser.do_find_def.call(null,clojure.zip.right.call(null,clojure.zip.down.call(null,root)));
} else
{return null;
}
}
} else
{return null;
}
} else
{return null;
}
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.middleware')) {
goog.provide('lt.plugins.cljrefactor.middleware');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
lt.plugins.cljrefactor.middleware.create_op = (function create_op(params){return [cljs.core.str("(do\n     (require 'refactor-nrepl.client)\n     (require 'clojure.tools.nrepl)\n     (clojure.tools.nrepl/message\n       (clojure.tools.nrepl/client (refactor-nrepl.client/connect) 10000)\n"),cljs.core.str(cljs.core.pr_str.call(null,params)),cljs.core.str("))")].join('');
});
lt.plugins.cljrefactor.middleware.create_ns_op = (function create_ns_op(ed,params){var filename = new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));return [cljs.core.str("(do\n     (require 'refactor-nrepl.client)\n     (require 'clojure.tools.nrepl)\n     (require 'lighttable.nrepl.eval)\n"),cljs.core.str("(clojure.tools.nrepl/message\n     (clojure.tools.nrepl/client (refactor-nrepl.client/connect) 10000)\n"),cljs.core.str([cljs.core.str(clojure.string.join.call(null,"",cljs.core.drop_last.call(null,cljs.core.pr_str.call(null,params)))),cljs.core.str(" :ns "),cljs.core.str("(lighttable.nrepl.eval/file->ns \""),cljs.core.str(filename),cljs.core.str("\")}")].join('')),cljs.core.str("))")].join('');
});
lt.plugins.cljrefactor.middleware.extract_result_group = (function extract_result_group(res,k){return cljs.core.filter.call(null,k,new cljs.core.Keyword(null,"result","result",4374444943).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null,new cljs.core.Keyword(null,"results","results",2111450984).cljs$core$IFn$_invoke$arity$1(res))));
});
lt.plugins.cljrefactor.middleware.extract_result_group_single = (function extract_result_group_single(res,k){return k.call(null,cljs.core.first.call(null,lt.plugins.cljrefactor.middleware.extract_result_group.call(null,res,k)));
});
/**
* @param {...*} var_args
*/
lt.plugins.cljrefactor.middleware.extract_result = (function() { 
var extract_result__delegate = function (res,p__15221){var map__15223 = p__15221;var map__15223__$1 = ((cljs.core.seq_QMARK_.call(null,map__15223))?cljs.core.apply.call(null,cljs.core.hash_map,map__15223):map__15223);var multiples = cljs.core.get.call(null,map__15223__$1,new cljs.core.Keyword(null,"multiples","multiples",4102754261));var singles = cljs.core.get.call(null,map__15223__$1,new cljs.core.Keyword(null,"singles","singles",3108436125));var ret = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"err","err",1014004951),(function (){var or__6498__auto__ = lt.plugins.cljrefactor.middleware.extract_result_group_single.call(null,res,new cljs.core.Keyword(null,"err","err",1014004951));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return lt.plugins.cljrefactor.middleware.extract_result_group_single.call(null,res,new cljs.core.Keyword(null,"error","error",1110689146));
}
})(),new cljs.core.Keyword(null,"out","out",1014014656),lt.plugins.cljrefactor.middleware.extract_result_group.call(null,res,new cljs.core.Keyword(null,"out","out",1014014656)),new cljs.core.Keyword(null,"meta","meta",1017252215),new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null,new cljs.core.Keyword(null,"results","results",2111450984).cljs$core$IFn$_invoke$arity$1(res))),new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786),new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(res)], null);if(cljs.core.truth_(new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret)))
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [false,ret], null);
} else
{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,cljs.core.merge.call(null,ret,cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,((function (ret,map__15223,map__15223__$1,multiples,singles){
return (function (p1__15219_SHARP_){return cljs.core.PersistentHashMap.fromArrays.call(null,[p1__15219_SHARP_],[lt.plugins.cljrefactor.middleware.extract_result_group_single.call(null,res,p1__15219_SHARP_)]);
});})(ret,map__15223,map__15223__$1,multiples,singles))
,singles)),cljs.core.into.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,((function (ret,map__15223,map__15223__$1,multiples,singles){
return (function (p1__15220_SHARP_){return cljs.core.PersistentHashMap.fromArrays.call(null,[p1__15220_SHARP_],[lt.plugins.cljrefactor.middleware.extract_result_group.call(null,res,p1__15220_SHARP_)]);
});})(ret,map__15223,map__15223__$1,multiples,singles))
,multiples)))], null);
}
};
var extract_result = function (res,var_args){
var p__15221 = null;if (arguments.length > 1) {
  p__15221 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return extract_result__delegate.call(this,res,p__15221);};
extract_result.cljs$lang$maxFixedArity = 1;
extract_result.cljs$lang$applyTo = (function (arglist__15224){
var res = cljs.core.first(arglist__15224);
var p__15221 = cljs.core.rest(arglist__15224);
return extract_result__delegate(res,p__15221);
});
extract_result.cljs$core$IFn$_invoke$arity$variadic = extract_result__delegate;
return extract_result;
})()
;
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.testing')) {
goog.provide('lt.plugins.cljrefactor.testing');
goog.require('cljs.core');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.console');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.parser');
lt.plugins.cljrefactor.testing.find_line_containing = (function find_line_containing(ed,txt){var res = [];lt.objs.editor.__GT_cm_ed.call(null,ed).getDoc().eachLine(((function (res){
return (function (line_handle){if((line_handle.text.indexOf(txt) > -1))
{return res.push(lt.objs.editor.__GT_cm_ed.call(null,ed).lineInfo(line_handle).line);
} else
{return null;
}
});})(res))
);
return cljs.core.first.call(null,cljs.core.seq.call(null,res));
});
lt.plugins.cljrefactor.testing.test_op = (function test_op(ed,fixture){return lt.plugins.cljrefactor.middleware.create_ns_op.call(null,ed,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"op","op",1013907795),"test"], null),(cljs.core.truth_(fixture)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"tests","tests",1124155795),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fixture], null)], null):null)));
});
lt.plugins.cljrefactor.testing.show_summary = (function show_summary(summary){if(((new cljs.core.Keyword(null,"error","error",1110689146).cljs$core$IFn$_invoke$arity$1(summary) > 0)) || ((new cljs.core.Keyword(null,"fail","fail",1017039504).cljs$core$IFn$_invoke$arity$1(summary) > 0)))
{return lt.objs.notifos.set_msg_BANG_.call(null,[cljs.core.str("Test errors: "),cljs.core.str(summary)].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",1108647146),"error"], null));
} else
{return lt.objs.notifos.set_msg_BANG_.call(null,[cljs.core.str("Test summary: "),cljs.core.str(summary)].join(''));
}
});
lt.plugins.cljrefactor.testing.show_successes = (function show_successes(ed,results){if(cljs.core.seq.call(null,results))
{var seq__14763 = cljs.core.seq.call(null,cljs.core.filter.call(null,(function (p__14767){var vec__14768 = p__14767;var k = cljs.core.nth.call(null,vec__14768,0,null);var v = cljs.core.nth.call(null,vec__14768,1,null);return cljs.core.every_QMARK_.call(null,((function (vec__14768,k,v){
return (function (p1__14756_SHARP_){return cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"type","type",1017479852).cljs$core$IFn$_invoke$arity$1(p1__14756_SHARP_),"pass");
});})(vec__14768,k,v))
,v);
}),results));var chunk__14764 = null;var count__14765 = 0;var i__14766 = 0;while(true){
if((i__14766 < count__14765))
{var ks = cljs.core._nth.call(null,chunk__14764,i__14766);var line_14799 = lt.plugins.cljrefactor.testing.find_line_containing.call(null,ed,cljs.core.name.call(null,cljs.core.first.call(null,ks)));lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.result","editor.result",4030217008),"\u2713",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),line_14799], null));
{
var G__14800 = seq__14763;
var G__14801 = chunk__14764;
var G__14802 = count__14765;
var G__14803 = (i__14766 + 1);
seq__14763 = G__14800;
chunk__14764 = G__14801;
count__14765 = G__14802;
i__14766 = G__14803;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14763);if(temp__4092__auto__)
{var seq__14763__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14763__$1))
{var c__7246__auto__ = cljs.core.chunk_first.call(null,seq__14763__$1);{
var G__14804 = cljs.core.chunk_rest.call(null,seq__14763__$1);
var G__14805 = c__7246__auto__;
var G__14806 = cljs.core.count.call(null,c__7246__auto__);
var G__14807 = 0;
seq__14763 = G__14804;
chunk__14764 = G__14805;
count__14765 = G__14806;
i__14766 = G__14807;
continue;
}
} else
{var ks = cljs.core.first.call(null,seq__14763__$1);var line_14808 = lt.plugins.cljrefactor.testing.find_line_containing.call(null,ed,cljs.core.name.call(null,cljs.core.first.call(null,ks)));lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.result","editor.result",4030217008),"\u2713",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),line_14808], null));
{
var G__14809 = cljs.core.next.call(null,seq__14763__$1);
var G__14810 = null;
var G__14811 = 0;
var G__14812 = 0;
seq__14763 = G__14809;
chunk__14764 = G__14810;
count__14765 = G__14811;
i__14766 = G__14812;
continue;
}
}
} else
{return null;
}
}
break;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.testing.show_errors = (function show_errors(ed,results){var seq__14773 = cljs.core.seq.call(null,cljs.core.apply.call(null,cljs.core.concat,cljs.core.vals.call(null,results)));var chunk__14774 = null;var count__14775 = 0;var i__14776 = 0;while(true){
if((i__14776 < count__14775))
{var r = cljs.core._nth.call(null,chunk__14774,i__14776);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"type","type",1017479852).cljs$core$IFn$_invoke$arity$1(r),"pass"))
{} else
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),[cljs.core.str("Error:\n"),cljs.core.str(new cljs.core.Keyword(null,"actual","actual",3885931776).cljs$core$IFn$_invoke$arity$1(r))].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(r) - 1)], null));
}
{
var G__14813 = seq__14773;
var G__14814 = chunk__14774;
var G__14815 = count__14775;
var G__14816 = (i__14776 + 1);
seq__14773 = G__14813;
chunk__14774 = G__14814;
count__14775 = G__14815;
i__14776 = G__14816;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__14773);if(temp__4092__auto__)
{var seq__14773__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14773__$1))
{var c__7246__auto__ = cljs.core.chunk_first.call(null,seq__14773__$1);{
var G__14817 = cljs.core.chunk_rest.call(null,seq__14773__$1);
var G__14818 = c__7246__auto__;
var G__14819 = cljs.core.count.call(null,c__7246__auto__);
var G__14820 = 0;
seq__14773 = G__14817;
chunk__14774 = G__14818;
count__14775 = G__14819;
i__14776 = G__14820;
continue;
}
} else
{var r = cljs.core.first.call(null,seq__14773__$1);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"type","type",1017479852).cljs$core$IFn$_invoke$arity$1(r),"pass"))
{} else
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),[cljs.core.str("Error:\n"),cljs.core.str(new cljs.core.Keyword(null,"actual","actual",3885931776).cljs$core$IFn$_invoke$arity$1(r))].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(r) - 1)], null));
}
{
var G__14821 = cljs.core.next.call(null,seq__14773__$1);
var G__14822 = null;
var G__14823 = 0;
var G__14824 = 0;
seq__14773 = G__14821;
chunk__14774 = G__14822;
count__14775 = G__14823;
i__14776 = G__14824;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.plugins.cljrefactor.testing.__BEH__test_res = (function __BEH__test_res(ed,res){var vec__14782 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"summary","summary",3451231000),new cljs.core.Keyword(null,"results","results",2111450984)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__14782,0,null);var ret = cljs.core.nth.call(null,vec__14782,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{lt.plugins.cljrefactor.testing.show_successes.call(null,ed,new cljs.core.Keyword(null,"results","results",2111450984).cljs$core$IFn$_invoke$arity$1(ret));
lt.plugins.cljrefactor.testing.show_errors.call(null,ed,new cljs.core.Keyword(null,"results","results",2111450984).cljs$core$IFn$_invoke$arity$1(ret));
lt.plugins.cljrefactor.testing.show_summary.call(null,new cljs.core.Keyword(null,"summary","summary",3451231000).cljs$core$IFn$_invoke$arity$1(ret));
var seq__14783_14825 = cljs.core.seq.call(null,new cljs.core.Keyword(null,"out","out",1014014656).cljs$core$IFn$_invoke$arity$1(ret));var chunk__14784_14826 = null;var count__14785_14827 = 0;var i__14786_14828 = 0;while(true){
if((i__14786_14828 < count__14785_14827))
{var msg_14829 = cljs.core._nth.call(null,chunk__14784_14826,i__14786_14828);lt.objs.console.log.call(null,new cljs.core.Keyword(null,"out","out",1014014656).cljs$core$IFn$_invoke$arity$1(msg_14829));
{
var G__14830 = seq__14783_14825;
var G__14831 = chunk__14784_14826;
var G__14832 = count__14785_14827;
var G__14833 = (i__14786_14828 + 1);
seq__14783_14825 = G__14830;
chunk__14784_14826 = G__14831;
count__14785_14827 = G__14832;
i__14786_14828 = G__14833;
continue;
}
} else
{var temp__4092__auto___14834 = cljs.core.seq.call(null,seq__14783_14825);if(temp__4092__auto___14834)
{var seq__14783_14835__$1 = temp__4092__auto___14834;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14783_14835__$1))
{var c__7246__auto___14836 = cljs.core.chunk_first.call(null,seq__14783_14835__$1);{
var G__14837 = cljs.core.chunk_rest.call(null,seq__14783_14835__$1);
var G__14838 = c__7246__auto___14836;
var G__14839 = cljs.core.count.call(null,c__7246__auto___14836);
var G__14840 = 0;
seq__14783_14825 = G__14837;
chunk__14784_14826 = G__14838;
count__14785_14827 = G__14839;
i__14786_14828 = G__14840;
continue;
}
} else
{var msg_14841 = cljs.core.first.call(null,seq__14783_14835__$1);lt.objs.console.log.call(null,new cljs.core.Keyword(null,"out","out",1014014656).cljs$core$IFn$_invoke$arity$1(msg_14841));
{
var G__14842 = cljs.core.next.call(null,seq__14783_14835__$1);
var G__14843 = null;
var G__14844 = 0;
var G__14845 = 0;
seq__14783_14825 = G__14842;
chunk__14784_14826 = G__14843;
count__14785_14827 = G__14844;
i__14786_14828 = G__14845;
continue;
}
}
} else
{}
}
break;
}
}
return lt.objs.notifos.done_working.call(null);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.testing","test-res","lt.plugins.cljrefactor.testing/test-res",4130252604),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.testing.__BEH__test_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.test","editor.eval.clj.result.refactor.test",1258664989),null], null), null));
lt.plugins.cljrefactor.testing.__BEH__test_all = (function __BEH__test_all(ed){return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.testing.test_op.call(null,ed,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.test","refactor.test",2087392560),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.testing","test-all","lt.plugins.cljrefactor.testing/test-all",4130301499),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.testing.__BEH__test_all,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.test-all","refactor.test-all",4194169988),null], null), null));
lt.plugins.cljrefactor.testing.__BEH__test_one = (function __BEH__test_one(ed){var temp__4092__auto__ = (function (){var G__14788 = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed);var G__14788__$1 = (((G__14788 == null))?null:new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(G__14788));var G__14788__$2 = (((G__14788__$1 == null))?null:lt.plugins.cljrefactor.parser.find_test_def.call(null,G__14788__$1));return G__14788__$2;
})();if(cljs.core.truth_(temp__4092__auto__))
{var fixture = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.testing.test_op.call(null,ed,fixture),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.test","refactor.test",2087392560),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.testing","test-one","lt.plugins.cljrefactor.testing/test-one",4130248066),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.testing.__BEH__test_one,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.test-one","refactor.test-one",4194183497),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.testing","test-all","lt.plugins.cljrefactor.testing/test-all",4130301499),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Test all in ns",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.test-all","refactor.test-all",4194169988));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.testing","test-one","lt.plugins.cljrefactor.testing/test-one",4130248066),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Test one at point",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.test-one","refactor.test-one",4194183497));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.prj-parser')) {
goog.provide('lt.plugins.cljrefactor.prj_parser');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
goog.require('lt.plugins.clojure');
goog.require('lt.plugins.clojure');
goog.require('lt.objs.files');
goog.require('lt.objs.files');
lt.plugins.cljrefactor.prj_parser.project_path = (function project_path(ed){var temp__4090__auto__ = cljs.core.get_in.call(null,cljs.core.deref.call(null,ed),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"client","client",3951159101),new cljs.core.Keyword(null,"default","default",2558708147)], null));if(cljs.core.truth_(temp__4090__auto__))
{var c = temp__4090__auto__;return new cljs.core.Keyword(null,"dir","dir",1014003711).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,c));
} else
{return new cljs.core.Keyword(null,"project-path","project-path",1907176907).cljs$core$IFn$_invoke$arity$1(lt.plugins.clojure.find_project.call(null,new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed))));
}
});
lt.plugins.cljrefactor.prj_parser.get_project_file = (function get_project_file(ed){var temp__4092__auto__ = lt.plugins.cljrefactor.prj_parser.project_path.call(null,ed);if(cljs.core.truth_(temp__4092__auto__))
{var path = temp__4092__auto__;return lt.objs.files.join.call(null,path,"project.clj");
} else
{return null;
}
});
lt.plugins.cljrefactor.prj_parser.prj__GT_map = (function prj__GT_map(p){return cljs.core.conj.call(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.call(null,(function (p1__14656_SHARP_){return cljs.core.PersistentHashMap.fromArrays.call(null,[cljs.core.first.call(null,p1__14656_SHARP_)],[cljs.core.second.call(null,p1__14656_SHARP_)]);
}),cljs.core.partition.call(null,2,cljs.core.drop.call(null,3,p))));
});
lt.plugins.cljrefactor.prj_parser.parse_project_file = (function parse_project_file(file){return lt.plugins.cljrefactor.prj_parser.prj__GT_map.call(null,cljs.reader.read_string.call(null,clojure.string.replace.call(null,new cljs.core.Keyword(null,"content","content",1965434859).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,file)),/\\/,"\\\\")));
});
lt.plugins.cljrefactor.prj_parser.src_dirs = (function src_dirs(prj){var or__6498__auto__ = new cljs.core.Keyword(null,"source-paths","source-paths",1249628206).cljs$core$IFn$_invoke$arity$1(prj);if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["src"], null);
}
});
lt.plugins.cljrefactor.prj_parser.find_sub_path = (function find_sub_path(prj_dir,path,src_dirs){return cljs.core.some.call(null,(function (p1__14657_SHARP_){if((path.indexOf(lt.objs.files.join.call(null,prj_dir,p1__14657_SHARP_)) > -1))
{return path.substring((1 + cljs.core.count.call(null,lt.objs.files.join.call(null,prj_dir,p1__14657_SHARP_))));
} else
{return null;
}
}),src_dirs);
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.resource')) {
goog.provide('lt.plugins.cljrefactor.resource');
goog.require('cljs.core');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.jump_stack');
goog.require('lt.objs.jump_stack');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.resource.__BEH__find_resource__DOT__res = (function __BEH__find_resource__DOT__res(ed,res){var vec__14669 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"resource-path","resource-path",1947209206)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__14669,0,null);var ret = cljs.core.nth.call(null,vec__14669,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{var temp__4090__auto__ = new cljs.core.Keyword(null,"resource-path","resource-path",1947209206).cljs$core$IFn$_invoke$arity$1(ret);if(cljs.core.truth_(temp__4090__auto__))
{var path = temp__4090__auto__;return lt.object.raise.call(null,lt.objs.jump_stack.jump_stack,new cljs.core.Keyword(null,"jump-stack.push!","jump-stack.push!",4063822260),ed,path,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),0,new cljs.core.Keyword(null,"ch","ch",1013907415),0], null));
} else
{return notifos.set_msg_BANG_.call(null,"Resource not found",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",1108647146),"error"], null));
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.resource","find-resource.res","lt.plugins.cljrefactor.resource/find-resource.res",2784862910),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.resource.__BEH__find_resource__DOT__res,new cljs.core.Keyword(null,"desc","desc",1016984067),"Results from find resource call to Cider middleware. Jumps to resource if found.",new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.find-resource","editor.eval.clj.result.refactor.find-resource",1522513179),null], null), null));
lt.plugins.cljrefactor.resource.get_candidate = (function get_candidate(ed){var G__14671 = lt.objs.editor.__GT_token.call(null,ed,lt.objs.editor.cursor.call(null,ed));var G__14671__$1 = (((G__14671 == null))?null:new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(G__14671));var G__14671__$2 = (((G__14671__$1 == null))?null:clojure.string.replace.call(null,G__14671__$1,/\"/,""));return G__14671__$2;
});
lt.plugins.cljrefactor.resource.__BEH__find_resource = (function __BEH__find_resource(ed){var temp__4092__auto__ = lt.plugins.cljrefactor.resource.get_candidate.call(null,ed);if(cljs.core.truth_(temp__4092__auto__))
{var cand = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"resource",new cljs.core.Keyword(null,"name","name",1017277949),cand], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.find-resource","refactor.find-resource",3763001704),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.resource","find-resource","lt.plugins.cljrefactor.resource/find-resource",4148077204),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.resource.__BEH__find_resource,new cljs.core.Keyword(null,"desc","desc",1016984067),"Try to jump to resource resolved by token at cursor. Cider Op",new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.find-resource","refactor.find-resource",3763001704),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.resource","find-symbol-next","lt.plugins.cljrefactor.resource/find-symbol-next",3289141534),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Jump to resource",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.find-resource","refactor.find-resource",3763001704));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.selector')) {
goog.provide('lt.plugins.cljrefactor.selector');
goog.require('cljs.core');
goog.require('lt.objs.files');
goog.require('lt.util.dom');
goog.require('clojure.string');
goog.require('lt.util.dom');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.selector.remove_form = (function remove_form(this$){if(cljs.core.truth_(new cljs.core.Keyword(null,"deleted","deleted",2564367243).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{return null;
} else
{lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"deleted","deleted",2564367243),true], null));
return lt.object.destroy_BANG_.call(null,this$);
}
});
lt.plugins.cljrefactor.selector.select_item = (function select_item(this$,idx,item){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"option","option",4298734567),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"value","value",1125876963),idx,new cljs.core.Keyword(null,"selected","selected",2205476365),cljs.core._EQ_.call(null,idx,0)], null),((cljs.core.map_QMARK_.call(null,item))?new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item):item)], null));var seq__14688_14706 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__14689_14707 = null;var count__14690_14708 = 0;var i__14691_14709 = 0;while(true){
if((i__14691_14709 < count__14690_14708))
{var vec__14692_14710 = cljs.core._nth.call(null,chunk__14689_14707,i__14691_14709);var ev__7926__auto___14711 = cljs.core.nth.call(null,vec__14692_14710,0,null);var func__7927__auto___14712 = cljs.core.nth.call(null,vec__14692_14710,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___14711,func__7927__auto___14712);
{
var G__14713 = seq__14688_14706;
var G__14714 = chunk__14689_14707;
var G__14715 = count__14690_14708;
var G__14716 = (i__14691_14709 + 1);
seq__14688_14706 = G__14713;
chunk__14689_14707 = G__14714;
count__14690_14708 = G__14715;
i__14691_14709 = G__14716;
continue;
}
} else
{var temp__4092__auto___14717 = cljs.core.seq.call(null,seq__14688_14706);if(temp__4092__auto___14717)
{var seq__14688_14718__$1 = temp__4092__auto___14717;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14688_14718__$1))
{var c__7246__auto___14719 = cljs.core.chunk_first.call(null,seq__14688_14718__$1);{
var G__14720 = cljs.core.chunk_rest.call(null,seq__14688_14718__$1);
var G__14721 = c__7246__auto___14719;
var G__14722 = cljs.core.count.call(null,c__7246__auto___14719);
var G__14723 = 0;
seq__14688_14706 = G__14720;
chunk__14689_14707 = G__14721;
count__14690_14708 = G__14722;
i__14691_14709 = G__14723;
continue;
}
} else
{var vec__14693_14724 = cljs.core.first.call(null,seq__14688_14718__$1);var ev__7926__auto___14725 = cljs.core.nth.call(null,vec__14693_14724,0,null);var func__7927__auto___14726 = cljs.core.nth.call(null,vec__14693_14724,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___14725,func__7927__auto___14726);
{
var G__14727 = cljs.core.next.call(null,seq__14688_14718__$1);
var G__14728 = null;
var G__14729 = 0;
var G__14730 = 0;
seq__14688_14706 = G__14727;
chunk__14689_14707 = G__14728;
count__14690_14708 = G__14729;
i__14691_14709 = G__14730;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.selector.select_form = (function select_form(this$,items){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.refactor-select","div.refactor-select",3828436988),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"select","select",4402849902),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"size","size",1017434995),cljs.core.count.call(null,items)], null),cljs.core.map_indexed.call(null,cljs.core.partial.call(null,lt.plugins.cljrefactor.selector.select_item,this$),items)], null)], null));var seq__14700_14731 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__14701_14732 = null;var count__14702_14733 = 0;var i__14703_14734 = 0;while(true){
if((i__14703_14734 < count__14702_14733))
{var vec__14704_14735 = cljs.core._nth.call(null,chunk__14701_14732,i__14703_14734);var ev__7926__auto___14736 = cljs.core.nth.call(null,vec__14704_14735,0,null);var func__7927__auto___14737 = cljs.core.nth.call(null,vec__14704_14735,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___14736,func__7927__auto___14737);
{
var G__14738 = seq__14700_14731;
var G__14739 = chunk__14701_14732;
var G__14740 = count__14702_14733;
var G__14741 = (i__14703_14734 + 1);
seq__14700_14731 = G__14738;
chunk__14701_14732 = G__14739;
count__14702_14733 = G__14740;
i__14703_14734 = G__14741;
continue;
}
} else
{var temp__4092__auto___14742 = cljs.core.seq.call(null,seq__14700_14731);if(temp__4092__auto___14742)
{var seq__14700_14743__$1 = temp__4092__auto___14742;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14700_14743__$1))
{var c__7246__auto___14744 = cljs.core.chunk_first.call(null,seq__14700_14743__$1);{
var G__14745 = cljs.core.chunk_rest.call(null,seq__14700_14743__$1);
var G__14746 = c__7246__auto___14744;
var G__14747 = cljs.core.count.call(null,c__7246__auto___14744);
var G__14748 = 0;
seq__14700_14731 = G__14745;
chunk__14701_14732 = G__14746;
count__14702_14733 = G__14747;
i__14703_14734 = G__14748;
continue;
}
} else
{var vec__14705_14749 = cljs.core.first.call(null,seq__14700_14743__$1);var ev__7926__auto___14750 = cljs.core.nth.call(null,vec__14705_14749,0,null);var func__7927__auto___14751 = cljs.core.nth.call(null,vec__14705_14749,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___14750,func__7927__auto___14751);
{
var G__14752 = cljs.core.next.call(null,seq__14700_14743__$1);
var G__14753 = null;
var G__14754 = 0;
var G__14755 = 0;
seq__14700_14731 = G__14752;
chunk__14701_14732 = G__14753;
count__14702_14733 = G__14754;
i__14703_14734 = G__14755;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.selector.on_keydown = (function on_keydown(this$,ed,ev){var kc = ev.keyCode;var el = ev.target;if((cljs.core._EQ_.call(null,13,kc)) || (cljs.core._EQ_.call(null,9,kc)))
{lt.util.dom.stop_propagation.call(null,ev);
lt.util.dom.prevent.call(null,ev);
var idx = lt.util.dom.$.call(null,"option:checked",el).value;var item = cljs.core.nth.call(null,cljs.core.vec.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))),idx);var the_ed = new cljs.core.Keyword(null,"ed","ed",1013907473).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));var beh = new cljs.core.Keyword(null,"behavior","behavior",2524816836).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));lt.object.raise.call(null,the_ed,beh,item);
return lt.plugins.cljrefactor.selector.remove_form.call(null,this$);
} else
{if(cljs.core._EQ_.call(null,27,kc))
{lt.util.dom.stop_propagation.call(null,ev);
lt.util.dom.prevent.call(null,ev);
lt.plugins.cljrefactor.selector.remove_form.call(null,this$);
return lt.objs.editor.focus.call(null,ed);
} else
{return null;
}
}
});
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.selector","refactor-selector-form","lt.plugins.cljrefactor.selector/refactor-selector-form",2244237706),new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"click","click",1108654330),null,new cljs.core.Keyword(null,"clear!","clear!",3951036134),null], null), null),new cljs.core.Keyword(null,"tags","tags",1017456523),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"inline.refactor.selector.form","inline.refactor.selector.form",3032487982),null,new cljs.core.Keyword(null,"inline","inline",4124874251),null], null), null),new cljs.core.Keyword(null,"init","init",1017141378),(function (this$,info){var temp__4092__auto__ = lt.objs.editor.__GT_cm_ed.call(null,new cljs.core.Keyword(null,"ed","ed",1013907473).cljs$core$IFn$_invoke$arity$1(info));if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;lt.object.merge_BANG_.call(null,this$,info);
var content = lt.plugins.cljrefactor.selector.select_form.call(null,this$,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(info));lt.util.dom.on.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"select","select",4402849902),content),"blur",((function (content,ed,temp__4092__auto__){
return (function (){return lt.plugins.cljrefactor.selector.remove_form.call(null,this$);
});})(content,ed,temp__4092__auto__))
);
lt.util.dom.on.call(null,content,"keydown",cljs.core.partial.call(null,lt.plugins.cljrefactor.selector.on_keydown,this$,ed));
lt.util.dom.val.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"option","option",4298734567),content),0);
CodeMirror.positionHint(ed,content,new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"pos","pos",1014015430).cljs$core$IFn$_invoke$arity$1(info)));
lt.util.dom.focus.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"select","select",4402849902),content));
return content;
} else
{return null;
}
}));
lt.plugins.cljrefactor.selector.make = (function make(info){return lt.object.create.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.selector","refactor-selector-form","lt.plugins.cljrefactor.selector/refactor-selector-form",2244237706),info);
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.completer')) {
goog.provide('lt.plugins.cljrefactor.completer');
goog.require('cljs.core');
goog.require('lt.objs.files');
goog.require('lt.plugins.auto_complete');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.auto_complete');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('lt.plugins.clojure');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.console');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('lt.plugins.clojure');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.completer.complete_op = (function complete_op(ed,sym,form){return lt.plugins.cljrefactor.middleware.create_ns_op.call(null,ed,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"complete",new cljs.core.Keyword(null,"symbol","symbol",4421347594),sym], null),(cljs.core.truth_(form)?null:null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"context","context",1965435169),form], null)));
});
lt.plugins.cljrefactor.completer.get_completer_form_ctx = (function get_completer_form_ctx(ed,token){if(cljs.core.truth_(token))
{var temp__4092__auto__ = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed);if(cljs.core.truth_(temp__4092__auto__))
{var form = temp__4092__auto__;return lt.plugins.cljrefactor.util.replace_token.call(null,new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"loc","loc",1014011570).cljs$core$IFn$_invoke$arity$1(token)) - new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form))),new cljs.core.Keyword(null,"start","start",1123661780),new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,"end","end",1014004813),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(token)], null),"__prefix__");
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.completer.create_hints = (function create_hints(completions){return cljs.core.map.call(null,(function (p1__8356_SHARP_){return {"text": new cljs.core.Keyword(null,"candidate","candidate",1522567413).cljs$core$IFn$_invoke$arity$1(p1__8356_SHARP_), "completion": new cljs.core.Keyword(null,"candidate","candidate",1522567413).cljs$core$IFn$_invoke$arity$1(p1__8356_SHARP_)};
}),completions);
});
lt.plugins.cljrefactor.completer.__BEH__completer__DOT__res = (function __BEH__completer__DOT__res(ed,res){var vec__8358 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"completions","completions",1416465289)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__8358,0,null);var ret = cljs.core.nth.call(null,vec__8358,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{var temp__4092__auto___8371 = new cljs.core.Keyword(null,"completions","completions",1416465289).cljs$core$IFn$_invoke$arity$1(ret);if(cljs.core.truth_(temp__4092__auto___8371))
{var completions_8372 = temp__4092__auto___8371;lt.object.merge_BANG_.call(null,ed,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.completer","hints","lt.plugins.cljrefactor.completer/hints",3437584730),lt.plugins.cljrefactor.completer.create_hints.call(null,completions_8372)], null));
lt.object.raise.call(null,lt.plugins.auto_complete.hinter,new cljs.core.Keyword(null,"refresh!","refresh!",4597922840));
} else
{}
}
return lt.objs.notifos.done_working.call(null);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.completer","completer.res","lt.plugins.cljrefactor.completer/completer.res",1863143577),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.completer.__BEH__completer__DOT__res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.complete","editor.eval.clj.result.refactor.complete",3419860036),null], null), null));
lt.plugins.cljrefactor.completer.__BEH__completer__DOT__start = (function __BEH__completer__DOT__start(ed){if(cljs.core.truth_((function (){var G__8360 = cljs.core.deref.call(null,ed);var G__8360__$1 = (((G__8360 == null))?null:new cljs.core.Keyword(null,"client","client",3951159101).cljs$core$IFn$_invoke$arity$1(G__8360));var G__8360__$2 = (((G__8360__$1 == null))?null:new cljs.core.Keyword(null,"default","default",2558708147).cljs$core$IFn$_invoke$arity$1(G__8360__$1));var G__8360__$3 = (((G__8360__$2 == null))?null:cljs.core.deref.call(null,G__8360__$2));return G__8360__$3;
})()))
{var pos = lt.objs.editor.__GT_cursor.call(null,ed);var token = lt.plugins.clojure.find_symbol_at_cursor.call(null,ed);var form = lt.plugins.cljrefactor.completer.get_completer_form_ctx.call(null,ed,token);var sym = new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(token);if(cljs.core.truth_(cljs.core.re_find.call(null,/\"/,sym)))
{return null;
} else
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.completer.complete_op.call(null,ed,sym,form),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.complete","refactor.complete",4742679511),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
}
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.completer","completer.start","lt.plugins.cljrefactor.completer/completer.start",2674085791),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.completer.__BEH__completer__DOT__start,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.complete","refactor.complete",4742679511),null], null), null),new cljs.core.Keyword(null,"debounce","debounce",1556599227),100);
lt.plugins.cljrefactor.completer.__BEH__use_local_hints = (function __BEH__use_local_hints(ed,hints,token){var tok = new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(lt.plugins.clojure.find_symbol_at_cursor.call(null,ed));if(!((cljs.core.seq.call(null,tok)) && (!(lt.plugins.cljrefactor.util.multiple_cursors_QMARK_.call(null,ed))) && (cljs.core.not.call(null,cljs.core.re_find.call(null,/\"/,tok)))))
{lt.object.merge_BANG_.call(null,ed,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.completer","token","lt.plugins.cljrefactor.completer/token",3417396779),null], null));
return hints;
} else
{if(cljs.core.not_EQ_.call(null,tok,new cljs.core.Keyword("lt.plugins.cljrefactor.completer","token","lt.plugins.cljrefactor.completer/token",3417396779).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed))))
{lt.object.merge_BANG_.call(null,ed,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.completer","token","lt.plugins.cljrefactor.completer/token",3417396779),tok], null));
lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.complete","refactor.complete",4742679511));
} else
{}
var temp__4090__auto__ = new cljs.core.Keyword("lt.plugins.cljrefactor.completer","hints","lt.plugins.cljrefactor.completer/hints",3437584730).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed));if(cljs.core.truth_(temp__4090__auto__))
{var clj_hints = temp__4090__auto__;return cljs.core.concat.call(null,clj_hints,hints);
} else
{return hints;
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.completer","use-local-hints","lt.plugins.cljrefactor.completer/use-local-hints",1942037826),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.completer.__BEH__use_local_hints,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"hints+","hints+",4091697745),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.completer","force-autocomplete","lt.plugins.cljrefactor.completer/force-autocomplete",994800796),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Force autocomplete",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.complete","refactor.complete",4742679511));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('quiescent')) {
goog.provide('quiescent');
goog.require('cljs.core');
/**
* Utility function. Takes an object which is (possibly) a
* ClojureScript map. If the value is a ClojureScript map, convert it
* to a JavaScript properties object. Otherwise, return the argument
* unchanged.
*/
quiescent.js_props = (function js_props(obj){if(cljs.core.map_QMARK_.call(null,obj))
{var o = (function (){var obj14584 = {};return obj14584;
})();var seq__14585_14598 = cljs.core.seq.call(null,obj);var chunk__14586_14599 = null;var count__14587_14600 = 0;var i__14588_14601 = 0;while(true){
if((i__14588_14601 < count__14587_14600))
{var vec__14589_14602 = cljs.core._nth.call(null,chunk__14586_14599,i__14588_14601);var k_14603 = cljs.core.nth.call(null,vec__14589_14602,0,null);var v_14604 = cljs.core.nth.call(null,vec__14589_14602,1,null);(o[cljs.core.name.call(null,k_14603)] = js_props.call(null,v_14604));
{
var G__14605 = seq__14585_14598;
var G__14606 = chunk__14586_14599;
var G__14607 = count__14587_14600;
var G__14608 = (i__14588_14601 + 1);
seq__14585_14598 = G__14605;
chunk__14586_14599 = G__14606;
count__14587_14600 = G__14607;
i__14588_14601 = G__14608;
continue;
}
} else
{var temp__4092__auto___14609 = cljs.core.seq.call(null,seq__14585_14598);if(temp__4092__auto___14609)
{var seq__14585_14610__$1 = temp__4092__auto___14609;if(cljs.core.chunked_seq_QMARK_.call(null,seq__14585_14610__$1))
{var c__7246__auto___14611 = cljs.core.chunk_first.call(null,seq__14585_14610__$1);{
var G__14612 = cljs.core.chunk_rest.call(null,seq__14585_14610__$1);
var G__14613 = c__7246__auto___14611;
var G__14614 = cljs.core.count.call(null,c__7246__auto___14611);
var G__14615 = 0;
seq__14585_14598 = G__14612;
chunk__14586_14599 = G__14613;
count__14587_14600 = G__14614;
i__14588_14601 = G__14615;
continue;
}
} else
{var vec__14590_14616 = cljs.core.first.call(null,seq__14585_14610__$1);var k_14617 = cljs.core.nth.call(null,vec__14590_14616,0,null);var v_14618 = cljs.core.nth.call(null,vec__14590_14616,1,null);(o[cljs.core.name.call(null,k_14617)] = js_props.call(null,v_14618));
{
var G__14619 = cljs.core.next.call(null,seq__14585_14610__$1);
var G__14620 = null;
var G__14621 = 0;
var G__14622 = 0;
seq__14585_14598 = G__14619;
chunk__14586_14599 = G__14620;
count__14587_14600 = G__14621;
i__14588_14601 = G__14622;
continue;
}
}
} else
{}
}
break;
}
return o;
} else
{return obj;
}
});
/**
* Within a component render function, will be bound to the raw
* ReactJS component.
*/
quiescent._STAR_component_STAR_ = null;
/**
* Return a function that will return a ReactJS component, using the
* provided function as the implementation for React's 'render' method
* on the component.
* 
* The given render function should take a single immutable value as
* its first argument, and return a single ReactJS component.
* Additional arguments to the component constructor will be passed as
* additional arguments to the render function whenever it is invoked,
* but will *not* be included in any calculations regarding whether the
* component should re-render.
*/
quiescent.component = (function component(renderer){var react_component = React.createClass({"render": (function (){var this$ = this;var _STAR_component_STAR_14592 = quiescent._STAR_component_STAR_;try{quiescent._STAR_component_STAR_ = this$;
return cljs.core.apply.call(null,renderer,(this$.props["value"]),(this$.props["statics"]));
}finally {quiescent._STAR_component_STAR_ = _STAR_component_STAR_14592;
}}), "shouldComponentUpdate": (function (next_props,_){var this$ = this;return cljs.core.not_EQ_.call(null,(this$.props["value"]),(next_props["value"]));
})});return ((function (react_component){
return (function() { 
var G__14623__delegate = function (value,static_args){return react_component.call(null,{"statics": static_args, "value": value});
};
var G__14623 = function (value,var_args){
var static_args = null;if (arguments.length > 1) {
  static_args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return G__14623__delegate.call(this,value,static_args);};
G__14623.cljs$lang$maxFixedArity = 1;
G__14623.cljs$lang$applyTo = (function (arglist__14624){
var value = cljs.core.first(arglist__14624);
var static_args = cljs.core.rest(arglist__14624);
return G__14623__delegate(value,static_args);
});
G__14623.cljs$core$IFn$_invoke$arity$variadic = G__14623__delegate;
return G__14623;
})()
;
;})(react_component))
});
/**
* Wrapper component used to mix-in lifecycle access
*/
quiescent.WrapperComponent = React.createClass({"componentWillUnmount": (function (){var this$ = this;var temp__4092__auto__ = (this$.props["onWillUnmount"]);if(cljs.core.truth_(temp__4092__auto__))
{var f = temp__4092__auto__;var _STAR_component_STAR_14597 = quiescent._STAR_component_STAR_;try{quiescent._STAR_component_STAR_ = this$;
return f.call(null);
}finally {quiescent._STAR_component_STAR_ = _STAR_component_STAR_14597;
}} else
{return null;
}
}), "componentWillUpdate": (function (_,___$1){var this$ = this;var temp__4092__auto__ = (this$.props["onWillUpdate"]);if(cljs.core.truth_(temp__4092__auto__))
{var f = temp__4092__auto__;var _STAR_component_STAR_14596 = quiescent._STAR_component_STAR_;try{quiescent._STAR_component_STAR_ = this$;
return f.call(null);
}finally {quiescent._STAR_component_STAR_ = _STAR_component_STAR_14596;
}} else
{return null;
}
}), "componentWillMount": (function (){var this$ = this;var temp__4092__auto__ = (this$.props["onWillMount"]);if(cljs.core.truth_(temp__4092__auto__))
{var f = temp__4092__auto__;var _STAR_component_STAR_14595 = quiescent._STAR_component_STAR_;try{quiescent._STAR_component_STAR_ = this$;
return f.call(null);
}finally {quiescent._STAR_component_STAR_ = _STAR_component_STAR_14595;
}} else
{return null;
}
}), "componentDidMount": (function (){var this$ = this;var temp__4092__auto__ = (this$.props["onMount"]);if(cljs.core.truth_(temp__4092__auto__))
{var f = temp__4092__auto__;var _STAR_component_STAR_14594 = quiescent._STAR_component_STAR_;try{quiescent._STAR_component_STAR_ = this$;
return f.call(null,this$.getDOMNode());
}finally {quiescent._STAR_component_STAR_ = _STAR_component_STAR_14594;
}} else
{return null;
}
}), "componentDidUpdate": (function (prev_props,prev_state){var this$ = this;var temp__4092__auto__ = (this$.props["onUpdate"]);if(cljs.core.truth_(temp__4092__auto__))
{var f = temp__4092__auto__;var _STAR_component_STAR_14593 = quiescent._STAR_component_STAR_;try{quiescent._STAR_component_STAR_ = this$;
return f.call(null,this$.getDOMNode());
}finally {quiescent._STAR_component_STAR_ = _STAR_component_STAR_14593;
}} else
{return null;
}
}), "render": (function (){var this$ = this;return (this$.props["wrappee"]);
})});
/**
* Create a wrapper function for a compoment implementing multiple
* lifecycle functions. Lifecycle functions are specified as any number
* of additional key-value pairs passed as arguments to this function.
* 
* Valid keys and values include:
* 
* :onUpdate - will call the provided function,
* passing the rendered DOM node as a single arg
* :onMount - will call the provided function,
* passing the rendered DOM node as a single arg
* :onWillUpdate - will call the provided function with no arguments
* :onWillMount - will call the provided function with no arguments
* :onWillUnmount - will call the provided function with no arguments
* @param {...*} var_args
*/
quiescent.wrapper = (function() { 
var wrapper__delegate = function (child,kvs){var props = quiescent.js_props.call(null,cljs.core.apply.call(null,cljs.core.array_map,new cljs.core.Keyword(null,"wrappee","wrappee",2609412088),child,kvs));var temp__4092__auto___14625 = (child.props["key"]);if(cljs.core.truth_(temp__4092__auto___14625))
{var key_14626 = temp__4092__auto___14625;(props["key"] = key_14626);
} else
{}
return quiescent.WrapperComponent.call(null,props);
};
var wrapper = function (child,var_args){
var kvs = null;if (arguments.length > 1) {
  kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1),0);} 
return wrapper__delegate.call(this,child,kvs);};
wrapper.cljs$lang$maxFixedArity = 1;
wrapper.cljs$lang$applyTo = (function (arglist__14627){
var child = cljs.core.first(arglist__14627);
var kvs = cljs.core.rest(arglist__14627);
return wrapper__delegate(child,kvs);
});
wrapper.cljs$core$IFn$_invoke$arity$variadic = wrapper__delegate;
return wrapper;
})()
;
/**
* Wrap a component, specifying a function to be called on the
* componentDidUpdate lifecycle event.
* 
* The function will be passed the rendered DOM node.
*/
quiescent.on_update = (function on_update(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onUpdate","onUpdate",2573468410),f);
});
/**
* Wrap a component, specifying a function to be called on the
* componentDidMount lifecycle event.
* 
* The function will be passed the rendered DOM node.
*/
quiescent.on_mount = (function on_mount(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onMount","onMount",3966305516),f);
});
/**
* Wrap a component, specifying a function to be called on the
* componentDidMount AND the componentDidUpdate lifecycle events.
* 
* The function will be passed the rendered DOM node.
*/
quiescent.on_render = (function on_render(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onMount","onMount",3966305516),f,new cljs.core.Keyword(null,"onUpdate","onUpdate",2573468410),f);
});
/**
* Wrap a component, specifying a function to be called on the
* componentWillMount lifecycle event.
* 
* The function will be called with no arguments.
*/
quiescent.on_will_mount = (function on_will_mount(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onWillMount","onWillMount",3483492282),f);
});
/**
* Wrap a component, specifying a function to be called on the
* componentWillUpdate lifecycle event.
* 
* The function will be called with no arguments.
*/
quiescent.on_will_update = (function on_will_update(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onWillUpdate","onWillUpdate",4786127340),f);
});
/**
* Wrap a component, specifying a function to be called on the
* componentWillMount AND the componentWillUpdate lifecycle events.
* 
* The function will be called with no arguments.
*/
quiescent.on_will_render = (function on_will_render(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onWillMount","onWillMount",3483492282),f,new cljs.core.Keyword(null,"onWillUpdate","onWillUpdate",4786127340),f);
});
/**
* Wrap a component, specifying a function to be called on the
* componentWillUnmount lifecycle event.
* 
* The function will be called with no arguments.
*/
quiescent.on_will_unmount = (function on_will_unmount(child,f){return quiescent.wrapper.call(null,child,new cljs.core.Keyword(null,"onWillUnmount","onWillUnmount",1940175105),f);
});
/**
* Given a ReactJS component, immediately render it, rooted to the
* specified DOM node.
*/
quiescent.render = (function render(component,node){return React.renderComponent(component,node);
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.artifact-version')) {
goog.provide('lt.plugins.cljrefactor.artifact_version');
goog.require('cljs.core');
goog.require('lt.util.js');
goog.require('lt.objs.files');
goog.require('lt.util.js');
goog.require('lt.util.dom');
goog.require('clojure.string');
goog.require('lt.util.dom');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.artifact_version.select_item = (function select_item(idx,item){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"option","option",4298734567),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"value","value",1125876963),item,new cljs.core.Keyword(null,"selected","selected",2205476365),cljs.core._EQ_.call(null,idx,0)], null),item], null));var seq__8225_8253 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__8226_8254 = null;var count__8227_8255 = 0;var i__8228_8256 = 0;while(true){
if((i__8228_8256 < count__8227_8255))
{var vec__8229_8257 = cljs.core._nth.call(null,chunk__8226_8254,i__8228_8256);var ev__7926__auto___8258 = cljs.core.nth.call(null,vec__8229_8257,0,null);var func__7927__auto___8259 = cljs.core.nth.call(null,vec__8229_8257,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___8258,func__7927__auto___8259);
{
var G__8260 = seq__8225_8253;
var G__8261 = chunk__8226_8254;
var G__8262 = count__8227_8255;
var G__8263 = (i__8228_8256 + 1);
seq__8225_8253 = G__8260;
chunk__8226_8254 = G__8261;
count__8227_8255 = G__8262;
i__8228_8256 = G__8263;
continue;
}
} else
{var temp__4092__auto___8264 = cljs.core.seq.call(null,seq__8225_8253);if(temp__4092__auto___8264)
{var seq__8225_8265__$1 = temp__4092__auto___8264;if(cljs.core.chunked_seq_QMARK_.call(null,seq__8225_8265__$1))
{var c__7246__auto___8266 = cljs.core.chunk_first.call(null,seq__8225_8265__$1);{
var G__8267 = cljs.core.chunk_rest.call(null,seq__8225_8265__$1);
var G__8268 = c__7246__auto___8266;
var G__8269 = cljs.core.count.call(null,c__7246__auto___8266);
var G__8270 = 0;
seq__8225_8253 = G__8267;
chunk__8226_8254 = G__8268;
count__8227_8255 = G__8269;
i__8228_8256 = G__8270;
continue;
}
} else
{var vec__8230_8271 = cljs.core.first.call(null,seq__8225_8265__$1);var ev__7926__auto___8272 = cljs.core.nth.call(null,vec__8230_8271,0,null);var func__7927__auto___8273 = cljs.core.nth.call(null,vec__8230_8271,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___8272,func__7927__auto___8273);
{
var G__8274 = cljs.core.next.call(null,seq__8225_8265__$1);
var G__8275 = null;
var G__8276 = 0;
var G__8277 = 0;
seq__8225_8253 = G__8274;
chunk__8226_8254 = G__8275;
count__8227_8255 = G__8276;
i__8228_8256 = G__8277;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.artifact_version.select_form = (function select_form(this$,items){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.artifact-versions","div.artifact-versions",2029510539),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"select","select",4402849902),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"size","size",1017434995),cljs.core.count.call(null,items)], null),cljs.core.map_indexed.call(null,lt.plugins.cljrefactor.artifact_version.select_item,items)], null)], null));var seq__8237_8278 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__8238_8279 = null;var count__8239_8280 = 0;var i__8240_8281 = 0;while(true){
if((i__8240_8281 < count__8239_8280))
{var vec__8241_8282 = cljs.core._nth.call(null,chunk__8238_8279,i__8240_8281);var ev__7926__auto___8283 = cljs.core.nth.call(null,vec__8241_8282,0,null);var func__7927__auto___8284 = cljs.core.nth.call(null,vec__8241_8282,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___8283,func__7927__auto___8284);
{
var G__8285 = seq__8237_8278;
var G__8286 = chunk__8238_8279;
var G__8287 = count__8239_8280;
var G__8288 = (i__8240_8281 + 1);
seq__8237_8278 = G__8285;
chunk__8238_8279 = G__8286;
count__8239_8280 = G__8287;
i__8240_8281 = G__8288;
continue;
}
} else
{var temp__4092__auto___8289 = cljs.core.seq.call(null,seq__8237_8278);if(temp__4092__auto___8289)
{var seq__8237_8290__$1 = temp__4092__auto___8289;if(cljs.core.chunked_seq_QMARK_.call(null,seq__8237_8290__$1))
{var c__7246__auto___8291 = cljs.core.chunk_first.call(null,seq__8237_8290__$1);{
var G__8292 = cljs.core.chunk_rest.call(null,seq__8237_8290__$1);
var G__8293 = c__7246__auto___8291;
var G__8294 = cljs.core.count.call(null,c__7246__auto___8291);
var G__8295 = 0;
seq__8237_8278 = G__8292;
chunk__8238_8279 = G__8293;
count__8239_8280 = G__8294;
i__8240_8281 = G__8295;
continue;
}
} else
{var vec__8242_8296 = cljs.core.first.call(null,seq__8237_8290__$1);var ev__7926__auto___8297 = cljs.core.nth.call(null,vec__8242_8296,0,null);var func__7927__auto___8298 = cljs.core.nth.call(null,vec__8242_8296,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___8297,func__7927__auto___8298);
{
var G__8299 = cljs.core.next.call(null,seq__8237_8290__$1);
var G__8300 = null;
var G__8301 = 0;
var G__8302 = 0;
seq__8237_8278 = G__8299;
chunk__8238_8279 = G__8300;
count__8239_8280 = G__8301;
i__8240_8281 = G__8302;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.artifact_version.remove_form = (function remove_form(this$){lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"clear","clear",1108650431));
return lt.object.destroy_BANG_.call(null,this$);
});
lt.plugins.cljrefactor.artifact_version.on_keydown = (function on_keydown(this$,ed,ev){var kc = ev.keyCode;var el = ev.target;if((cljs.core._EQ_.call(null,13,kc)) || (cljs.core._EQ_.call(null,9,kc)))
{lt.util.dom.stop_propagation.call(null,ev);
lt.util.dom.prevent.call(null,ev);
var version = [cljs.core.str("\""),cljs.core.str(lt.util.dom.$.call(null,"option:checked",el).innerHTML),cljs.core.str("\"")].join('');lt.plugins.cljrefactor.artifact_version.remove_form.call(null,this$);
lt.objs.editor.insert_at_cursor.call(null,ed,version);
return lt.objs.editor.focus.call(null,ed);
} else
{if(cljs.core._EQ_.call(null,27,kc))
{lt.util.dom.stop_propagation.call(null,ev);
lt.util.dom.prevent.call(null,ev);
lt.plugins.cljrefactor.artifact_version.remove_form.call(null,this$);
return lt.objs.editor.focus.call(null,ed);
} else
{return null;
}
}
});
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifact-version","artifact-select-form","lt.plugins.cljrefactor.artifact-version/artifact-select-form",1608526199),new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"click","click",1108654330),null,new cljs.core.Keyword(null,"clear!","clear!",3951036134),null], null), null),new cljs.core.Keyword(null,"tags","tags",1017456523),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"inline.artifact.select.form","inline.artifact.select.form",688625665),null,new cljs.core.Keyword(null,"inline","inline",4124874251),null], null), null),new cljs.core.Keyword(null,"init","init",1017141378),(function (this$,info){var temp__4092__auto__ = lt.objs.editor.__GT_cm_ed.call(null,new cljs.core.Keyword(null,"ed","ed",1013907473).cljs$core$IFn$_invoke$arity$1(info));if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;var content = lt.plugins.cljrefactor.artifact_version.select_form.call(null,this$,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(info));var line = new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"pos","pos",1014015430).cljs$core$IFn$_invoke$arity$1(info));lt.object.merge_BANG_.call(null,this$,cljs.core.assoc.call(null,info,new cljs.core.Keyword(null,"mark","mark",1017248319),lt.objs.editor.bookmark.call(null,ed,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),line,new cljs.core.Keyword(null,"ch","ch",1013907415),new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"pos","pos",1014015430).cljs$core$IFn$_invoke$arity$1(info))], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"widget","widget",4520824246),content,new cljs.core.Keyword(null,"insertLeft","insertLeft",1979827666),false], null))));
lt.util.dom.on.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"select","select",4402849902),content),"blur",((function (content,line,ed,temp__4092__auto__){
return (function (ev){new cljs.core.Keyword(null,"mark","mark",1017248319).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)).clear();
return lt.util.js.wait.call(null,0,((function (content,line,ed,temp__4092__auto__){
return (function (){return lt.plugins.cljrefactor.artifact_version.remove_form.call(null,this$);
});})(content,line,ed,temp__4092__auto__))
);
});})(content,line,ed,temp__4092__auto__))
);
lt.util.dom.on.call(null,content,"keydown",cljs.core.partial.call(null,lt.plugins.cljrefactor.artifact_version.on_keydown,this$,ed));
lt.util.dom.val.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"option","option",4298734567),content),0);
lt.util.dom.focus.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"select","select",4402849902),content));
return content;
} else
{return null;
}
}));
lt.plugins.cljrefactor.artifact_version.make = (function make(info){return lt.object.create.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifact-version","artifact-select-form","lt.plugins.cljrefactor.artifact-version/artifact-select-form",1608526199),info);
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.artifacts')) {
goog.provide('lt.plugins.cljrefactor.artifacts');
goog.require('cljs.core');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.plugins.auto_complete');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.plugins.cljrefactor.artifact_version');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.plugins.cljrefactor.selector');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.plugins.auto_complete');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.artifact_version');
goog.require('lt.objs.editor');
goog.require('lt.plugins.cljrefactor.selector');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.console');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.artifacts.artifact_version_list = (function artifact_version_list(artifact){return lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"artifact-versions",new cljs.core.Keyword(null,"artifact","artifact",4080073028),artifact], null));
});
lt.plugins.cljrefactor.artifacts.__BEH__trigger_artifact_version_hints = (function __BEH__trigger_artifact_version_hints(ed,artifact){var temp__4092__auto__ = new cljs.core.Keyword(null,"default","default",2558708147).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"client","client",3951159101).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));if(cljs.core.truth_(temp__4092__auto__))
{var default_client = temp__4092__auto__;lt.objs.notifos.set_msg_BANG_.call(null,[cljs.core.str("Retrieving clojars artifact versions")].join(''));
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.artifacts.artifact_version_list.call(null,artifact),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.artifact-versions","refactor.artifact-versions",4271851004),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","trigger-artifact-version-hints","lt.plugins.cljrefactor.artifacts/trigger-artifact-version-hints",4292678457),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__trigger_artifact_version_hints,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"artifact-version.hints.update!","artifact-version.hints.update!",714019447),null], null), null),new cljs.core.Keyword(null,"debounce","debounce",1556599227),100);
lt.plugins.cljrefactor.artifacts.__BEH__artifact_version_selected = (function __BEH__artifact_version_selected(ed,version){lt.objs.editor.insert_at_cursor.call(null,ed,[cljs.core.str("\""),cljs.core.str(version),cljs.core.str("\"")].join(''));
return lt.objs.editor.focus.call(null,ed);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","artifact-version-selected","lt.plugins.cljrefactor.artifacts/artifact-version-selected",1534253431),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__artifact_version_selected,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"artifact-version.selected","artifact-version.selected",2838678782),null], null), null));
lt.plugins.cljrefactor.artifacts.__BEH__finish_artifact_version_hints = (function __BEH__finish_artifact_version_hints(ed,res){var vec__15199 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"versions","versions",3323818509)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__15199,0,null);var ret = cljs.core.nth.call(null,vec__15199,1,null);var vs = (cljs.core.truth_(ok_QMARK_)?new cljs.core.Keyword(null,"versions","versions",3323818509).cljs$core$IFn$_invoke$arity$1(ret):null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret));
} else
{if((cljs.core.count.call(null,vs) > 1))
{return lt.plugins.cljrefactor.selector.make.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"ed","ed",1013907473),ed,new cljs.core.Keyword(null,"behavior","behavior",2524816836),new cljs.core.Keyword(null,"artifact-version.selected","artifact-version.selected",2838678782),new cljs.core.Keyword(null,"items","items",1114430258),vs,new cljs.core.Keyword(null,"pos","pos",1014015430),lt.objs.editor.__GT_cursor.call(null,ed)], null));
} else
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"artifact-version.selected","artifact-version.selected",2838678782),cljs.core.first.call(null,vs));
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","finish-artifact-version-hints","lt.plugins.cljrefactor.artifacts/finish-artifact-version-hints",1230982782),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__finish_artifact_version_hints,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.artifact-versions","editor.eval.clj.result.refactor.artifact-versions",923340847),null], null), null));
lt.plugins.cljrefactor.artifacts.artifact_list = (function artifact_list(){return lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"op","op",1013907795),"artifact-list"], null));
});
lt.plugins.cljrefactor.artifacts.sel_cb = (function sel_cb(ed,fun,c){var artifact = cljs.core.get.call(null,cljs.core.js__GT_clj.call(null,c),"completion");fun.call(null,[cljs.core.str(artifact),cljs.core.str(" ")].join(''));
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"artifact-version.hints.update!","artifact-version.hints.update!",714019447),artifact);
});
lt.plugins.cljrefactor.artifacts.create_artifact_hints = (function create_artifact_hints(ed,artifacts){return cljs.core.flatten.call(null,cljs.core.map.call(null,(function (p1__15200_SHARP_){return cljs.core.vec.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [{"item": p1__15200_SHARP_, "completion": p1__15200_SHARP_, "text": p1__15200_SHARP_, "select": cljs.core.partial.call(null,lt.plugins.cljrefactor.artifacts.sel_cb,ed)}], null));
}),artifacts));
});
lt.plugins.cljrefactor.artifacts.__BEH__finish_artifact_hints = (function __BEH__finish_artifact_hints(ed,res){var vec__15202 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"artifacts","artifacts",1575856211)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__15202,0,null);var ret = cljs.core.nth.call(null,vec__15202,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret));
} else
{lt.object.update_BANG_.call(null,lt.plugins.cljrefactor.artifacts.refactor_artifacts,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","fetching-deps","lt.plugins.cljrefactor.artifacts/fetching-deps",3366334705)], null),((function (vec__15202,ok_QMARK_,ret){
return (function (_){return false;
});})(vec__15202,ok_QMARK_,ret))
);
lt.object.merge_BANG_.call(null,lt.plugins.cljrefactor.artifacts.refactor_artifacts,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","artifacts","lt.plugins.cljrefactor.artifacts/artifacts",4637854729),new cljs.core.Keyword(null,"artifacts","artifacts",1575856211).cljs$core$IFn$_invoke$arity$1(ret)], null));
return lt.object.raise.call(null,lt.plugins.auto_complete.hinter,new cljs.core.Keyword(null,"refresh!","refresh!",4597922840));
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","finish-artifact-hints","lt.plugins.cljrefactor.artifacts/finish-artifact-hints",4419636855),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__finish_artifact_hints,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.artifacts","editor.eval.clj.result.refactor.artifacts",4548973530),null], null), null));
lt.plugins.cljrefactor.artifacts.__BEH__trigger_artifact_hints = (function __BEH__trigger_artifact_hints(this$,ed){var temp__4092__auto__ = new cljs.core.Keyword(null,"default","default",2558708147).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"client","client",3951159101).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));if(cljs.core.truth_(temp__4092__auto__))
{var default_client = temp__4092__auto__;if(cljs.core.truth_(new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","fetching-deps","lt.plugins.cljrefactor.artifacts/fetching-deps",3366334705).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{return null;
} else
{lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","fetching-deps","lt.plugins.cljrefactor.artifacts/fetching-deps",3366334705)], null),((function (default_client,temp__4092__auto__){
return (function (_){return true;
});})(default_client,temp__4092__auto__))
);
lt.objs.notifos.set_msg_BANG_.call(null,"Retrieving clojars artifacts");
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.artifacts.artifact_list.call(null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.artifacts","refactor.artifacts",2606704295),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
}
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","trigger-artifact-hints","lt.plugins.cljrefactor.artifacts/trigger-artifact-hints",1083074350),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__trigger_artifact_hints,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"artifact.hints.update!","artifact.hints.update!",2088367020),null], null), null),new cljs.core.Keyword(null,"debounce","debounce",1556599227),500);
lt.plugins.cljrefactor.artifacts.__BEH__artifact_hints = (function __BEH__artifact_hints(ed,hints,token){lt.object.merge_BANG_.call(null,ed,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","token","lt.plugins.cljrefactor.artifacts/token",4450683105),token], null));
if(cljs.core.truth_(new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","artifacts","lt.plugins.cljrefactor.artifacts/artifacts",4637854729).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.plugins.cljrefactor.artifacts.refactor_artifacts))))
{} else
{lt.object.raise.call(null,lt.plugins.cljrefactor.artifacts.refactor_artifacts,new cljs.core.Keyword(null,"artifact.hints.update!","artifact.hints.update!",2088367020),ed);
}
var temp__4090__auto__ = new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","artifacts","lt.plugins.cljrefactor.artifacts/artifacts",4637854729).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.plugins.cljrefactor.artifacts.refactor_artifacts));if(cljs.core.truth_(temp__4090__auto__))
{var artifacts = temp__4090__auto__;return lt.plugins.cljrefactor.artifacts.create_artifact_hints.call(null,ed,artifacts);
} else
{return hints;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","artifact-hints","lt.plugins.cljrefactor.artifacts/artifact-hints",3606009273),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__artifact_hints,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"hints+","hints+",4091697745),null], null), null));
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","refactor-artifacts","lt.plugins.cljrefactor.artifacts/refactor-artifacts",1832386750),new cljs.core.Keyword(null,"tags","tags",1017456523),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.artifacts","refactor.artifacts",2606704295),null], null), null),new cljs.core.Keyword(null,"name","name",1017277949),"Refactor artifacts");
lt.plugins.cljrefactor.artifacts.refactor_artifacts = lt.object.create.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","refactor-artifacts","lt.plugins.cljrefactor.artifacts/refactor-artifacts",1832386750));
lt.plugins.cljrefactor.artifacts.__BEH__hotload_dep__DOT__res = (function __BEH__hotload_dep__DOT__res(ed,res){var vec__15204 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res);var ok_QMARK_ = cljs.core.nth.call(null,vec__15204,0,null);var ret = cljs.core.nth.call(null,vec__15204,1,null);var line = new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret));if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),line], null));
} else
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.result","editor.result",4030217008),"Loaded ok!",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),line], null));
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","hotload-dep.res","lt.plugins.cljrefactor.artifacts/hotload-dep.res",1583927251),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__hotload_dep__DOT__res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.hotload-dep","editor.eval.clj.result.refactor.hotload-dep",2122001198),null], null), null));
lt.plugins.cljrefactor.artifacts.parse_dep = (function parse_dep(dep){try{var dill = cljs.reader.read_string.call(null,dep);if(cljs.core._EQ_.call(null,cljs.core.count.call(null,dill),2))
{return dill;
} else
{return null;
}
}catch (e15206){var e = e15206;return null;
}});
lt.plugins.cljrefactor.artifacts.hotload_dep_op = (function hotload_dep_op(dep){var coords = dep;return lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"hotload-dependency",new cljs.core.Keyword(null,"coordinates","coordinates",2885823853),coords], null));
});
lt.plugins.cljrefactor.artifacts.__BEH__hotload_dep_BANG_ = (function __BEH__hotload_dep_BANG_(ed,coords){return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.artifacts.hotload_dep_op.call(null,coords),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.hotload-dep","refactor.hotload-dep",3912040123),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","hotload-dep!","lt.plugins.cljrefactor.artifacts/hotload-dep!",591057976),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.artifacts.__BEH__hotload_dep_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.hotload-dep!","refactor.hotload-dep!",661803370),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.artifacts","hotload-dep","lt.plugins.cljrefactor.artifacts/hotload-dep",4433653981),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Hotload dependency",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var ed = lt.objs.editor.pool.last_active.call(null);var pos = (cljs.core.truth_(ed)?lt.objs.editor.__GT_cursor.call(null,ed):null);if(cljs.core.truth_(ed))
{lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"paredit.select.parent","paredit.select.parent",4454322891));
var candidate = lt.objs.editor.selection.call(null,ed);var coords = lt.plugins.cljrefactor.artifacts.parse_dep.call(null,candidate);lt.objs.editor.move_cursor.call(null,ed,pos);
if(cljs.core.truth_((function (){var and__6486__auto__ = lt.plugins.cljrefactor.artifacts.parse_dep.call(null,candidate);if(cljs.core.truth_(and__6486__auto__))
{return new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));
} else
{return and__6486__auto__;
}
})()))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.hotload-dep!","refactor.hotload-dep!",661803370),candidate);
} else
{return null;
}
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.function')) {
goog.provide('lt.plugins.cljrefactor.function$');
goog.require('cljs.core');
goog.require('lt.plugins.paredit');
goog.require('lt.plugins.paredit');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.zip');
goog.require('lt.objs.editor.pool');
goog.require('clojure.zip');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.function$.hash_prefixed_QMARK_ = (function hash_prefixed_QMARK_(ed,start){return cljs.core._EQ_.call(null,lt.objs.editor.range.call(null,ed,start,cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc)),"#");
});
lt.plugins.cljrefactor.function$.set_form_QMARK_ = (function set_form_QMARK_(ed,start){return ((new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(start) > 0)) && (lt.plugins.cljrefactor.function$.hash_prefixed_QMARK_.call(null,ed,cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.dec)));
});
lt.plugins.cljrefactor.function$.get_form_range = (function get_form_range(ed,pos){var vec__8628 = lt.plugins.paredit.form_boundary.call(null,ed,pos);var start = cljs.core.nth.call(null,vec__8628,0,null);var end = cljs.core.nth.call(null,vec__8628,1,null);if(cljs.core.truth_(start))
{if(lt.plugins.cljrefactor.function$.set_form_QMARK_.call(null,ed,start))
{return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"start","start",1123661780),cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.dec),new cljs.core.Keyword(null,"end","end",1014004813),cljs.core.update_in.call(null,end,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc)], null);
} else
{return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"start","start",1123661780),start,new cljs.core.Keyword(null,"end","end",1014004813),cljs.core.update_in.call(null,end,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc)], null);
}
} else
{return null;
}
});
lt.plugins.cljrefactor.function$.add_new_fn = (function add_new_fn(ed,pos,new_fn){lt.objs.editor.replace.call(null,ed,pos,new_fn);
var map__8630 = lt.plugins.cljrefactor.function$.get_form_range.call(null,ed,cljs.core.update_in.call(null,pos,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc));var map__8630__$1 = ((cljs.core.seq_QMARK_.call(null,map__8630))?cljs.core.apply.call(null,cljs.core.hash_map,map__8630):map__8630);var end = cljs.core.get.call(null,map__8630__$1,new cljs.core.Keyword(null,"end","end",1014004813));var start = cljs.core.get.call(null,map__8630__$1,new cljs.core.Keyword(null,"start","start",1123661780));lt.objs.editor.set_selection.call(null,ed,start,end);
return lt.objs.editor.indent_selection.call(null,ed,"smart");
});
lt.plugins.cljrefactor.function$.highlight_fn_name = (function highlight_fn_name(ed,selections){var cm_ed = lt.objs.editor.__GT_cm_ed.call(null,ed);return cm_ed.setSelections(cljs.core.clj__GT_js.call(null,selections));
});
lt.plugins.cljrefactor.function$.do_extract = (function do_extract(ed,loc,unbound){var map__8632 = lt.plugins.cljrefactor.function$.get_form_range.call(null,ed,loc);var map__8632__$1 = ((cljs.core.seq_QMARK_.call(null,map__8632))?cljs.core.apply.call(null,cljs.core.hash_map,map__8632):map__8632);var end = cljs.core.get.call(null,map__8632__$1,new cljs.core.Keyword(null,"end","end",1014004813));var start = cljs.core.get.call(null,map__8632__$1,new cljs.core.Keyword(null,"start","start",1123661780));var top_form = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,loc);var ins_pos = cljs.core.update_in.call(null,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(top_form),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"line","line",1017226086)], null),cljs.core.dec);if(cljs.core.truth_((function (){var and__6486__auto__ = start;if(cljs.core.truth_(and__6486__auto__))
{return top_form;
} else
{return and__6486__auto__;
}
})()))
{var form = lt.objs.editor.range.call(null,ed,start,end);var new_fn = [cljs.core.str("(defn foo "),cljs.core.str(clojure.string.replace.call(null,[cljs.core.str(unbound)].join(''),/\"/,"")),cljs.core.str("\n"),cljs.core.str(form),cljs.core.str(")\n")].join('');var fn_call = [cljs.core.str("(foo"),cljs.core.str(((cljs.core.seq.call(null,unbound))?" ":null)),cljs.core.str(clojure.string.replace.call(null,[cljs.core.str(unbound)].join(''),/\"|\[|\]/,"")),cljs.core.str(")")].join('');var bm = lt.objs.editor.bookmark.call(null,ed,start,null);lt.objs.editor.replace.call(null,ed,start,end,fn_call);
lt.plugins.cljrefactor.function$.add_new_fn.call(null,ed,ins_pos,new_fn);
var loc_replaced = lt.util.cljs.js__GT_clj.call(null,bm.find(),new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",4191781672),true);var l_old = new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(loc_replaced);var start_col_old = (new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(loc_replaced) + 1);var end_col_old = (new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(loc_replaced) + 4);var l_new = new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(ins_pos);var start_col_new = (new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(ins_pos) + 6);var end_col_new = (new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(ins_pos) + 9);bm.clear();
return lt.plugins.cljrefactor.function$.highlight_fn_name.call(null,ed,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"anchor","anchor",3895572007),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),l_old,new cljs.core.Keyword(null,"ch","ch",1013907415),start_col_old], null),new cljs.core.Keyword(null,"head","head",1017102674),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),l_old,new cljs.core.Keyword(null,"ch","ch",1013907415),end_col_old], null)], null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"anchor","anchor",3895572007),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),l_new,new cljs.core.Keyword(null,"ch","ch",1013907415),start_col_new], null),new cljs.core.Keyword(null,"head","head",1017102674),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),l_new,new cljs.core.Keyword(null,"ch","ch",1013907415),end_col_new], null)], null)], null));
} else
{return null;
}
});
lt.plugins.cljrefactor.function$.unbound_op = (function unbound_op(ed,loc){return lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"op","op",1013907795),"find-unbound",new cljs.core.Keyword(null,"file","file",1017047278),new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed))),new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(loc) + 1),new cljs.core.Keyword(null,"column","column",3954034376),(new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(loc) + 1)], null));
});
lt.plugins.cljrefactor.function$.__BEH__unbound_res = (function __BEH__unbound_res(ed,res){var vec__8634 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"unbound","unbound",720786935)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__8634,0,null);var ret = cljs.core.nth.call(null,vec__8634,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{return lt.plugins.cljrefactor.function$.do_extract.call(null,ed,new cljs.core.Keyword(null,"loc","loc",1014011570).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret)),new cljs.core.Keyword(null,"unbound","unbound",720786935).cljs$core$IFn$_invoke$arity$1(ret));
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.function","unbound-res","lt.plugins.cljrefactor.function/unbound-res",1587324066),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.function$.__BEH__unbound_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.unbound-res","editor.eval.clj.result.refactor.unbound-res",943136401),null], null), null));
lt.plugins.cljrefactor.function$.__BEH__extract_fn_BANG_ = (function __BEH__extract_fn_BANG_(ed){var loc = lt.objs.editor.__GT_cursor.call(null,ed);return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.function$.unbound_op.call(null,ed,loc),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.unbound-res","refactor.unbound-res",2733175326),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true,new cljs.core.Keyword(null,"loc","loc",1014011570),loc], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.function","extract-fn!","lt.plugins.cljrefactor.function/extract-fn!",897758301),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.function$.__BEH__extract_fn_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.extract-fn!","refactor.extract-fn!",1343152595),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.function","extract-fn","lt.plugins.cljrefactor.function/extract-fn",4114148582),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Extract function",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.extract-fn!","refactor.extract-fn!",1343152595));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('quiescent.dom')) {
goog.provide('quiescent.dom');
goog.require('cljs.core');
goog.require('quiescent');
goog.require('quiescent');
/**
* @param {...*} var_args
*/
quiescent.dom.a = (function() { 
var a__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11009_11957 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11010_11958 = null;var count__11011_11959 = 0;var i__11012_11960 = 0;while(true){
if((i__11012_11960 < count__11011_11959))
{var arg__9967__auto___11961 = cljs.core._nth.call(null,chunk__11010_11958,i__11012_11960);a__9966__auto__.push(arg__9967__auto___11961);
{
var G__11962 = seq__11009_11957;
var G__11963 = chunk__11010_11958;
var G__11964 = count__11011_11959;
var G__11965 = (i__11012_11960 + 1);
seq__11009_11957 = G__11962;
chunk__11010_11958 = G__11963;
count__11011_11959 = G__11964;
i__11012_11960 = G__11965;
continue;
}
} else
{var temp__4092__auto___11966 = cljs.core.seq.call(null,seq__11009_11957);if(temp__4092__auto___11966)
{var seq__11009_11967__$1 = temp__4092__auto___11966;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11009_11967__$1))
{var c__7246__auto___11968 = cljs.core.chunk_first.call(null,seq__11009_11967__$1);{
var G__11969 = cljs.core.chunk_rest.call(null,seq__11009_11967__$1);
var G__11970 = c__7246__auto___11968;
var G__11971 = cljs.core.count.call(null,c__7246__auto___11968);
var G__11972 = 0;
seq__11009_11957 = G__11969;
chunk__11010_11958 = G__11970;
count__11011_11959 = G__11971;
i__11012_11960 = G__11972;
continue;
}
} else
{var arg__9967__auto___11973 = cljs.core.first.call(null,seq__11009_11967__$1);a__9966__auto__.push(arg__9967__auto___11973);
{
var G__11974 = cljs.core.next.call(null,seq__11009_11967__$1);
var G__11975 = null;
var G__11976 = 0;
var G__11977 = 0;
seq__11009_11957 = G__11974;
chunk__11010_11958 = G__11975;
count__11011_11959 = G__11976;
i__11012_11960 = G__11977;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.a.apply(null,a__9966__auto__);
};
var a = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return a__delegate.call(this,args__9965__auto__);};
a.cljs$lang$maxFixedArity = 0;
a.cljs$lang$applyTo = (function (arglist__11978){
var args__9965__auto__ = cljs.core.seq(arglist__11978);
return a__delegate(args__9965__auto__);
});
a.cljs$core$IFn$_invoke$arity$variadic = a__delegate;
return a;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.abbr = (function() { 
var abbr__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11017_11979 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11018_11980 = null;var count__11019_11981 = 0;var i__11020_11982 = 0;while(true){
if((i__11020_11982 < count__11019_11981))
{var arg__9967__auto___11983 = cljs.core._nth.call(null,chunk__11018_11980,i__11020_11982);a__9966__auto__.push(arg__9967__auto___11983);
{
var G__11984 = seq__11017_11979;
var G__11985 = chunk__11018_11980;
var G__11986 = count__11019_11981;
var G__11987 = (i__11020_11982 + 1);
seq__11017_11979 = G__11984;
chunk__11018_11980 = G__11985;
count__11019_11981 = G__11986;
i__11020_11982 = G__11987;
continue;
}
} else
{var temp__4092__auto___11988 = cljs.core.seq.call(null,seq__11017_11979);if(temp__4092__auto___11988)
{var seq__11017_11989__$1 = temp__4092__auto___11988;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11017_11989__$1))
{var c__7246__auto___11990 = cljs.core.chunk_first.call(null,seq__11017_11989__$1);{
var G__11991 = cljs.core.chunk_rest.call(null,seq__11017_11989__$1);
var G__11992 = c__7246__auto___11990;
var G__11993 = cljs.core.count.call(null,c__7246__auto___11990);
var G__11994 = 0;
seq__11017_11979 = G__11991;
chunk__11018_11980 = G__11992;
count__11019_11981 = G__11993;
i__11020_11982 = G__11994;
continue;
}
} else
{var arg__9967__auto___11995 = cljs.core.first.call(null,seq__11017_11989__$1);a__9966__auto__.push(arg__9967__auto___11995);
{
var G__11996 = cljs.core.next.call(null,seq__11017_11989__$1);
var G__11997 = null;
var G__11998 = 0;
var G__11999 = 0;
seq__11017_11979 = G__11996;
chunk__11018_11980 = G__11997;
count__11019_11981 = G__11998;
i__11020_11982 = G__11999;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.abbr.apply(null,a__9966__auto__);
};
var abbr = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return abbr__delegate.call(this,args__9965__auto__);};
abbr.cljs$lang$maxFixedArity = 0;
abbr.cljs$lang$applyTo = (function (arglist__12000){
var args__9965__auto__ = cljs.core.seq(arglist__12000);
return abbr__delegate(args__9965__auto__);
});
abbr.cljs$core$IFn$_invoke$arity$variadic = abbr__delegate;
return abbr;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.address = (function() { 
var address__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11025_12001 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11026_12002 = null;var count__11027_12003 = 0;var i__11028_12004 = 0;while(true){
if((i__11028_12004 < count__11027_12003))
{var arg__9967__auto___12005 = cljs.core._nth.call(null,chunk__11026_12002,i__11028_12004);a__9966__auto__.push(arg__9967__auto___12005);
{
var G__12006 = seq__11025_12001;
var G__12007 = chunk__11026_12002;
var G__12008 = count__11027_12003;
var G__12009 = (i__11028_12004 + 1);
seq__11025_12001 = G__12006;
chunk__11026_12002 = G__12007;
count__11027_12003 = G__12008;
i__11028_12004 = G__12009;
continue;
}
} else
{var temp__4092__auto___12010 = cljs.core.seq.call(null,seq__11025_12001);if(temp__4092__auto___12010)
{var seq__11025_12011__$1 = temp__4092__auto___12010;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11025_12011__$1))
{var c__7246__auto___12012 = cljs.core.chunk_first.call(null,seq__11025_12011__$1);{
var G__12013 = cljs.core.chunk_rest.call(null,seq__11025_12011__$1);
var G__12014 = c__7246__auto___12012;
var G__12015 = cljs.core.count.call(null,c__7246__auto___12012);
var G__12016 = 0;
seq__11025_12001 = G__12013;
chunk__11026_12002 = G__12014;
count__11027_12003 = G__12015;
i__11028_12004 = G__12016;
continue;
}
} else
{var arg__9967__auto___12017 = cljs.core.first.call(null,seq__11025_12011__$1);a__9966__auto__.push(arg__9967__auto___12017);
{
var G__12018 = cljs.core.next.call(null,seq__11025_12011__$1);
var G__12019 = null;
var G__12020 = 0;
var G__12021 = 0;
seq__11025_12001 = G__12018;
chunk__11026_12002 = G__12019;
count__11027_12003 = G__12020;
i__11028_12004 = G__12021;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.address.apply(null,a__9966__auto__);
};
var address = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return address__delegate.call(this,args__9965__auto__);};
address.cljs$lang$maxFixedArity = 0;
address.cljs$lang$applyTo = (function (arglist__12022){
var args__9965__auto__ = cljs.core.seq(arglist__12022);
return address__delegate(args__9965__auto__);
});
address.cljs$core$IFn$_invoke$arity$variadic = address__delegate;
return address;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.area = (function() { 
var area__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11033_12023 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11034_12024 = null;var count__11035_12025 = 0;var i__11036_12026 = 0;while(true){
if((i__11036_12026 < count__11035_12025))
{var arg__9967__auto___12027 = cljs.core._nth.call(null,chunk__11034_12024,i__11036_12026);a__9966__auto__.push(arg__9967__auto___12027);
{
var G__12028 = seq__11033_12023;
var G__12029 = chunk__11034_12024;
var G__12030 = count__11035_12025;
var G__12031 = (i__11036_12026 + 1);
seq__11033_12023 = G__12028;
chunk__11034_12024 = G__12029;
count__11035_12025 = G__12030;
i__11036_12026 = G__12031;
continue;
}
} else
{var temp__4092__auto___12032 = cljs.core.seq.call(null,seq__11033_12023);if(temp__4092__auto___12032)
{var seq__11033_12033__$1 = temp__4092__auto___12032;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11033_12033__$1))
{var c__7246__auto___12034 = cljs.core.chunk_first.call(null,seq__11033_12033__$1);{
var G__12035 = cljs.core.chunk_rest.call(null,seq__11033_12033__$1);
var G__12036 = c__7246__auto___12034;
var G__12037 = cljs.core.count.call(null,c__7246__auto___12034);
var G__12038 = 0;
seq__11033_12023 = G__12035;
chunk__11034_12024 = G__12036;
count__11035_12025 = G__12037;
i__11036_12026 = G__12038;
continue;
}
} else
{var arg__9967__auto___12039 = cljs.core.first.call(null,seq__11033_12033__$1);a__9966__auto__.push(arg__9967__auto___12039);
{
var G__12040 = cljs.core.next.call(null,seq__11033_12033__$1);
var G__12041 = null;
var G__12042 = 0;
var G__12043 = 0;
seq__11033_12023 = G__12040;
chunk__11034_12024 = G__12041;
count__11035_12025 = G__12042;
i__11036_12026 = G__12043;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.area.apply(null,a__9966__auto__);
};
var area = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return area__delegate.call(this,args__9965__auto__);};
area.cljs$lang$maxFixedArity = 0;
area.cljs$lang$applyTo = (function (arglist__12044){
var args__9965__auto__ = cljs.core.seq(arglist__12044);
return area__delegate(args__9965__auto__);
});
area.cljs$core$IFn$_invoke$arity$variadic = area__delegate;
return area;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.article = (function() { 
var article__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11041_12045 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11042_12046 = null;var count__11043_12047 = 0;var i__11044_12048 = 0;while(true){
if((i__11044_12048 < count__11043_12047))
{var arg__9967__auto___12049 = cljs.core._nth.call(null,chunk__11042_12046,i__11044_12048);a__9966__auto__.push(arg__9967__auto___12049);
{
var G__12050 = seq__11041_12045;
var G__12051 = chunk__11042_12046;
var G__12052 = count__11043_12047;
var G__12053 = (i__11044_12048 + 1);
seq__11041_12045 = G__12050;
chunk__11042_12046 = G__12051;
count__11043_12047 = G__12052;
i__11044_12048 = G__12053;
continue;
}
} else
{var temp__4092__auto___12054 = cljs.core.seq.call(null,seq__11041_12045);if(temp__4092__auto___12054)
{var seq__11041_12055__$1 = temp__4092__auto___12054;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11041_12055__$1))
{var c__7246__auto___12056 = cljs.core.chunk_first.call(null,seq__11041_12055__$1);{
var G__12057 = cljs.core.chunk_rest.call(null,seq__11041_12055__$1);
var G__12058 = c__7246__auto___12056;
var G__12059 = cljs.core.count.call(null,c__7246__auto___12056);
var G__12060 = 0;
seq__11041_12045 = G__12057;
chunk__11042_12046 = G__12058;
count__11043_12047 = G__12059;
i__11044_12048 = G__12060;
continue;
}
} else
{var arg__9967__auto___12061 = cljs.core.first.call(null,seq__11041_12055__$1);a__9966__auto__.push(arg__9967__auto___12061);
{
var G__12062 = cljs.core.next.call(null,seq__11041_12055__$1);
var G__12063 = null;
var G__12064 = 0;
var G__12065 = 0;
seq__11041_12045 = G__12062;
chunk__11042_12046 = G__12063;
count__11043_12047 = G__12064;
i__11044_12048 = G__12065;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.article.apply(null,a__9966__auto__);
};
var article = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return article__delegate.call(this,args__9965__auto__);};
article.cljs$lang$maxFixedArity = 0;
article.cljs$lang$applyTo = (function (arglist__12066){
var args__9965__auto__ = cljs.core.seq(arglist__12066);
return article__delegate(args__9965__auto__);
});
article.cljs$core$IFn$_invoke$arity$variadic = article__delegate;
return article;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.aside = (function() { 
var aside__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11049_12067 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11050_12068 = null;var count__11051_12069 = 0;var i__11052_12070 = 0;while(true){
if((i__11052_12070 < count__11051_12069))
{var arg__9967__auto___12071 = cljs.core._nth.call(null,chunk__11050_12068,i__11052_12070);a__9966__auto__.push(arg__9967__auto___12071);
{
var G__12072 = seq__11049_12067;
var G__12073 = chunk__11050_12068;
var G__12074 = count__11051_12069;
var G__12075 = (i__11052_12070 + 1);
seq__11049_12067 = G__12072;
chunk__11050_12068 = G__12073;
count__11051_12069 = G__12074;
i__11052_12070 = G__12075;
continue;
}
} else
{var temp__4092__auto___12076 = cljs.core.seq.call(null,seq__11049_12067);if(temp__4092__auto___12076)
{var seq__11049_12077__$1 = temp__4092__auto___12076;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11049_12077__$1))
{var c__7246__auto___12078 = cljs.core.chunk_first.call(null,seq__11049_12077__$1);{
var G__12079 = cljs.core.chunk_rest.call(null,seq__11049_12077__$1);
var G__12080 = c__7246__auto___12078;
var G__12081 = cljs.core.count.call(null,c__7246__auto___12078);
var G__12082 = 0;
seq__11049_12067 = G__12079;
chunk__11050_12068 = G__12080;
count__11051_12069 = G__12081;
i__11052_12070 = G__12082;
continue;
}
} else
{var arg__9967__auto___12083 = cljs.core.first.call(null,seq__11049_12077__$1);a__9966__auto__.push(arg__9967__auto___12083);
{
var G__12084 = cljs.core.next.call(null,seq__11049_12077__$1);
var G__12085 = null;
var G__12086 = 0;
var G__12087 = 0;
seq__11049_12067 = G__12084;
chunk__11050_12068 = G__12085;
count__11051_12069 = G__12086;
i__11052_12070 = G__12087;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.aside.apply(null,a__9966__auto__);
};
var aside = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return aside__delegate.call(this,args__9965__auto__);};
aside.cljs$lang$maxFixedArity = 0;
aside.cljs$lang$applyTo = (function (arglist__12088){
var args__9965__auto__ = cljs.core.seq(arglist__12088);
return aside__delegate(args__9965__auto__);
});
aside.cljs$core$IFn$_invoke$arity$variadic = aside__delegate;
return aside;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.audio = (function() { 
var audio__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11057_12089 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11058_12090 = null;var count__11059_12091 = 0;var i__11060_12092 = 0;while(true){
if((i__11060_12092 < count__11059_12091))
{var arg__9967__auto___12093 = cljs.core._nth.call(null,chunk__11058_12090,i__11060_12092);a__9966__auto__.push(arg__9967__auto___12093);
{
var G__12094 = seq__11057_12089;
var G__12095 = chunk__11058_12090;
var G__12096 = count__11059_12091;
var G__12097 = (i__11060_12092 + 1);
seq__11057_12089 = G__12094;
chunk__11058_12090 = G__12095;
count__11059_12091 = G__12096;
i__11060_12092 = G__12097;
continue;
}
} else
{var temp__4092__auto___12098 = cljs.core.seq.call(null,seq__11057_12089);if(temp__4092__auto___12098)
{var seq__11057_12099__$1 = temp__4092__auto___12098;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11057_12099__$1))
{var c__7246__auto___12100 = cljs.core.chunk_first.call(null,seq__11057_12099__$1);{
var G__12101 = cljs.core.chunk_rest.call(null,seq__11057_12099__$1);
var G__12102 = c__7246__auto___12100;
var G__12103 = cljs.core.count.call(null,c__7246__auto___12100);
var G__12104 = 0;
seq__11057_12089 = G__12101;
chunk__11058_12090 = G__12102;
count__11059_12091 = G__12103;
i__11060_12092 = G__12104;
continue;
}
} else
{var arg__9967__auto___12105 = cljs.core.first.call(null,seq__11057_12099__$1);a__9966__auto__.push(arg__9967__auto___12105);
{
var G__12106 = cljs.core.next.call(null,seq__11057_12099__$1);
var G__12107 = null;
var G__12108 = 0;
var G__12109 = 0;
seq__11057_12089 = G__12106;
chunk__11058_12090 = G__12107;
count__11059_12091 = G__12108;
i__11060_12092 = G__12109;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.audio.apply(null,a__9966__auto__);
};
var audio = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return audio__delegate.call(this,args__9965__auto__);};
audio.cljs$lang$maxFixedArity = 0;
audio.cljs$lang$applyTo = (function (arglist__12110){
var args__9965__auto__ = cljs.core.seq(arglist__12110);
return audio__delegate(args__9965__auto__);
});
audio.cljs$core$IFn$_invoke$arity$variadic = audio__delegate;
return audio;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.b = (function() { 
var b__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11065_12111 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11066_12112 = null;var count__11067_12113 = 0;var i__11068_12114 = 0;while(true){
if((i__11068_12114 < count__11067_12113))
{var arg__9967__auto___12115 = cljs.core._nth.call(null,chunk__11066_12112,i__11068_12114);a__9966__auto__.push(arg__9967__auto___12115);
{
var G__12116 = seq__11065_12111;
var G__12117 = chunk__11066_12112;
var G__12118 = count__11067_12113;
var G__12119 = (i__11068_12114 + 1);
seq__11065_12111 = G__12116;
chunk__11066_12112 = G__12117;
count__11067_12113 = G__12118;
i__11068_12114 = G__12119;
continue;
}
} else
{var temp__4092__auto___12120 = cljs.core.seq.call(null,seq__11065_12111);if(temp__4092__auto___12120)
{var seq__11065_12121__$1 = temp__4092__auto___12120;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11065_12121__$1))
{var c__7246__auto___12122 = cljs.core.chunk_first.call(null,seq__11065_12121__$1);{
var G__12123 = cljs.core.chunk_rest.call(null,seq__11065_12121__$1);
var G__12124 = c__7246__auto___12122;
var G__12125 = cljs.core.count.call(null,c__7246__auto___12122);
var G__12126 = 0;
seq__11065_12111 = G__12123;
chunk__11066_12112 = G__12124;
count__11067_12113 = G__12125;
i__11068_12114 = G__12126;
continue;
}
} else
{var arg__9967__auto___12127 = cljs.core.first.call(null,seq__11065_12121__$1);a__9966__auto__.push(arg__9967__auto___12127);
{
var G__12128 = cljs.core.next.call(null,seq__11065_12121__$1);
var G__12129 = null;
var G__12130 = 0;
var G__12131 = 0;
seq__11065_12111 = G__12128;
chunk__11066_12112 = G__12129;
count__11067_12113 = G__12130;
i__11068_12114 = G__12131;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.b.apply(null,a__9966__auto__);
};
var b = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return b__delegate.call(this,args__9965__auto__);};
b.cljs$lang$maxFixedArity = 0;
b.cljs$lang$applyTo = (function (arglist__12132){
var args__9965__auto__ = cljs.core.seq(arglist__12132);
return b__delegate(args__9965__auto__);
});
b.cljs$core$IFn$_invoke$arity$variadic = b__delegate;
return b;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.base = (function() { 
var base__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11073_12133 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11074_12134 = null;var count__11075_12135 = 0;var i__11076_12136 = 0;while(true){
if((i__11076_12136 < count__11075_12135))
{var arg__9967__auto___12137 = cljs.core._nth.call(null,chunk__11074_12134,i__11076_12136);a__9966__auto__.push(arg__9967__auto___12137);
{
var G__12138 = seq__11073_12133;
var G__12139 = chunk__11074_12134;
var G__12140 = count__11075_12135;
var G__12141 = (i__11076_12136 + 1);
seq__11073_12133 = G__12138;
chunk__11074_12134 = G__12139;
count__11075_12135 = G__12140;
i__11076_12136 = G__12141;
continue;
}
} else
{var temp__4092__auto___12142 = cljs.core.seq.call(null,seq__11073_12133);if(temp__4092__auto___12142)
{var seq__11073_12143__$1 = temp__4092__auto___12142;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11073_12143__$1))
{var c__7246__auto___12144 = cljs.core.chunk_first.call(null,seq__11073_12143__$1);{
var G__12145 = cljs.core.chunk_rest.call(null,seq__11073_12143__$1);
var G__12146 = c__7246__auto___12144;
var G__12147 = cljs.core.count.call(null,c__7246__auto___12144);
var G__12148 = 0;
seq__11073_12133 = G__12145;
chunk__11074_12134 = G__12146;
count__11075_12135 = G__12147;
i__11076_12136 = G__12148;
continue;
}
} else
{var arg__9967__auto___12149 = cljs.core.first.call(null,seq__11073_12143__$1);a__9966__auto__.push(arg__9967__auto___12149);
{
var G__12150 = cljs.core.next.call(null,seq__11073_12143__$1);
var G__12151 = null;
var G__12152 = 0;
var G__12153 = 0;
seq__11073_12133 = G__12150;
chunk__11074_12134 = G__12151;
count__11075_12135 = G__12152;
i__11076_12136 = G__12153;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.base.apply(null,a__9966__auto__);
};
var base = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return base__delegate.call(this,args__9965__auto__);};
base.cljs$lang$maxFixedArity = 0;
base.cljs$lang$applyTo = (function (arglist__12154){
var args__9965__auto__ = cljs.core.seq(arglist__12154);
return base__delegate(args__9965__auto__);
});
base.cljs$core$IFn$_invoke$arity$variadic = base__delegate;
return base;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.bdi = (function() { 
var bdi__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11081_12155 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11082_12156 = null;var count__11083_12157 = 0;var i__11084_12158 = 0;while(true){
if((i__11084_12158 < count__11083_12157))
{var arg__9967__auto___12159 = cljs.core._nth.call(null,chunk__11082_12156,i__11084_12158);a__9966__auto__.push(arg__9967__auto___12159);
{
var G__12160 = seq__11081_12155;
var G__12161 = chunk__11082_12156;
var G__12162 = count__11083_12157;
var G__12163 = (i__11084_12158 + 1);
seq__11081_12155 = G__12160;
chunk__11082_12156 = G__12161;
count__11083_12157 = G__12162;
i__11084_12158 = G__12163;
continue;
}
} else
{var temp__4092__auto___12164 = cljs.core.seq.call(null,seq__11081_12155);if(temp__4092__auto___12164)
{var seq__11081_12165__$1 = temp__4092__auto___12164;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11081_12165__$1))
{var c__7246__auto___12166 = cljs.core.chunk_first.call(null,seq__11081_12165__$1);{
var G__12167 = cljs.core.chunk_rest.call(null,seq__11081_12165__$1);
var G__12168 = c__7246__auto___12166;
var G__12169 = cljs.core.count.call(null,c__7246__auto___12166);
var G__12170 = 0;
seq__11081_12155 = G__12167;
chunk__11082_12156 = G__12168;
count__11083_12157 = G__12169;
i__11084_12158 = G__12170;
continue;
}
} else
{var arg__9967__auto___12171 = cljs.core.first.call(null,seq__11081_12165__$1);a__9966__auto__.push(arg__9967__auto___12171);
{
var G__12172 = cljs.core.next.call(null,seq__11081_12165__$1);
var G__12173 = null;
var G__12174 = 0;
var G__12175 = 0;
seq__11081_12155 = G__12172;
chunk__11082_12156 = G__12173;
count__11083_12157 = G__12174;
i__11084_12158 = G__12175;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.bdi.apply(null,a__9966__auto__);
};
var bdi = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return bdi__delegate.call(this,args__9965__auto__);};
bdi.cljs$lang$maxFixedArity = 0;
bdi.cljs$lang$applyTo = (function (arglist__12176){
var args__9965__auto__ = cljs.core.seq(arglist__12176);
return bdi__delegate(args__9965__auto__);
});
bdi.cljs$core$IFn$_invoke$arity$variadic = bdi__delegate;
return bdi;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.bdo = (function() { 
var bdo__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11089_12177 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11090_12178 = null;var count__11091_12179 = 0;var i__11092_12180 = 0;while(true){
if((i__11092_12180 < count__11091_12179))
{var arg__9967__auto___12181 = cljs.core._nth.call(null,chunk__11090_12178,i__11092_12180);a__9966__auto__.push(arg__9967__auto___12181);
{
var G__12182 = seq__11089_12177;
var G__12183 = chunk__11090_12178;
var G__12184 = count__11091_12179;
var G__12185 = (i__11092_12180 + 1);
seq__11089_12177 = G__12182;
chunk__11090_12178 = G__12183;
count__11091_12179 = G__12184;
i__11092_12180 = G__12185;
continue;
}
} else
{var temp__4092__auto___12186 = cljs.core.seq.call(null,seq__11089_12177);if(temp__4092__auto___12186)
{var seq__11089_12187__$1 = temp__4092__auto___12186;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11089_12187__$1))
{var c__7246__auto___12188 = cljs.core.chunk_first.call(null,seq__11089_12187__$1);{
var G__12189 = cljs.core.chunk_rest.call(null,seq__11089_12187__$1);
var G__12190 = c__7246__auto___12188;
var G__12191 = cljs.core.count.call(null,c__7246__auto___12188);
var G__12192 = 0;
seq__11089_12177 = G__12189;
chunk__11090_12178 = G__12190;
count__11091_12179 = G__12191;
i__11092_12180 = G__12192;
continue;
}
} else
{var arg__9967__auto___12193 = cljs.core.first.call(null,seq__11089_12187__$1);a__9966__auto__.push(arg__9967__auto___12193);
{
var G__12194 = cljs.core.next.call(null,seq__11089_12187__$1);
var G__12195 = null;
var G__12196 = 0;
var G__12197 = 0;
seq__11089_12177 = G__12194;
chunk__11090_12178 = G__12195;
count__11091_12179 = G__12196;
i__11092_12180 = G__12197;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.bdo.apply(null,a__9966__auto__);
};
var bdo = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return bdo__delegate.call(this,args__9965__auto__);};
bdo.cljs$lang$maxFixedArity = 0;
bdo.cljs$lang$applyTo = (function (arglist__12198){
var args__9965__auto__ = cljs.core.seq(arglist__12198);
return bdo__delegate(args__9965__auto__);
});
bdo.cljs$core$IFn$_invoke$arity$variadic = bdo__delegate;
return bdo;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.big = (function() { 
var big__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11097_12199 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11098_12200 = null;var count__11099_12201 = 0;var i__11100_12202 = 0;while(true){
if((i__11100_12202 < count__11099_12201))
{var arg__9967__auto___12203 = cljs.core._nth.call(null,chunk__11098_12200,i__11100_12202);a__9966__auto__.push(arg__9967__auto___12203);
{
var G__12204 = seq__11097_12199;
var G__12205 = chunk__11098_12200;
var G__12206 = count__11099_12201;
var G__12207 = (i__11100_12202 + 1);
seq__11097_12199 = G__12204;
chunk__11098_12200 = G__12205;
count__11099_12201 = G__12206;
i__11100_12202 = G__12207;
continue;
}
} else
{var temp__4092__auto___12208 = cljs.core.seq.call(null,seq__11097_12199);if(temp__4092__auto___12208)
{var seq__11097_12209__$1 = temp__4092__auto___12208;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11097_12209__$1))
{var c__7246__auto___12210 = cljs.core.chunk_first.call(null,seq__11097_12209__$1);{
var G__12211 = cljs.core.chunk_rest.call(null,seq__11097_12209__$1);
var G__12212 = c__7246__auto___12210;
var G__12213 = cljs.core.count.call(null,c__7246__auto___12210);
var G__12214 = 0;
seq__11097_12199 = G__12211;
chunk__11098_12200 = G__12212;
count__11099_12201 = G__12213;
i__11100_12202 = G__12214;
continue;
}
} else
{var arg__9967__auto___12215 = cljs.core.first.call(null,seq__11097_12209__$1);a__9966__auto__.push(arg__9967__auto___12215);
{
var G__12216 = cljs.core.next.call(null,seq__11097_12209__$1);
var G__12217 = null;
var G__12218 = 0;
var G__12219 = 0;
seq__11097_12199 = G__12216;
chunk__11098_12200 = G__12217;
count__11099_12201 = G__12218;
i__11100_12202 = G__12219;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.big.apply(null,a__9966__auto__);
};
var big = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return big__delegate.call(this,args__9965__auto__);};
big.cljs$lang$maxFixedArity = 0;
big.cljs$lang$applyTo = (function (arglist__12220){
var args__9965__auto__ = cljs.core.seq(arglist__12220);
return big__delegate(args__9965__auto__);
});
big.cljs$core$IFn$_invoke$arity$variadic = big__delegate;
return big;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.blockquote = (function() { 
var blockquote__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11105_12221 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11106_12222 = null;var count__11107_12223 = 0;var i__11108_12224 = 0;while(true){
if((i__11108_12224 < count__11107_12223))
{var arg__9967__auto___12225 = cljs.core._nth.call(null,chunk__11106_12222,i__11108_12224);a__9966__auto__.push(arg__9967__auto___12225);
{
var G__12226 = seq__11105_12221;
var G__12227 = chunk__11106_12222;
var G__12228 = count__11107_12223;
var G__12229 = (i__11108_12224 + 1);
seq__11105_12221 = G__12226;
chunk__11106_12222 = G__12227;
count__11107_12223 = G__12228;
i__11108_12224 = G__12229;
continue;
}
} else
{var temp__4092__auto___12230 = cljs.core.seq.call(null,seq__11105_12221);if(temp__4092__auto___12230)
{var seq__11105_12231__$1 = temp__4092__auto___12230;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11105_12231__$1))
{var c__7246__auto___12232 = cljs.core.chunk_first.call(null,seq__11105_12231__$1);{
var G__12233 = cljs.core.chunk_rest.call(null,seq__11105_12231__$1);
var G__12234 = c__7246__auto___12232;
var G__12235 = cljs.core.count.call(null,c__7246__auto___12232);
var G__12236 = 0;
seq__11105_12221 = G__12233;
chunk__11106_12222 = G__12234;
count__11107_12223 = G__12235;
i__11108_12224 = G__12236;
continue;
}
} else
{var arg__9967__auto___12237 = cljs.core.first.call(null,seq__11105_12231__$1);a__9966__auto__.push(arg__9967__auto___12237);
{
var G__12238 = cljs.core.next.call(null,seq__11105_12231__$1);
var G__12239 = null;
var G__12240 = 0;
var G__12241 = 0;
seq__11105_12221 = G__12238;
chunk__11106_12222 = G__12239;
count__11107_12223 = G__12240;
i__11108_12224 = G__12241;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.blockquote.apply(null,a__9966__auto__);
};
var blockquote = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return blockquote__delegate.call(this,args__9965__auto__);};
blockquote.cljs$lang$maxFixedArity = 0;
blockquote.cljs$lang$applyTo = (function (arglist__12242){
var args__9965__auto__ = cljs.core.seq(arglist__12242);
return blockquote__delegate(args__9965__auto__);
});
blockquote.cljs$core$IFn$_invoke$arity$variadic = blockquote__delegate;
return blockquote;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.body = (function() { 
var body__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11113_12243 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11114_12244 = null;var count__11115_12245 = 0;var i__11116_12246 = 0;while(true){
if((i__11116_12246 < count__11115_12245))
{var arg__9967__auto___12247 = cljs.core._nth.call(null,chunk__11114_12244,i__11116_12246);a__9966__auto__.push(arg__9967__auto___12247);
{
var G__12248 = seq__11113_12243;
var G__12249 = chunk__11114_12244;
var G__12250 = count__11115_12245;
var G__12251 = (i__11116_12246 + 1);
seq__11113_12243 = G__12248;
chunk__11114_12244 = G__12249;
count__11115_12245 = G__12250;
i__11116_12246 = G__12251;
continue;
}
} else
{var temp__4092__auto___12252 = cljs.core.seq.call(null,seq__11113_12243);if(temp__4092__auto___12252)
{var seq__11113_12253__$1 = temp__4092__auto___12252;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11113_12253__$1))
{var c__7246__auto___12254 = cljs.core.chunk_first.call(null,seq__11113_12253__$1);{
var G__12255 = cljs.core.chunk_rest.call(null,seq__11113_12253__$1);
var G__12256 = c__7246__auto___12254;
var G__12257 = cljs.core.count.call(null,c__7246__auto___12254);
var G__12258 = 0;
seq__11113_12243 = G__12255;
chunk__11114_12244 = G__12256;
count__11115_12245 = G__12257;
i__11116_12246 = G__12258;
continue;
}
} else
{var arg__9967__auto___12259 = cljs.core.first.call(null,seq__11113_12253__$1);a__9966__auto__.push(arg__9967__auto___12259);
{
var G__12260 = cljs.core.next.call(null,seq__11113_12253__$1);
var G__12261 = null;
var G__12262 = 0;
var G__12263 = 0;
seq__11113_12243 = G__12260;
chunk__11114_12244 = G__12261;
count__11115_12245 = G__12262;
i__11116_12246 = G__12263;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.body.apply(null,a__9966__auto__);
};
var body = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return body__delegate.call(this,args__9965__auto__);};
body.cljs$lang$maxFixedArity = 0;
body.cljs$lang$applyTo = (function (arglist__12264){
var args__9965__auto__ = cljs.core.seq(arglist__12264);
return body__delegate(args__9965__auto__);
});
body.cljs$core$IFn$_invoke$arity$variadic = body__delegate;
return body;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.br = (function() { 
var br__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11121_12265 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11122_12266 = null;var count__11123_12267 = 0;var i__11124_12268 = 0;while(true){
if((i__11124_12268 < count__11123_12267))
{var arg__9967__auto___12269 = cljs.core._nth.call(null,chunk__11122_12266,i__11124_12268);a__9966__auto__.push(arg__9967__auto___12269);
{
var G__12270 = seq__11121_12265;
var G__12271 = chunk__11122_12266;
var G__12272 = count__11123_12267;
var G__12273 = (i__11124_12268 + 1);
seq__11121_12265 = G__12270;
chunk__11122_12266 = G__12271;
count__11123_12267 = G__12272;
i__11124_12268 = G__12273;
continue;
}
} else
{var temp__4092__auto___12274 = cljs.core.seq.call(null,seq__11121_12265);if(temp__4092__auto___12274)
{var seq__11121_12275__$1 = temp__4092__auto___12274;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11121_12275__$1))
{var c__7246__auto___12276 = cljs.core.chunk_first.call(null,seq__11121_12275__$1);{
var G__12277 = cljs.core.chunk_rest.call(null,seq__11121_12275__$1);
var G__12278 = c__7246__auto___12276;
var G__12279 = cljs.core.count.call(null,c__7246__auto___12276);
var G__12280 = 0;
seq__11121_12265 = G__12277;
chunk__11122_12266 = G__12278;
count__11123_12267 = G__12279;
i__11124_12268 = G__12280;
continue;
}
} else
{var arg__9967__auto___12281 = cljs.core.first.call(null,seq__11121_12275__$1);a__9966__auto__.push(arg__9967__auto___12281);
{
var G__12282 = cljs.core.next.call(null,seq__11121_12275__$1);
var G__12283 = null;
var G__12284 = 0;
var G__12285 = 0;
seq__11121_12265 = G__12282;
chunk__11122_12266 = G__12283;
count__11123_12267 = G__12284;
i__11124_12268 = G__12285;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.br.apply(null,a__9966__auto__);
};
var br = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return br__delegate.call(this,args__9965__auto__);};
br.cljs$lang$maxFixedArity = 0;
br.cljs$lang$applyTo = (function (arglist__12286){
var args__9965__auto__ = cljs.core.seq(arglist__12286);
return br__delegate(args__9965__auto__);
});
br.cljs$core$IFn$_invoke$arity$variadic = br__delegate;
return br;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.button = (function() { 
var button__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11129_12287 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11130_12288 = null;var count__11131_12289 = 0;var i__11132_12290 = 0;while(true){
if((i__11132_12290 < count__11131_12289))
{var arg__9967__auto___12291 = cljs.core._nth.call(null,chunk__11130_12288,i__11132_12290);a__9966__auto__.push(arg__9967__auto___12291);
{
var G__12292 = seq__11129_12287;
var G__12293 = chunk__11130_12288;
var G__12294 = count__11131_12289;
var G__12295 = (i__11132_12290 + 1);
seq__11129_12287 = G__12292;
chunk__11130_12288 = G__12293;
count__11131_12289 = G__12294;
i__11132_12290 = G__12295;
continue;
}
} else
{var temp__4092__auto___12296 = cljs.core.seq.call(null,seq__11129_12287);if(temp__4092__auto___12296)
{var seq__11129_12297__$1 = temp__4092__auto___12296;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11129_12297__$1))
{var c__7246__auto___12298 = cljs.core.chunk_first.call(null,seq__11129_12297__$1);{
var G__12299 = cljs.core.chunk_rest.call(null,seq__11129_12297__$1);
var G__12300 = c__7246__auto___12298;
var G__12301 = cljs.core.count.call(null,c__7246__auto___12298);
var G__12302 = 0;
seq__11129_12287 = G__12299;
chunk__11130_12288 = G__12300;
count__11131_12289 = G__12301;
i__11132_12290 = G__12302;
continue;
}
} else
{var arg__9967__auto___12303 = cljs.core.first.call(null,seq__11129_12297__$1);a__9966__auto__.push(arg__9967__auto___12303);
{
var G__12304 = cljs.core.next.call(null,seq__11129_12297__$1);
var G__12305 = null;
var G__12306 = 0;
var G__12307 = 0;
seq__11129_12287 = G__12304;
chunk__11130_12288 = G__12305;
count__11131_12289 = G__12306;
i__11132_12290 = G__12307;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.button.apply(null,a__9966__auto__);
};
var button = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return button__delegate.call(this,args__9965__auto__);};
button.cljs$lang$maxFixedArity = 0;
button.cljs$lang$applyTo = (function (arglist__12308){
var args__9965__auto__ = cljs.core.seq(arglist__12308);
return button__delegate(args__9965__auto__);
});
button.cljs$core$IFn$_invoke$arity$variadic = button__delegate;
return button;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.canvas = (function() { 
var canvas__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11137_12309 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11138_12310 = null;var count__11139_12311 = 0;var i__11140_12312 = 0;while(true){
if((i__11140_12312 < count__11139_12311))
{var arg__9967__auto___12313 = cljs.core._nth.call(null,chunk__11138_12310,i__11140_12312);a__9966__auto__.push(arg__9967__auto___12313);
{
var G__12314 = seq__11137_12309;
var G__12315 = chunk__11138_12310;
var G__12316 = count__11139_12311;
var G__12317 = (i__11140_12312 + 1);
seq__11137_12309 = G__12314;
chunk__11138_12310 = G__12315;
count__11139_12311 = G__12316;
i__11140_12312 = G__12317;
continue;
}
} else
{var temp__4092__auto___12318 = cljs.core.seq.call(null,seq__11137_12309);if(temp__4092__auto___12318)
{var seq__11137_12319__$1 = temp__4092__auto___12318;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11137_12319__$1))
{var c__7246__auto___12320 = cljs.core.chunk_first.call(null,seq__11137_12319__$1);{
var G__12321 = cljs.core.chunk_rest.call(null,seq__11137_12319__$1);
var G__12322 = c__7246__auto___12320;
var G__12323 = cljs.core.count.call(null,c__7246__auto___12320);
var G__12324 = 0;
seq__11137_12309 = G__12321;
chunk__11138_12310 = G__12322;
count__11139_12311 = G__12323;
i__11140_12312 = G__12324;
continue;
}
} else
{var arg__9967__auto___12325 = cljs.core.first.call(null,seq__11137_12319__$1);a__9966__auto__.push(arg__9967__auto___12325);
{
var G__12326 = cljs.core.next.call(null,seq__11137_12319__$1);
var G__12327 = null;
var G__12328 = 0;
var G__12329 = 0;
seq__11137_12309 = G__12326;
chunk__11138_12310 = G__12327;
count__11139_12311 = G__12328;
i__11140_12312 = G__12329;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.canvas.apply(null,a__9966__auto__);
};
var canvas = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return canvas__delegate.call(this,args__9965__auto__);};
canvas.cljs$lang$maxFixedArity = 0;
canvas.cljs$lang$applyTo = (function (arglist__12330){
var args__9965__auto__ = cljs.core.seq(arglist__12330);
return canvas__delegate(args__9965__auto__);
});
canvas.cljs$core$IFn$_invoke$arity$variadic = canvas__delegate;
return canvas;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.caption = (function() { 
var caption__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11145_12331 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11146_12332 = null;var count__11147_12333 = 0;var i__11148_12334 = 0;while(true){
if((i__11148_12334 < count__11147_12333))
{var arg__9967__auto___12335 = cljs.core._nth.call(null,chunk__11146_12332,i__11148_12334);a__9966__auto__.push(arg__9967__auto___12335);
{
var G__12336 = seq__11145_12331;
var G__12337 = chunk__11146_12332;
var G__12338 = count__11147_12333;
var G__12339 = (i__11148_12334 + 1);
seq__11145_12331 = G__12336;
chunk__11146_12332 = G__12337;
count__11147_12333 = G__12338;
i__11148_12334 = G__12339;
continue;
}
} else
{var temp__4092__auto___12340 = cljs.core.seq.call(null,seq__11145_12331);if(temp__4092__auto___12340)
{var seq__11145_12341__$1 = temp__4092__auto___12340;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11145_12341__$1))
{var c__7246__auto___12342 = cljs.core.chunk_first.call(null,seq__11145_12341__$1);{
var G__12343 = cljs.core.chunk_rest.call(null,seq__11145_12341__$1);
var G__12344 = c__7246__auto___12342;
var G__12345 = cljs.core.count.call(null,c__7246__auto___12342);
var G__12346 = 0;
seq__11145_12331 = G__12343;
chunk__11146_12332 = G__12344;
count__11147_12333 = G__12345;
i__11148_12334 = G__12346;
continue;
}
} else
{var arg__9967__auto___12347 = cljs.core.first.call(null,seq__11145_12341__$1);a__9966__auto__.push(arg__9967__auto___12347);
{
var G__12348 = cljs.core.next.call(null,seq__11145_12341__$1);
var G__12349 = null;
var G__12350 = 0;
var G__12351 = 0;
seq__11145_12331 = G__12348;
chunk__11146_12332 = G__12349;
count__11147_12333 = G__12350;
i__11148_12334 = G__12351;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.caption.apply(null,a__9966__auto__);
};
var caption = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return caption__delegate.call(this,args__9965__auto__);};
caption.cljs$lang$maxFixedArity = 0;
caption.cljs$lang$applyTo = (function (arglist__12352){
var args__9965__auto__ = cljs.core.seq(arglist__12352);
return caption__delegate(args__9965__auto__);
});
caption.cljs$core$IFn$_invoke$arity$variadic = caption__delegate;
return caption;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.cite = (function() { 
var cite__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11153_12353 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11154_12354 = null;var count__11155_12355 = 0;var i__11156_12356 = 0;while(true){
if((i__11156_12356 < count__11155_12355))
{var arg__9967__auto___12357 = cljs.core._nth.call(null,chunk__11154_12354,i__11156_12356);a__9966__auto__.push(arg__9967__auto___12357);
{
var G__12358 = seq__11153_12353;
var G__12359 = chunk__11154_12354;
var G__12360 = count__11155_12355;
var G__12361 = (i__11156_12356 + 1);
seq__11153_12353 = G__12358;
chunk__11154_12354 = G__12359;
count__11155_12355 = G__12360;
i__11156_12356 = G__12361;
continue;
}
} else
{var temp__4092__auto___12362 = cljs.core.seq.call(null,seq__11153_12353);if(temp__4092__auto___12362)
{var seq__11153_12363__$1 = temp__4092__auto___12362;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11153_12363__$1))
{var c__7246__auto___12364 = cljs.core.chunk_first.call(null,seq__11153_12363__$1);{
var G__12365 = cljs.core.chunk_rest.call(null,seq__11153_12363__$1);
var G__12366 = c__7246__auto___12364;
var G__12367 = cljs.core.count.call(null,c__7246__auto___12364);
var G__12368 = 0;
seq__11153_12353 = G__12365;
chunk__11154_12354 = G__12366;
count__11155_12355 = G__12367;
i__11156_12356 = G__12368;
continue;
}
} else
{var arg__9967__auto___12369 = cljs.core.first.call(null,seq__11153_12363__$1);a__9966__auto__.push(arg__9967__auto___12369);
{
var G__12370 = cljs.core.next.call(null,seq__11153_12363__$1);
var G__12371 = null;
var G__12372 = 0;
var G__12373 = 0;
seq__11153_12353 = G__12370;
chunk__11154_12354 = G__12371;
count__11155_12355 = G__12372;
i__11156_12356 = G__12373;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.cite.apply(null,a__9966__auto__);
};
var cite = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return cite__delegate.call(this,args__9965__auto__);};
cite.cljs$lang$maxFixedArity = 0;
cite.cljs$lang$applyTo = (function (arglist__12374){
var args__9965__auto__ = cljs.core.seq(arglist__12374);
return cite__delegate(args__9965__auto__);
});
cite.cljs$core$IFn$_invoke$arity$variadic = cite__delegate;
return cite;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.code = (function() { 
var code__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11161_12375 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11162_12376 = null;var count__11163_12377 = 0;var i__11164_12378 = 0;while(true){
if((i__11164_12378 < count__11163_12377))
{var arg__9967__auto___12379 = cljs.core._nth.call(null,chunk__11162_12376,i__11164_12378);a__9966__auto__.push(arg__9967__auto___12379);
{
var G__12380 = seq__11161_12375;
var G__12381 = chunk__11162_12376;
var G__12382 = count__11163_12377;
var G__12383 = (i__11164_12378 + 1);
seq__11161_12375 = G__12380;
chunk__11162_12376 = G__12381;
count__11163_12377 = G__12382;
i__11164_12378 = G__12383;
continue;
}
} else
{var temp__4092__auto___12384 = cljs.core.seq.call(null,seq__11161_12375);if(temp__4092__auto___12384)
{var seq__11161_12385__$1 = temp__4092__auto___12384;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11161_12385__$1))
{var c__7246__auto___12386 = cljs.core.chunk_first.call(null,seq__11161_12385__$1);{
var G__12387 = cljs.core.chunk_rest.call(null,seq__11161_12385__$1);
var G__12388 = c__7246__auto___12386;
var G__12389 = cljs.core.count.call(null,c__7246__auto___12386);
var G__12390 = 0;
seq__11161_12375 = G__12387;
chunk__11162_12376 = G__12388;
count__11163_12377 = G__12389;
i__11164_12378 = G__12390;
continue;
}
} else
{var arg__9967__auto___12391 = cljs.core.first.call(null,seq__11161_12385__$1);a__9966__auto__.push(arg__9967__auto___12391);
{
var G__12392 = cljs.core.next.call(null,seq__11161_12385__$1);
var G__12393 = null;
var G__12394 = 0;
var G__12395 = 0;
seq__11161_12375 = G__12392;
chunk__11162_12376 = G__12393;
count__11163_12377 = G__12394;
i__11164_12378 = G__12395;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.code.apply(null,a__9966__auto__);
};
var code = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return code__delegate.call(this,args__9965__auto__);};
code.cljs$lang$maxFixedArity = 0;
code.cljs$lang$applyTo = (function (arglist__12396){
var args__9965__auto__ = cljs.core.seq(arglist__12396);
return code__delegate(args__9965__auto__);
});
code.cljs$core$IFn$_invoke$arity$variadic = code__delegate;
return code;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.col = (function() { 
var col__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11169_12397 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11170_12398 = null;var count__11171_12399 = 0;var i__11172_12400 = 0;while(true){
if((i__11172_12400 < count__11171_12399))
{var arg__9967__auto___12401 = cljs.core._nth.call(null,chunk__11170_12398,i__11172_12400);a__9966__auto__.push(arg__9967__auto___12401);
{
var G__12402 = seq__11169_12397;
var G__12403 = chunk__11170_12398;
var G__12404 = count__11171_12399;
var G__12405 = (i__11172_12400 + 1);
seq__11169_12397 = G__12402;
chunk__11170_12398 = G__12403;
count__11171_12399 = G__12404;
i__11172_12400 = G__12405;
continue;
}
} else
{var temp__4092__auto___12406 = cljs.core.seq.call(null,seq__11169_12397);if(temp__4092__auto___12406)
{var seq__11169_12407__$1 = temp__4092__auto___12406;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11169_12407__$1))
{var c__7246__auto___12408 = cljs.core.chunk_first.call(null,seq__11169_12407__$1);{
var G__12409 = cljs.core.chunk_rest.call(null,seq__11169_12407__$1);
var G__12410 = c__7246__auto___12408;
var G__12411 = cljs.core.count.call(null,c__7246__auto___12408);
var G__12412 = 0;
seq__11169_12397 = G__12409;
chunk__11170_12398 = G__12410;
count__11171_12399 = G__12411;
i__11172_12400 = G__12412;
continue;
}
} else
{var arg__9967__auto___12413 = cljs.core.first.call(null,seq__11169_12407__$1);a__9966__auto__.push(arg__9967__auto___12413);
{
var G__12414 = cljs.core.next.call(null,seq__11169_12407__$1);
var G__12415 = null;
var G__12416 = 0;
var G__12417 = 0;
seq__11169_12397 = G__12414;
chunk__11170_12398 = G__12415;
count__11171_12399 = G__12416;
i__11172_12400 = G__12417;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.col.apply(null,a__9966__auto__);
};
var col = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return col__delegate.call(this,args__9965__auto__);};
col.cljs$lang$maxFixedArity = 0;
col.cljs$lang$applyTo = (function (arglist__12418){
var args__9965__auto__ = cljs.core.seq(arglist__12418);
return col__delegate(args__9965__auto__);
});
col.cljs$core$IFn$_invoke$arity$variadic = col__delegate;
return col;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.colgroup = (function() { 
var colgroup__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11177_12419 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11178_12420 = null;var count__11179_12421 = 0;var i__11180_12422 = 0;while(true){
if((i__11180_12422 < count__11179_12421))
{var arg__9967__auto___12423 = cljs.core._nth.call(null,chunk__11178_12420,i__11180_12422);a__9966__auto__.push(arg__9967__auto___12423);
{
var G__12424 = seq__11177_12419;
var G__12425 = chunk__11178_12420;
var G__12426 = count__11179_12421;
var G__12427 = (i__11180_12422 + 1);
seq__11177_12419 = G__12424;
chunk__11178_12420 = G__12425;
count__11179_12421 = G__12426;
i__11180_12422 = G__12427;
continue;
}
} else
{var temp__4092__auto___12428 = cljs.core.seq.call(null,seq__11177_12419);if(temp__4092__auto___12428)
{var seq__11177_12429__$1 = temp__4092__auto___12428;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11177_12429__$1))
{var c__7246__auto___12430 = cljs.core.chunk_first.call(null,seq__11177_12429__$1);{
var G__12431 = cljs.core.chunk_rest.call(null,seq__11177_12429__$1);
var G__12432 = c__7246__auto___12430;
var G__12433 = cljs.core.count.call(null,c__7246__auto___12430);
var G__12434 = 0;
seq__11177_12419 = G__12431;
chunk__11178_12420 = G__12432;
count__11179_12421 = G__12433;
i__11180_12422 = G__12434;
continue;
}
} else
{var arg__9967__auto___12435 = cljs.core.first.call(null,seq__11177_12429__$1);a__9966__auto__.push(arg__9967__auto___12435);
{
var G__12436 = cljs.core.next.call(null,seq__11177_12429__$1);
var G__12437 = null;
var G__12438 = 0;
var G__12439 = 0;
seq__11177_12419 = G__12436;
chunk__11178_12420 = G__12437;
count__11179_12421 = G__12438;
i__11180_12422 = G__12439;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.colgroup.apply(null,a__9966__auto__);
};
var colgroup = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return colgroup__delegate.call(this,args__9965__auto__);};
colgroup.cljs$lang$maxFixedArity = 0;
colgroup.cljs$lang$applyTo = (function (arglist__12440){
var args__9965__auto__ = cljs.core.seq(arglist__12440);
return colgroup__delegate(args__9965__auto__);
});
colgroup.cljs$core$IFn$_invoke$arity$variadic = colgroup__delegate;
return colgroup;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.data = (function() { 
var data__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11185_12441 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11186_12442 = null;var count__11187_12443 = 0;var i__11188_12444 = 0;while(true){
if((i__11188_12444 < count__11187_12443))
{var arg__9967__auto___12445 = cljs.core._nth.call(null,chunk__11186_12442,i__11188_12444);a__9966__auto__.push(arg__9967__auto___12445);
{
var G__12446 = seq__11185_12441;
var G__12447 = chunk__11186_12442;
var G__12448 = count__11187_12443;
var G__12449 = (i__11188_12444 + 1);
seq__11185_12441 = G__12446;
chunk__11186_12442 = G__12447;
count__11187_12443 = G__12448;
i__11188_12444 = G__12449;
continue;
}
} else
{var temp__4092__auto___12450 = cljs.core.seq.call(null,seq__11185_12441);if(temp__4092__auto___12450)
{var seq__11185_12451__$1 = temp__4092__auto___12450;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11185_12451__$1))
{var c__7246__auto___12452 = cljs.core.chunk_first.call(null,seq__11185_12451__$1);{
var G__12453 = cljs.core.chunk_rest.call(null,seq__11185_12451__$1);
var G__12454 = c__7246__auto___12452;
var G__12455 = cljs.core.count.call(null,c__7246__auto___12452);
var G__12456 = 0;
seq__11185_12441 = G__12453;
chunk__11186_12442 = G__12454;
count__11187_12443 = G__12455;
i__11188_12444 = G__12456;
continue;
}
} else
{var arg__9967__auto___12457 = cljs.core.first.call(null,seq__11185_12451__$1);a__9966__auto__.push(arg__9967__auto___12457);
{
var G__12458 = cljs.core.next.call(null,seq__11185_12451__$1);
var G__12459 = null;
var G__12460 = 0;
var G__12461 = 0;
seq__11185_12441 = G__12458;
chunk__11186_12442 = G__12459;
count__11187_12443 = G__12460;
i__11188_12444 = G__12461;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.data.apply(null,a__9966__auto__);
};
var data = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return data__delegate.call(this,args__9965__auto__);};
data.cljs$lang$maxFixedArity = 0;
data.cljs$lang$applyTo = (function (arglist__12462){
var args__9965__auto__ = cljs.core.seq(arglist__12462);
return data__delegate(args__9965__auto__);
});
data.cljs$core$IFn$_invoke$arity$variadic = data__delegate;
return data;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.datalist = (function() { 
var datalist__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11193_12463 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11194_12464 = null;var count__11195_12465 = 0;var i__11196_12466 = 0;while(true){
if((i__11196_12466 < count__11195_12465))
{var arg__9967__auto___12467 = cljs.core._nth.call(null,chunk__11194_12464,i__11196_12466);a__9966__auto__.push(arg__9967__auto___12467);
{
var G__12468 = seq__11193_12463;
var G__12469 = chunk__11194_12464;
var G__12470 = count__11195_12465;
var G__12471 = (i__11196_12466 + 1);
seq__11193_12463 = G__12468;
chunk__11194_12464 = G__12469;
count__11195_12465 = G__12470;
i__11196_12466 = G__12471;
continue;
}
} else
{var temp__4092__auto___12472 = cljs.core.seq.call(null,seq__11193_12463);if(temp__4092__auto___12472)
{var seq__11193_12473__$1 = temp__4092__auto___12472;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11193_12473__$1))
{var c__7246__auto___12474 = cljs.core.chunk_first.call(null,seq__11193_12473__$1);{
var G__12475 = cljs.core.chunk_rest.call(null,seq__11193_12473__$1);
var G__12476 = c__7246__auto___12474;
var G__12477 = cljs.core.count.call(null,c__7246__auto___12474);
var G__12478 = 0;
seq__11193_12463 = G__12475;
chunk__11194_12464 = G__12476;
count__11195_12465 = G__12477;
i__11196_12466 = G__12478;
continue;
}
} else
{var arg__9967__auto___12479 = cljs.core.first.call(null,seq__11193_12473__$1);a__9966__auto__.push(arg__9967__auto___12479);
{
var G__12480 = cljs.core.next.call(null,seq__11193_12473__$1);
var G__12481 = null;
var G__12482 = 0;
var G__12483 = 0;
seq__11193_12463 = G__12480;
chunk__11194_12464 = G__12481;
count__11195_12465 = G__12482;
i__11196_12466 = G__12483;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.datalist.apply(null,a__9966__auto__);
};
var datalist = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return datalist__delegate.call(this,args__9965__auto__);};
datalist.cljs$lang$maxFixedArity = 0;
datalist.cljs$lang$applyTo = (function (arglist__12484){
var args__9965__auto__ = cljs.core.seq(arglist__12484);
return datalist__delegate(args__9965__auto__);
});
datalist.cljs$core$IFn$_invoke$arity$variadic = datalist__delegate;
return datalist;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.dd = (function() { 
var dd__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11201_12485 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11202_12486 = null;var count__11203_12487 = 0;var i__11204_12488 = 0;while(true){
if((i__11204_12488 < count__11203_12487))
{var arg__9967__auto___12489 = cljs.core._nth.call(null,chunk__11202_12486,i__11204_12488);a__9966__auto__.push(arg__9967__auto___12489);
{
var G__12490 = seq__11201_12485;
var G__12491 = chunk__11202_12486;
var G__12492 = count__11203_12487;
var G__12493 = (i__11204_12488 + 1);
seq__11201_12485 = G__12490;
chunk__11202_12486 = G__12491;
count__11203_12487 = G__12492;
i__11204_12488 = G__12493;
continue;
}
} else
{var temp__4092__auto___12494 = cljs.core.seq.call(null,seq__11201_12485);if(temp__4092__auto___12494)
{var seq__11201_12495__$1 = temp__4092__auto___12494;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11201_12495__$1))
{var c__7246__auto___12496 = cljs.core.chunk_first.call(null,seq__11201_12495__$1);{
var G__12497 = cljs.core.chunk_rest.call(null,seq__11201_12495__$1);
var G__12498 = c__7246__auto___12496;
var G__12499 = cljs.core.count.call(null,c__7246__auto___12496);
var G__12500 = 0;
seq__11201_12485 = G__12497;
chunk__11202_12486 = G__12498;
count__11203_12487 = G__12499;
i__11204_12488 = G__12500;
continue;
}
} else
{var arg__9967__auto___12501 = cljs.core.first.call(null,seq__11201_12495__$1);a__9966__auto__.push(arg__9967__auto___12501);
{
var G__12502 = cljs.core.next.call(null,seq__11201_12495__$1);
var G__12503 = null;
var G__12504 = 0;
var G__12505 = 0;
seq__11201_12485 = G__12502;
chunk__11202_12486 = G__12503;
count__11203_12487 = G__12504;
i__11204_12488 = G__12505;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.dd.apply(null,a__9966__auto__);
};
var dd = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return dd__delegate.call(this,args__9965__auto__);};
dd.cljs$lang$maxFixedArity = 0;
dd.cljs$lang$applyTo = (function (arglist__12506){
var args__9965__auto__ = cljs.core.seq(arglist__12506);
return dd__delegate(args__9965__auto__);
});
dd.cljs$core$IFn$_invoke$arity$variadic = dd__delegate;
return dd;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.del = (function() { 
var del__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11209_12507 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11210_12508 = null;var count__11211_12509 = 0;var i__11212_12510 = 0;while(true){
if((i__11212_12510 < count__11211_12509))
{var arg__9967__auto___12511 = cljs.core._nth.call(null,chunk__11210_12508,i__11212_12510);a__9966__auto__.push(arg__9967__auto___12511);
{
var G__12512 = seq__11209_12507;
var G__12513 = chunk__11210_12508;
var G__12514 = count__11211_12509;
var G__12515 = (i__11212_12510 + 1);
seq__11209_12507 = G__12512;
chunk__11210_12508 = G__12513;
count__11211_12509 = G__12514;
i__11212_12510 = G__12515;
continue;
}
} else
{var temp__4092__auto___12516 = cljs.core.seq.call(null,seq__11209_12507);if(temp__4092__auto___12516)
{var seq__11209_12517__$1 = temp__4092__auto___12516;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11209_12517__$1))
{var c__7246__auto___12518 = cljs.core.chunk_first.call(null,seq__11209_12517__$1);{
var G__12519 = cljs.core.chunk_rest.call(null,seq__11209_12517__$1);
var G__12520 = c__7246__auto___12518;
var G__12521 = cljs.core.count.call(null,c__7246__auto___12518);
var G__12522 = 0;
seq__11209_12507 = G__12519;
chunk__11210_12508 = G__12520;
count__11211_12509 = G__12521;
i__11212_12510 = G__12522;
continue;
}
} else
{var arg__9967__auto___12523 = cljs.core.first.call(null,seq__11209_12517__$1);a__9966__auto__.push(arg__9967__auto___12523);
{
var G__12524 = cljs.core.next.call(null,seq__11209_12517__$1);
var G__12525 = null;
var G__12526 = 0;
var G__12527 = 0;
seq__11209_12507 = G__12524;
chunk__11210_12508 = G__12525;
count__11211_12509 = G__12526;
i__11212_12510 = G__12527;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.del.apply(null,a__9966__auto__);
};
var del = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return del__delegate.call(this,args__9965__auto__);};
del.cljs$lang$maxFixedArity = 0;
del.cljs$lang$applyTo = (function (arglist__12528){
var args__9965__auto__ = cljs.core.seq(arglist__12528);
return del__delegate(args__9965__auto__);
});
del.cljs$core$IFn$_invoke$arity$variadic = del__delegate;
return del;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.details = (function() { 
var details__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11217_12529 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11218_12530 = null;var count__11219_12531 = 0;var i__11220_12532 = 0;while(true){
if((i__11220_12532 < count__11219_12531))
{var arg__9967__auto___12533 = cljs.core._nth.call(null,chunk__11218_12530,i__11220_12532);a__9966__auto__.push(arg__9967__auto___12533);
{
var G__12534 = seq__11217_12529;
var G__12535 = chunk__11218_12530;
var G__12536 = count__11219_12531;
var G__12537 = (i__11220_12532 + 1);
seq__11217_12529 = G__12534;
chunk__11218_12530 = G__12535;
count__11219_12531 = G__12536;
i__11220_12532 = G__12537;
continue;
}
} else
{var temp__4092__auto___12538 = cljs.core.seq.call(null,seq__11217_12529);if(temp__4092__auto___12538)
{var seq__11217_12539__$1 = temp__4092__auto___12538;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11217_12539__$1))
{var c__7246__auto___12540 = cljs.core.chunk_first.call(null,seq__11217_12539__$1);{
var G__12541 = cljs.core.chunk_rest.call(null,seq__11217_12539__$1);
var G__12542 = c__7246__auto___12540;
var G__12543 = cljs.core.count.call(null,c__7246__auto___12540);
var G__12544 = 0;
seq__11217_12529 = G__12541;
chunk__11218_12530 = G__12542;
count__11219_12531 = G__12543;
i__11220_12532 = G__12544;
continue;
}
} else
{var arg__9967__auto___12545 = cljs.core.first.call(null,seq__11217_12539__$1);a__9966__auto__.push(arg__9967__auto___12545);
{
var G__12546 = cljs.core.next.call(null,seq__11217_12539__$1);
var G__12547 = null;
var G__12548 = 0;
var G__12549 = 0;
seq__11217_12529 = G__12546;
chunk__11218_12530 = G__12547;
count__11219_12531 = G__12548;
i__11220_12532 = G__12549;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.details.apply(null,a__9966__auto__);
};
var details = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return details__delegate.call(this,args__9965__auto__);};
details.cljs$lang$maxFixedArity = 0;
details.cljs$lang$applyTo = (function (arglist__12550){
var args__9965__auto__ = cljs.core.seq(arglist__12550);
return details__delegate(args__9965__auto__);
});
details.cljs$core$IFn$_invoke$arity$variadic = details__delegate;
return details;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.dfn = (function() { 
var dfn__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11225_12551 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11226_12552 = null;var count__11227_12553 = 0;var i__11228_12554 = 0;while(true){
if((i__11228_12554 < count__11227_12553))
{var arg__9967__auto___12555 = cljs.core._nth.call(null,chunk__11226_12552,i__11228_12554);a__9966__auto__.push(arg__9967__auto___12555);
{
var G__12556 = seq__11225_12551;
var G__12557 = chunk__11226_12552;
var G__12558 = count__11227_12553;
var G__12559 = (i__11228_12554 + 1);
seq__11225_12551 = G__12556;
chunk__11226_12552 = G__12557;
count__11227_12553 = G__12558;
i__11228_12554 = G__12559;
continue;
}
} else
{var temp__4092__auto___12560 = cljs.core.seq.call(null,seq__11225_12551);if(temp__4092__auto___12560)
{var seq__11225_12561__$1 = temp__4092__auto___12560;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11225_12561__$1))
{var c__7246__auto___12562 = cljs.core.chunk_first.call(null,seq__11225_12561__$1);{
var G__12563 = cljs.core.chunk_rest.call(null,seq__11225_12561__$1);
var G__12564 = c__7246__auto___12562;
var G__12565 = cljs.core.count.call(null,c__7246__auto___12562);
var G__12566 = 0;
seq__11225_12551 = G__12563;
chunk__11226_12552 = G__12564;
count__11227_12553 = G__12565;
i__11228_12554 = G__12566;
continue;
}
} else
{var arg__9967__auto___12567 = cljs.core.first.call(null,seq__11225_12561__$1);a__9966__auto__.push(arg__9967__auto___12567);
{
var G__12568 = cljs.core.next.call(null,seq__11225_12561__$1);
var G__12569 = null;
var G__12570 = 0;
var G__12571 = 0;
seq__11225_12551 = G__12568;
chunk__11226_12552 = G__12569;
count__11227_12553 = G__12570;
i__11228_12554 = G__12571;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.dfn.apply(null,a__9966__auto__);
};
var dfn = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return dfn__delegate.call(this,args__9965__auto__);};
dfn.cljs$lang$maxFixedArity = 0;
dfn.cljs$lang$applyTo = (function (arglist__12572){
var args__9965__auto__ = cljs.core.seq(arglist__12572);
return dfn__delegate(args__9965__auto__);
});
dfn.cljs$core$IFn$_invoke$arity$variadic = dfn__delegate;
return dfn;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.div = (function() { 
var div__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11233_12573 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11234_12574 = null;var count__11235_12575 = 0;var i__11236_12576 = 0;while(true){
if((i__11236_12576 < count__11235_12575))
{var arg__9967__auto___12577 = cljs.core._nth.call(null,chunk__11234_12574,i__11236_12576);a__9966__auto__.push(arg__9967__auto___12577);
{
var G__12578 = seq__11233_12573;
var G__12579 = chunk__11234_12574;
var G__12580 = count__11235_12575;
var G__12581 = (i__11236_12576 + 1);
seq__11233_12573 = G__12578;
chunk__11234_12574 = G__12579;
count__11235_12575 = G__12580;
i__11236_12576 = G__12581;
continue;
}
} else
{var temp__4092__auto___12582 = cljs.core.seq.call(null,seq__11233_12573);if(temp__4092__auto___12582)
{var seq__11233_12583__$1 = temp__4092__auto___12582;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11233_12583__$1))
{var c__7246__auto___12584 = cljs.core.chunk_first.call(null,seq__11233_12583__$1);{
var G__12585 = cljs.core.chunk_rest.call(null,seq__11233_12583__$1);
var G__12586 = c__7246__auto___12584;
var G__12587 = cljs.core.count.call(null,c__7246__auto___12584);
var G__12588 = 0;
seq__11233_12573 = G__12585;
chunk__11234_12574 = G__12586;
count__11235_12575 = G__12587;
i__11236_12576 = G__12588;
continue;
}
} else
{var arg__9967__auto___12589 = cljs.core.first.call(null,seq__11233_12583__$1);a__9966__auto__.push(arg__9967__auto___12589);
{
var G__12590 = cljs.core.next.call(null,seq__11233_12583__$1);
var G__12591 = null;
var G__12592 = 0;
var G__12593 = 0;
seq__11233_12573 = G__12590;
chunk__11234_12574 = G__12591;
count__11235_12575 = G__12592;
i__11236_12576 = G__12593;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.div.apply(null,a__9966__auto__);
};
var div = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return div__delegate.call(this,args__9965__auto__);};
div.cljs$lang$maxFixedArity = 0;
div.cljs$lang$applyTo = (function (arglist__12594){
var args__9965__auto__ = cljs.core.seq(arglist__12594);
return div__delegate(args__9965__auto__);
});
div.cljs$core$IFn$_invoke$arity$variadic = div__delegate;
return div;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.dl = (function() { 
var dl__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11241_12595 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11242_12596 = null;var count__11243_12597 = 0;var i__11244_12598 = 0;while(true){
if((i__11244_12598 < count__11243_12597))
{var arg__9967__auto___12599 = cljs.core._nth.call(null,chunk__11242_12596,i__11244_12598);a__9966__auto__.push(arg__9967__auto___12599);
{
var G__12600 = seq__11241_12595;
var G__12601 = chunk__11242_12596;
var G__12602 = count__11243_12597;
var G__12603 = (i__11244_12598 + 1);
seq__11241_12595 = G__12600;
chunk__11242_12596 = G__12601;
count__11243_12597 = G__12602;
i__11244_12598 = G__12603;
continue;
}
} else
{var temp__4092__auto___12604 = cljs.core.seq.call(null,seq__11241_12595);if(temp__4092__auto___12604)
{var seq__11241_12605__$1 = temp__4092__auto___12604;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11241_12605__$1))
{var c__7246__auto___12606 = cljs.core.chunk_first.call(null,seq__11241_12605__$1);{
var G__12607 = cljs.core.chunk_rest.call(null,seq__11241_12605__$1);
var G__12608 = c__7246__auto___12606;
var G__12609 = cljs.core.count.call(null,c__7246__auto___12606);
var G__12610 = 0;
seq__11241_12595 = G__12607;
chunk__11242_12596 = G__12608;
count__11243_12597 = G__12609;
i__11244_12598 = G__12610;
continue;
}
} else
{var arg__9967__auto___12611 = cljs.core.first.call(null,seq__11241_12605__$1);a__9966__auto__.push(arg__9967__auto___12611);
{
var G__12612 = cljs.core.next.call(null,seq__11241_12605__$1);
var G__12613 = null;
var G__12614 = 0;
var G__12615 = 0;
seq__11241_12595 = G__12612;
chunk__11242_12596 = G__12613;
count__11243_12597 = G__12614;
i__11244_12598 = G__12615;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.dl.apply(null,a__9966__auto__);
};
var dl = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return dl__delegate.call(this,args__9965__auto__);};
dl.cljs$lang$maxFixedArity = 0;
dl.cljs$lang$applyTo = (function (arglist__12616){
var args__9965__auto__ = cljs.core.seq(arglist__12616);
return dl__delegate(args__9965__auto__);
});
dl.cljs$core$IFn$_invoke$arity$variadic = dl__delegate;
return dl;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.dt = (function() { 
var dt__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11249_12617 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11250_12618 = null;var count__11251_12619 = 0;var i__11252_12620 = 0;while(true){
if((i__11252_12620 < count__11251_12619))
{var arg__9967__auto___12621 = cljs.core._nth.call(null,chunk__11250_12618,i__11252_12620);a__9966__auto__.push(arg__9967__auto___12621);
{
var G__12622 = seq__11249_12617;
var G__12623 = chunk__11250_12618;
var G__12624 = count__11251_12619;
var G__12625 = (i__11252_12620 + 1);
seq__11249_12617 = G__12622;
chunk__11250_12618 = G__12623;
count__11251_12619 = G__12624;
i__11252_12620 = G__12625;
continue;
}
} else
{var temp__4092__auto___12626 = cljs.core.seq.call(null,seq__11249_12617);if(temp__4092__auto___12626)
{var seq__11249_12627__$1 = temp__4092__auto___12626;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11249_12627__$1))
{var c__7246__auto___12628 = cljs.core.chunk_first.call(null,seq__11249_12627__$1);{
var G__12629 = cljs.core.chunk_rest.call(null,seq__11249_12627__$1);
var G__12630 = c__7246__auto___12628;
var G__12631 = cljs.core.count.call(null,c__7246__auto___12628);
var G__12632 = 0;
seq__11249_12617 = G__12629;
chunk__11250_12618 = G__12630;
count__11251_12619 = G__12631;
i__11252_12620 = G__12632;
continue;
}
} else
{var arg__9967__auto___12633 = cljs.core.first.call(null,seq__11249_12627__$1);a__9966__auto__.push(arg__9967__auto___12633);
{
var G__12634 = cljs.core.next.call(null,seq__11249_12627__$1);
var G__12635 = null;
var G__12636 = 0;
var G__12637 = 0;
seq__11249_12617 = G__12634;
chunk__11250_12618 = G__12635;
count__11251_12619 = G__12636;
i__11252_12620 = G__12637;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.dt.apply(null,a__9966__auto__);
};
var dt = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return dt__delegate.call(this,args__9965__auto__);};
dt.cljs$lang$maxFixedArity = 0;
dt.cljs$lang$applyTo = (function (arglist__12638){
var args__9965__auto__ = cljs.core.seq(arglist__12638);
return dt__delegate(args__9965__auto__);
});
dt.cljs$core$IFn$_invoke$arity$variadic = dt__delegate;
return dt;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.em = (function() { 
var em__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11257_12639 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11258_12640 = null;var count__11259_12641 = 0;var i__11260_12642 = 0;while(true){
if((i__11260_12642 < count__11259_12641))
{var arg__9967__auto___12643 = cljs.core._nth.call(null,chunk__11258_12640,i__11260_12642);a__9966__auto__.push(arg__9967__auto___12643);
{
var G__12644 = seq__11257_12639;
var G__12645 = chunk__11258_12640;
var G__12646 = count__11259_12641;
var G__12647 = (i__11260_12642 + 1);
seq__11257_12639 = G__12644;
chunk__11258_12640 = G__12645;
count__11259_12641 = G__12646;
i__11260_12642 = G__12647;
continue;
}
} else
{var temp__4092__auto___12648 = cljs.core.seq.call(null,seq__11257_12639);if(temp__4092__auto___12648)
{var seq__11257_12649__$1 = temp__4092__auto___12648;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11257_12649__$1))
{var c__7246__auto___12650 = cljs.core.chunk_first.call(null,seq__11257_12649__$1);{
var G__12651 = cljs.core.chunk_rest.call(null,seq__11257_12649__$1);
var G__12652 = c__7246__auto___12650;
var G__12653 = cljs.core.count.call(null,c__7246__auto___12650);
var G__12654 = 0;
seq__11257_12639 = G__12651;
chunk__11258_12640 = G__12652;
count__11259_12641 = G__12653;
i__11260_12642 = G__12654;
continue;
}
} else
{var arg__9967__auto___12655 = cljs.core.first.call(null,seq__11257_12649__$1);a__9966__auto__.push(arg__9967__auto___12655);
{
var G__12656 = cljs.core.next.call(null,seq__11257_12649__$1);
var G__12657 = null;
var G__12658 = 0;
var G__12659 = 0;
seq__11257_12639 = G__12656;
chunk__11258_12640 = G__12657;
count__11259_12641 = G__12658;
i__11260_12642 = G__12659;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.em.apply(null,a__9966__auto__);
};
var em = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return em__delegate.call(this,args__9965__auto__);};
em.cljs$lang$maxFixedArity = 0;
em.cljs$lang$applyTo = (function (arglist__12660){
var args__9965__auto__ = cljs.core.seq(arglist__12660);
return em__delegate(args__9965__auto__);
});
em.cljs$core$IFn$_invoke$arity$variadic = em__delegate;
return em;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.embed = (function() { 
var embed__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11273_12661 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11274_12662 = null;var count__11275_12663 = 0;var i__11276_12664 = 0;while(true){
if((i__11276_12664 < count__11275_12663))
{var arg__9967__auto___12665 = cljs.core._nth.call(null,chunk__11274_12662,i__11276_12664);a__9966__auto__.push(arg__9967__auto___12665);
{
var G__12666 = seq__11273_12661;
var G__12667 = chunk__11274_12662;
var G__12668 = count__11275_12663;
var G__12669 = (i__11276_12664 + 1);
seq__11273_12661 = G__12666;
chunk__11274_12662 = G__12667;
count__11275_12663 = G__12668;
i__11276_12664 = G__12669;
continue;
}
} else
{var temp__4092__auto___12670 = cljs.core.seq.call(null,seq__11273_12661);if(temp__4092__auto___12670)
{var seq__11273_12671__$1 = temp__4092__auto___12670;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11273_12671__$1))
{var c__7246__auto___12672 = cljs.core.chunk_first.call(null,seq__11273_12671__$1);{
var G__12673 = cljs.core.chunk_rest.call(null,seq__11273_12671__$1);
var G__12674 = c__7246__auto___12672;
var G__12675 = cljs.core.count.call(null,c__7246__auto___12672);
var G__12676 = 0;
seq__11273_12661 = G__12673;
chunk__11274_12662 = G__12674;
count__11275_12663 = G__12675;
i__11276_12664 = G__12676;
continue;
}
} else
{var arg__9967__auto___12677 = cljs.core.first.call(null,seq__11273_12671__$1);a__9966__auto__.push(arg__9967__auto___12677);
{
var G__12678 = cljs.core.next.call(null,seq__11273_12671__$1);
var G__12679 = null;
var G__12680 = 0;
var G__12681 = 0;
seq__11273_12661 = G__12678;
chunk__11274_12662 = G__12679;
count__11275_12663 = G__12680;
i__11276_12664 = G__12681;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.embed.apply(null,a__9966__auto__);
};
var embed = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return embed__delegate.call(this,args__9965__auto__);};
embed.cljs$lang$maxFixedArity = 0;
embed.cljs$lang$applyTo = (function (arglist__12682){
var args__9965__auto__ = cljs.core.seq(arglist__12682);
return embed__delegate(args__9965__auto__);
});
embed.cljs$core$IFn$_invoke$arity$variadic = embed__delegate;
return embed;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.fieldset = (function() { 
var fieldset__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11281_12683 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11282_12684 = null;var count__11283_12685 = 0;var i__11284_12686 = 0;while(true){
if((i__11284_12686 < count__11283_12685))
{var arg__9967__auto___12687 = cljs.core._nth.call(null,chunk__11282_12684,i__11284_12686);a__9966__auto__.push(arg__9967__auto___12687);
{
var G__12688 = seq__11281_12683;
var G__12689 = chunk__11282_12684;
var G__12690 = count__11283_12685;
var G__12691 = (i__11284_12686 + 1);
seq__11281_12683 = G__12688;
chunk__11282_12684 = G__12689;
count__11283_12685 = G__12690;
i__11284_12686 = G__12691;
continue;
}
} else
{var temp__4092__auto___12692 = cljs.core.seq.call(null,seq__11281_12683);if(temp__4092__auto___12692)
{var seq__11281_12693__$1 = temp__4092__auto___12692;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11281_12693__$1))
{var c__7246__auto___12694 = cljs.core.chunk_first.call(null,seq__11281_12693__$1);{
var G__12695 = cljs.core.chunk_rest.call(null,seq__11281_12693__$1);
var G__12696 = c__7246__auto___12694;
var G__12697 = cljs.core.count.call(null,c__7246__auto___12694);
var G__12698 = 0;
seq__11281_12683 = G__12695;
chunk__11282_12684 = G__12696;
count__11283_12685 = G__12697;
i__11284_12686 = G__12698;
continue;
}
} else
{var arg__9967__auto___12699 = cljs.core.first.call(null,seq__11281_12693__$1);a__9966__auto__.push(arg__9967__auto___12699);
{
var G__12700 = cljs.core.next.call(null,seq__11281_12693__$1);
var G__12701 = null;
var G__12702 = 0;
var G__12703 = 0;
seq__11281_12683 = G__12700;
chunk__11282_12684 = G__12701;
count__11283_12685 = G__12702;
i__11284_12686 = G__12703;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.fieldset.apply(null,a__9966__auto__);
};
var fieldset = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return fieldset__delegate.call(this,args__9965__auto__);};
fieldset.cljs$lang$maxFixedArity = 0;
fieldset.cljs$lang$applyTo = (function (arglist__12704){
var args__9965__auto__ = cljs.core.seq(arglist__12704);
return fieldset__delegate(args__9965__auto__);
});
fieldset.cljs$core$IFn$_invoke$arity$variadic = fieldset__delegate;
return fieldset;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.figcaption = (function() { 
var figcaption__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11289_12705 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11290_12706 = null;var count__11291_12707 = 0;var i__11292_12708 = 0;while(true){
if((i__11292_12708 < count__11291_12707))
{var arg__9967__auto___12709 = cljs.core._nth.call(null,chunk__11290_12706,i__11292_12708);a__9966__auto__.push(arg__9967__auto___12709);
{
var G__12710 = seq__11289_12705;
var G__12711 = chunk__11290_12706;
var G__12712 = count__11291_12707;
var G__12713 = (i__11292_12708 + 1);
seq__11289_12705 = G__12710;
chunk__11290_12706 = G__12711;
count__11291_12707 = G__12712;
i__11292_12708 = G__12713;
continue;
}
} else
{var temp__4092__auto___12714 = cljs.core.seq.call(null,seq__11289_12705);if(temp__4092__auto___12714)
{var seq__11289_12715__$1 = temp__4092__auto___12714;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11289_12715__$1))
{var c__7246__auto___12716 = cljs.core.chunk_first.call(null,seq__11289_12715__$1);{
var G__12717 = cljs.core.chunk_rest.call(null,seq__11289_12715__$1);
var G__12718 = c__7246__auto___12716;
var G__12719 = cljs.core.count.call(null,c__7246__auto___12716);
var G__12720 = 0;
seq__11289_12705 = G__12717;
chunk__11290_12706 = G__12718;
count__11291_12707 = G__12719;
i__11292_12708 = G__12720;
continue;
}
} else
{var arg__9967__auto___12721 = cljs.core.first.call(null,seq__11289_12715__$1);a__9966__auto__.push(arg__9967__auto___12721);
{
var G__12722 = cljs.core.next.call(null,seq__11289_12715__$1);
var G__12723 = null;
var G__12724 = 0;
var G__12725 = 0;
seq__11289_12705 = G__12722;
chunk__11290_12706 = G__12723;
count__11291_12707 = G__12724;
i__11292_12708 = G__12725;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.figcaption.apply(null,a__9966__auto__);
};
var figcaption = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return figcaption__delegate.call(this,args__9965__auto__);};
figcaption.cljs$lang$maxFixedArity = 0;
figcaption.cljs$lang$applyTo = (function (arglist__12726){
var args__9965__auto__ = cljs.core.seq(arglist__12726);
return figcaption__delegate(args__9965__auto__);
});
figcaption.cljs$core$IFn$_invoke$arity$variadic = figcaption__delegate;
return figcaption;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.figure = (function() { 
var figure__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11297_12727 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11298_12728 = null;var count__11299_12729 = 0;var i__11300_12730 = 0;while(true){
if((i__11300_12730 < count__11299_12729))
{var arg__9967__auto___12731 = cljs.core._nth.call(null,chunk__11298_12728,i__11300_12730);a__9966__auto__.push(arg__9967__auto___12731);
{
var G__12732 = seq__11297_12727;
var G__12733 = chunk__11298_12728;
var G__12734 = count__11299_12729;
var G__12735 = (i__11300_12730 + 1);
seq__11297_12727 = G__12732;
chunk__11298_12728 = G__12733;
count__11299_12729 = G__12734;
i__11300_12730 = G__12735;
continue;
}
} else
{var temp__4092__auto___12736 = cljs.core.seq.call(null,seq__11297_12727);if(temp__4092__auto___12736)
{var seq__11297_12737__$1 = temp__4092__auto___12736;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11297_12737__$1))
{var c__7246__auto___12738 = cljs.core.chunk_first.call(null,seq__11297_12737__$1);{
var G__12739 = cljs.core.chunk_rest.call(null,seq__11297_12737__$1);
var G__12740 = c__7246__auto___12738;
var G__12741 = cljs.core.count.call(null,c__7246__auto___12738);
var G__12742 = 0;
seq__11297_12727 = G__12739;
chunk__11298_12728 = G__12740;
count__11299_12729 = G__12741;
i__11300_12730 = G__12742;
continue;
}
} else
{var arg__9967__auto___12743 = cljs.core.first.call(null,seq__11297_12737__$1);a__9966__auto__.push(arg__9967__auto___12743);
{
var G__12744 = cljs.core.next.call(null,seq__11297_12737__$1);
var G__12745 = null;
var G__12746 = 0;
var G__12747 = 0;
seq__11297_12727 = G__12744;
chunk__11298_12728 = G__12745;
count__11299_12729 = G__12746;
i__11300_12730 = G__12747;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.figure.apply(null,a__9966__auto__);
};
var figure = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return figure__delegate.call(this,args__9965__auto__);};
figure.cljs$lang$maxFixedArity = 0;
figure.cljs$lang$applyTo = (function (arglist__12748){
var args__9965__auto__ = cljs.core.seq(arglist__12748);
return figure__delegate(args__9965__auto__);
});
figure.cljs$core$IFn$_invoke$arity$variadic = figure__delegate;
return figure;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.footer = (function() { 
var footer__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11305_12749 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11306_12750 = null;var count__11307_12751 = 0;var i__11308_12752 = 0;while(true){
if((i__11308_12752 < count__11307_12751))
{var arg__9967__auto___12753 = cljs.core._nth.call(null,chunk__11306_12750,i__11308_12752);a__9966__auto__.push(arg__9967__auto___12753);
{
var G__12754 = seq__11305_12749;
var G__12755 = chunk__11306_12750;
var G__12756 = count__11307_12751;
var G__12757 = (i__11308_12752 + 1);
seq__11305_12749 = G__12754;
chunk__11306_12750 = G__12755;
count__11307_12751 = G__12756;
i__11308_12752 = G__12757;
continue;
}
} else
{var temp__4092__auto___12758 = cljs.core.seq.call(null,seq__11305_12749);if(temp__4092__auto___12758)
{var seq__11305_12759__$1 = temp__4092__auto___12758;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11305_12759__$1))
{var c__7246__auto___12760 = cljs.core.chunk_first.call(null,seq__11305_12759__$1);{
var G__12761 = cljs.core.chunk_rest.call(null,seq__11305_12759__$1);
var G__12762 = c__7246__auto___12760;
var G__12763 = cljs.core.count.call(null,c__7246__auto___12760);
var G__12764 = 0;
seq__11305_12749 = G__12761;
chunk__11306_12750 = G__12762;
count__11307_12751 = G__12763;
i__11308_12752 = G__12764;
continue;
}
} else
{var arg__9967__auto___12765 = cljs.core.first.call(null,seq__11305_12759__$1);a__9966__auto__.push(arg__9967__auto___12765);
{
var G__12766 = cljs.core.next.call(null,seq__11305_12759__$1);
var G__12767 = null;
var G__12768 = 0;
var G__12769 = 0;
seq__11305_12749 = G__12766;
chunk__11306_12750 = G__12767;
count__11307_12751 = G__12768;
i__11308_12752 = G__12769;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.footer.apply(null,a__9966__auto__);
};
var footer = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return footer__delegate.call(this,args__9965__auto__);};
footer.cljs$lang$maxFixedArity = 0;
footer.cljs$lang$applyTo = (function (arglist__12770){
var args__9965__auto__ = cljs.core.seq(arglist__12770);
return footer__delegate(args__9965__auto__);
});
footer.cljs$core$IFn$_invoke$arity$variadic = footer__delegate;
return footer;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.form = (function() { 
var form__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11313_12771 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11314_12772 = null;var count__11315_12773 = 0;var i__11316_12774 = 0;while(true){
if((i__11316_12774 < count__11315_12773))
{var arg__9967__auto___12775 = cljs.core._nth.call(null,chunk__11314_12772,i__11316_12774);a__9966__auto__.push(arg__9967__auto___12775);
{
var G__12776 = seq__11313_12771;
var G__12777 = chunk__11314_12772;
var G__12778 = count__11315_12773;
var G__12779 = (i__11316_12774 + 1);
seq__11313_12771 = G__12776;
chunk__11314_12772 = G__12777;
count__11315_12773 = G__12778;
i__11316_12774 = G__12779;
continue;
}
} else
{var temp__4092__auto___12780 = cljs.core.seq.call(null,seq__11313_12771);if(temp__4092__auto___12780)
{var seq__11313_12781__$1 = temp__4092__auto___12780;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11313_12781__$1))
{var c__7246__auto___12782 = cljs.core.chunk_first.call(null,seq__11313_12781__$1);{
var G__12783 = cljs.core.chunk_rest.call(null,seq__11313_12781__$1);
var G__12784 = c__7246__auto___12782;
var G__12785 = cljs.core.count.call(null,c__7246__auto___12782);
var G__12786 = 0;
seq__11313_12771 = G__12783;
chunk__11314_12772 = G__12784;
count__11315_12773 = G__12785;
i__11316_12774 = G__12786;
continue;
}
} else
{var arg__9967__auto___12787 = cljs.core.first.call(null,seq__11313_12781__$1);a__9966__auto__.push(arg__9967__auto___12787);
{
var G__12788 = cljs.core.next.call(null,seq__11313_12781__$1);
var G__12789 = null;
var G__12790 = 0;
var G__12791 = 0;
seq__11313_12771 = G__12788;
chunk__11314_12772 = G__12789;
count__11315_12773 = G__12790;
i__11316_12774 = G__12791;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.form.apply(null,a__9966__auto__);
};
var form = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return form__delegate.call(this,args__9965__auto__);};
form.cljs$lang$maxFixedArity = 0;
form.cljs$lang$applyTo = (function (arglist__12792){
var args__9965__auto__ = cljs.core.seq(arglist__12792);
return form__delegate(args__9965__auto__);
});
form.cljs$core$IFn$_invoke$arity$variadic = form__delegate;
return form;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.h1 = (function() { 
var h1__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11321_12793 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11322_12794 = null;var count__11323_12795 = 0;var i__11324_12796 = 0;while(true){
if((i__11324_12796 < count__11323_12795))
{var arg__9967__auto___12797 = cljs.core._nth.call(null,chunk__11322_12794,i__11324_12796);a__9966__auto__.push(arg__9967__auto___12797);
{
var G__12798 = seq__11321_12793;
var G__12799 = chunk__11322_12794;
var G__12800 = count__11323_12795;
var G__12801 = (i__11324_12796 + 1);
seq__11321_12793 = G__12798;
chunk__11322_12794 = G__12799;
count__11323_12795 = G__12800;
i__11324_12796 = G__12801;
continue;
}
} else
{var temp__4092__auto___12802 = cljs.core.seq.call(null,seq__11321_12793);if(temp__4092__auto___12802)
{var seq__11321_12803__$1 = temp__4092__auto___12802;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11321_12803__$1))
{var c__7246__auto___12804 = cljs.core.chunk_first.call(null,seq__11321_12803__$1);{
var G__12805 = cljs.core.chunk_rest.call(null,seq__11321_12803__$1);
var G__12806 = c__7246__auto___12804;
var G__12807 = cljs.core.count.call(null,c__7246__auto___12804);
var G__12808 = 0;
seq__11321_12793 = G__12805;
chunk__11322_12794 = G__12806;
count__11323_12795 = G__12807;
i__11324_12796 = G__12808;
continue;
}
} else
{var arg__9967__auto___12809 = cljs.core.first.call(null,seq__11321_12803__$1);a__9966__auto__.push(arg__9967__auto___12809);
{
var G__12810 = cljs.core.next.call(null,seq__11321_12803__$1);
var G__12811 = null;
var G__12812 = 0;
var G__12813 = 0;
seq__11321_12793 = G__12810;
chunk__11322_12794 = G__12811;
count__11323_12795 = G__12812;
i__11324_12796 = G__12813;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.h1.apply(null,a__9966__auto__);
};
var h1 = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return h1__delegate.call(this,args__9965__auto__);};
h1.cljs$lang$maxFixedArity = 0;
h1.cljs$lang$applyTo = (function (arglist__12814){
var args__9965__auto__ = cljs.core.seq(arglist__12814);
return h1__delegate(args__9965__auto__);
});
h1.cljs$core$IFn$_invoke$arity$variadic = h1__delegate;
return h1;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.h2 = (function() { 
var h2__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11329_12815 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11330_12816 = null;var count__11331_12817 = 0;var i__11332_12818 = 0;while(true){
if((i__11332_12818 < count__11331_12817))
{var arg__9967__auto___12819 = cljs.core._nth.call(null,chunk__11330_12816,i__11332_12818);a__9966__auto__.push(arg__9967__auto___12819);
{
var G__12820 = seq__11329_12815;
var G__12821 = chunk__11330_12816;
var G__12822 = count__11331_12817;
var G__12823 = (i__11332_12818 + 1);
seq__11329_12815 = G__12820;
chunk__11330_12816 = G__12821;
count__11331_12817 = G__12822;
i__11332_12818 = G__12823;
continue;
}
} else
{var temp__4092__auto___12824 = cljs.core.seq.call(null,seq__11329_12815);if(temp__4092__auto___12824)
{var seq__11329_12825__$1 = temp__4092__auto___12824;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11329_12825__$1))
{var c__7246__auto___12826 = cljs.core.chunk_first.call(null,seq__11329_12825__$1);{
var G__12827 = cljs.core.chunk_rest.call(null,seq__11329_12825__$1);
var G__12828 = c__7246__auto___12826;
var G__12829 = cljs.core.count.call(null,c__7246__auto___12826);
var G__12830 = 0;
seq__11329_12815 = G__12827;
chunk__11330_12816 = G__12828;
count__11331_12817 = G__12829;
i__11332_12818 = G__12830;
continue;
}
} else
{var arg__9967__auto___12831 = cljs.core.first.call(null,seq__11329_12825__$1);a__9966__auto__.push(arg__9967__auto___12831);
{
var G__12832 = cljs.core.next.call(null,seq__11329_12825__$1);
var G__12833 = null;
var G__12834 = 0;
var G__12835 = 0;
seq__11329_12815 = G__12832;
chunk__11330_12816 = G__12833;
count__11331_12817 = G__12834;
i__11332_12818 = G__12835;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.h2.apply(null,a__9966__auto__);
};
var h2 = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return h2__delegate.call(this,args__9965__auto__);};
h2.cljs$lang$maxFixedArity = 0;
h2.cljs$lang$applyTo = (function (arglist__12836){
var args__9965__auto__ = cljs.core.seq(arglist__12836);
return h2__delegate(args__9965__auto__);
});
h2.cljs$core$IFn$_invoke$arity$variadic = h2__delegate;
return h2;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.h3 = (function() { 
var h3__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11337_12837 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11338_12838 = null;var count__11339_12839 = 0;var i__11340_12840 = 0;while(true){
if((i__11340_12840 < count__11339_12839))
{var arg__9967__auto___12841 = cljs.core._nth.call(null,chunk__11338_12838,i__11340_12840);a__9966__auto__.push(arg__9967__auto___12841);
{
var G__12842 = seq__11337_12837;
var G__12843 = chunk__11338_12838;
var G__12844 = count__11339_12839;
var G__12845 = (i__11340_12840 + 1);
seq__11337_12837 = G__12842;
chunk__11338_12838 = G__12843;
count__11339_12839 = G__12844;
i__11340_12840 = G__12845;
continue;
}
} else
{var temp__4092__auto___12846 = cljs.core.seq.call(null,seq__11337_12837);if(temp__4092__auto___12846)
{var seq__11337_12847__$1 = temp__4092__auto___12846;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11337_12847__$1))
{var c__7246__auto___12848 = cljs.core.chunk_first.call(null,seq__11337_12847__$1);{
var G__12849 = cljs.core.chunk_rest.call(null,seq__11337_12847__$1);
var G__12850 = c__7246__auto___12848;
var G__12851 = cljs.core.count.call(null,c__7246__auto___12848);
var G__12852 = 0;
seq__11337_12837 = G__12849;
chunk__11338_12838 = G__12850;
count__11339_12839 = G__12851;
i__11340_12840 = G__12852;
continue;
}
} else
{var arg__9967__auto___12853 = cljs.core.first.call(null,seq__11337_12847__$1);a__9966__auto__.push(arg__9967__auto___12853);
{
var G__12854 = cljs.core.next.call(null,seq__11337_12847__$1);
var G__12855 = null;
var G__12856 = 0;
var G__12857 = 0;
seq__11337_12837 = G__12854;
chunk__11338_12838 = G__12855;
count__11339_12839 = G__12856;
i__11340_12840 = G__12857;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.h3.apply(null,a__9966__auto__);
};
var h3 = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return h3__delegate.call(this,args__9965__auto__);};
h3.cljs$lang$maxFixedArity = 0;
h3.cljs$lang$applyTo = (function (arglist__12858){
var args__9965__auto__ = cljs.core.seq(arglist__12858);
return h3__delegate(args__9965__auto__);
});
h3.cljs$core$IFn$_invoke$arity$variadic = h3__delegate;
return h3;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.h4 = (function() { 
var h4__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11345_12859 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11346_12860 = null;var count__11347_12861 = 0;var i__11348_12862 = 0;while(true){
if((i__11348_12862 < count__11347_12861))
{var arg__9967__auto___12863 = cljs.core._nth.call(null,chunk__11346_12860,i__11348_12862);a__9966__auto__.push(arg__9967__auto___12863);
{
var G__12864 = seq__11345_12859;
var G__12865 = chunk__11346_12860;
var G__12866 = count__11347_12861;
var G__12867 = (i__11348_12862 + 1);
seq__11345_12859 = G__12864;
chunk__11346_12860 = G__12865;
count__11347_12861 = G__12866;
i__11348_12862 = G__12867;
continue;
}
} else
{var temp__4092__auto___12868 = cljs.core.seq.call(null,seq__11345_12859);if(temp__4092__auto___12868)
{var seq__11345_12869__$1 = temp__4092__auto___12868;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11345_12869__$1))
{var c__7246__auto___12870 = cljs.core.chunk_first.call(null,seq__11345_12869__$1);{
var G__12871 = cljs.core.chunk_rest.call(null,seq__11345_12869__$1);
var G__12872 = c__7246__auto___12870;
var G__12873 = cljs.core.count.call(null,c__7246__auto___12870);
var G__12874 = 0;
seq__11345_12859 = G__12871;
chunk__11346_12860 = G__12872;
count__11347_12861 = G__12873;
i__11348_12862 = G__12874;
continue;
}
} else
{var arg__9967__auto___12875 = cljs.core.first.call(null,seq__11345_12869__$1);a__9966__auto__.push(arg__9967__auto___12875);
{
var G__12876 = cljs.core.next.call(null,seq__11345_12869__$1);
var G__12877 = null;
var G__12878 = 0;
var G__12879 = 0;
seq__11345_12859 = G__12876;
chunk__11346_12860 = G__12877;
count__11347_12861 = G__12878;
i__11348_12862 = G__12879;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.h4.apply(null,a__9966__auto__);
};
var h4 = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return h4__delegate.call(this,args__9965__auto__);};
h4.cljs$lang$maxFixedArity = 0;
h4.cljs$lang$applyTo = (function (arglist__12880){
var args__9965__auto__ = cljs.core.seq(arglist__12880);
return h4__delegate(args__9965__auto__);
});
h4.cljs$core$IFn$_invoke$arity$variadic = h4__delegate;
return h4;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.h5 = (function() { 
var h5__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11353_12881 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11354_12882 = null;var count__11355_12883 = 0;var i__11356_12884 = 0;while(true){
if((i__11356_12884 < count__11355_12883))
{var arg__9967__auto___12885 = cljs.core._nth.call(null,chunk__11354_12882,i__11356_12884);a__9966__auto__.push(arg__9967__auto___12885);
{
var G__12886 = seq__11353_12881;
var G__12887 = chunk__11354_12882;
var G__12888 = count__11355_12883;
var G__12889 = (i__11356_12884 + 1);
seq__11353_12881 = G__12886;
chunk__11354_12882 = G__12887;
count__11355_12883 = G__12888;
i__11356_12884 = G__12889;
continue;
}
} else
{var temp__4092__auto___12890 = cljs.core.seq.call(null,seq__11353_12881);if(temp__4092__auto___12890)
{var seq__11353_12891__$1 = temp__4092__auto___12890;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11353_12891__$1))
{var c__7246__auto___12892 = cljs.core.chunk_first.call(null,seq__11353_12891__$1);{
var G__12893 = cljs.core.chunk_rest.call(null,seq__11353_12891__$1);
var G__12894 = c__7246__auto___12892;
var G__12895 = cljs.core.count.call(null,c__7246__auto___12892);
var G__12896 = 0;
seq__11353_12881 = G__12893;
chunk__11354_12882 = G__12894;
count__11355_12883 = G__12895;
i__11356_12884 = G__12896;
continue;
}
} else
{var arg__9967__auto___12897 = cljs.core.first.call(null,seq__11353_12891__$1);a__9966__auto__.push(arg__9967__auto___12897);
{
var G__12898 = cljs.core.next.call(null,seq__11353_12891__$1);
var G__12899 = null;
var G__12900 = 0;
var G__12901 = 0;
seq__11353_12881 = G__12898;
chunk__11354_12882 = G__12899;
count__11355_12883 = G__12900;
i__11356_12884 = G__12901;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.h5.apply(null,a__9966__auto__);
};
var h5 = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return h5__delegate.call(this,args__9965__auto__);};
h5.cljs$lang$maxFixedArity = 0;
h5.cljs$lang$applyTo = (function (arglist__12902){
var args__9965__auto__ = cljs.core.seq(arglist__12902);
return h5__delegate(args__9965__auto__);
});
h5.cljs$core$IFn$_invoke$arity$variadic = h5__delegate;
return h5;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.h6 = (function() { 
var h6__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11361_12903 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11362_12904 = null;var count__11363_12905 = 0;var i__11364_12906 = 0;while(true){
if((i__11364_12906 < count__11363_12905))
{var arg__9967__auto___12907 = cljs.core._nth.call(null,chunk__11362_12904,i__11364_12906);a__9966__auto__.push(arg__9967__auto___12907);
{
var G__12908 = seq__11361_12903;
var G__12909 = chunk__11362_12904;
var G__12910 = count__11363_12905;
var G__12911 = (i__11364_12906 + 1);
seq__11361_12903 = G__12908;
chunk__11362_12904 = G__12909;
count__11363_12905 = G__12910;
i__11364_12906 = G__12911;
continue;
}
} else
{var temp__4092__auto___12912 = cljs.core.seq.call(null,seq__11361_12903);if(temp__4092__auto___12912)
{var seq__11361_12913__$1 = temp__4092__auto___12912;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11361_12913__$1))
{var c__7246__auto___12914 = cljs.core.chunk_first.call(null,seq__11361_12913__$1);{
var G__12915 = cljs.core.chunk_rest.call(null,seq__11361_12913__$1);
var G__12916 = c__7246__auto___12914;
var G__12917 = cljs.core.count.call(null,c__7246__auto___12914);
var G__12918 = 0;
seq__11361_12903 = G__12915;
chunk__11362_12904 = G__12916;
count__11363_12905 = G__12917;
i__11364_12906 = G__12918;
continue;
}
} else
{var arg__9967__auto___12919 = cljs.core.first.call(null,seq__11361_12913__$1);a__9966__auto__.push(arg__9967__auto___12919);
{
var G__12920 = cljs.core.next.call(null,seq__11361_12913__$1);
var G__12921 = null;
var G__12922 = 0;
var G__12923 = 0;
seq__11361_12903 = G__12920;
chunk__11362_12904 = G__12921;
count__11363_12905 = G__12922;
i__11364_12906 = G__12923;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.h6.apply(null,a__9966__auto__);
};
var h6 = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return h6__delegate.call(this,args__9965__auto__);};
h6.cljs$lang$maxFixedArity = 0;
h6.cljs$lang$applyTo = (function (arglist__12924){
var args__9965__auto__ = cljs.core.seq(arglist__12924);
return h6__delegate(args__9965__auto__);
});
h6.cljs$core$IFn$_invoke$arity$variadic = h6__delegate;
return h6;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.head = (function() { 
var head__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11369_12925 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11370_12926 = null;var count__11371_12927 = 0;var i__11372_12928 = 0;while(true){
if((i__11372_12928 < count__11371_12927))
{var arg__9967__auto___12929 = cljs.core._nth.call(null,chunk__11370_12926,i__11372_12928);a__9966__auto__.push(arg__9967__auto___12929);
{
var G__12930 = seq__11369_12925;
var G__12931 = chunk__11370_12926;
var G__12932 = count__11371_12927;
var G__12933 = (i__11372_12928 + 1);
seq__11369_12925 = G__12930;
chunk__11370_12926 = G__12931;
count__11371_12927 = G__12932;
i__11372_12928 = G__12933;
continue;
}
} else
{var temp__4092__auto___12934 = cljs.core.seq.call(null,seq__11369_12925);if(temp__4092__auto___12934)
{var seq__11369_12935__$1 = temp__4092__auto___12934;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11369_12935__$1))
{var c__7246__auto___12936 = cljs.core.chunk_first.call(null,seq__11369_12935__$1);{
var G__12937 = cljs.core.chunk_rest.call(null,seq__11369_12935__$1);
var G__12938 = c__7246__auto___12936;
var G__12939 = cljs.core.count.call(null,c__7246__auto___12936);
var G__12940 = 0;
seq__11369_12925 = G__12937;
chunk__11370_12926 = G__12938;
count__11371_12927 = G__12939;
i__11372_12928 = G__12940;
continue;
}
} else
{var arg__9967__auto___12941 = cljs.core.first.call(null,seq__11369_12935__$1);a__9966__auto__.push(arg__9967__auto___12941);
{
var G__12942 = cljs.core.next.call(null,seq__11369_12935__$1);
var G__12943 = null;
var G__12944 = 0;
var G__12945 = 0;
seq__11369_12925 = G__12942;
chunk__11370_12926 = G__12943;
count__11371_12927 = G__12944;
i__11372_12928 = G__12945;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.head.apply(null,a__9966__auto__);
};
var head = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return head__delegate.call(this,args__9965__auto__);};
head.cljs$lang$maxFixedArity = 0;
head.cljs$lang$applyTo = (function (arglist__12946){
var args__9965__auto__ = cljs.core.seq(arglist__12946);
return head__delegate(args__9965__auto__);
});
head.cljs$core$IFn$_invoke$arity$variadic = head__delegate;
return head;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.header = (function() { 
var header__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11377_12947 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11378_12948 = null;var count__11379_12949 = 0;var i__11380_12950 = 0;while(true){
if((i__11380_12950 < count__11379_12949))
{var arg__9967__auto___12951 = cljs.core._nth.call(null,chunk__11378_12948,i__11380_12950);a__9966__auto__.push(arg__9967__auto___12951);
{
var G__12952 = seq__11377_12947;
var G__12953 = chunk__11378_12948;
var G__12954 = count__11379_12949;
var G__12955 = (i__11380_12950 + 1);
seq__11377_12947 = G__12952;
chunk__11378_12948 = G__12953;
count__11379_12949 = G__12954;
i__11380_12950 = G__12955;
continue;
}
} else
{var temp__4092__auto___12956 = cljs.core.seq.call(null,seq__11377_12947);if(temp__4092__auto___12956)
{var seq__11377_12957__$1 = temp__4092__auto___12956;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11377_12957__$1))
{var c__7246__auto___12958 = cljs.core.chunk_first.call(null,seq__11377_12957__$1);{
var G__12959 = cljs.core.chunk_rest.call(null,seq__11377_12957__$1);
var G__12960 = c__7246__auto___12958;
var G__12961 = cljs.core.count.call(null,c__7246__auto___12958);
var G__12962 = 0;
seq__11377_12947 = G__12959;
chunk__11378_12948 = G__12960;
count__11379_12949 = G__12961;
i__11380_12950 = G__12962;
continue;
}
} else
{var arg__9967__auto___12963 = cljs.core.first.call(null,seq__11377_12957__$1);a__9966__auto__.push(arg__9967__auto___12963);
{
var G__12964 = cljs.core.next.call(null,seq__11377_12957__$1);
var G__12965 = null;
var G__12966 = 0;
var G__12967 = 0;
seq__11377_12947 = G__12964;
chunk__11378_12948 = G__12965;
count__11379_12949 = G__12966;
i__11380_12950 = G__12967;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.header.apply(null,a__9966__auto__);
};
var header = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return header__delegate.call(this,args__9965__auto__);};
header.cljs$lang$maxFixedArity = 0;
header.cljs$lang$applyTo = (function (arglist__12968){
var args__9965__auto__ = cljs.core.seq(arglist__12968);
return header__delegate(args__9965__auto__);
});
header.cljs$core$IFn$_invoke$arity$variadic = header__delegate;
return header;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.hr = (function() { 
var hr__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11385_12969 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11386_12970 = null;var count__11387_12971 = 0;var i__11388_12972 = 0;while(true){
if((i__11388_12972 < count__11387_12971))
{var arg__9967__auto___12973 = cljs.core._nth.call(null,chunk__11386_12970,i__11388_12972);a__9966__auto__.push(arg__9967__auto___12973);
{
var G__12974 = seq__11385_12969;
var G__12975 = chunk__11386_12970;
var G__12976 = count__11387_12971;
var G__12977 = (i__11388_12972 + 1);
seq__11385_12969 = G__12974;
chunk__11386_12970 = G__12975;
count__11387_12971 = G__12976;
i__11388_12972 = G__12977;
continue;
}
} else
{var temp__4092__auto___12978 = cljs.core.seq.call(null,seq__11385_12969);if(temp__4092__auto___12978)
{var seq__11385_12979__$1 = temp__4092__auto___12978;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11385_12979__$1))
{var c__7246__auto___12980 = cljs.core.chunk_first.call(null,seq__11385_12979__$1);{
var G__12981 = cljs.core.chunk_rest.call(null,seq__11385_12979__$1);
var G__12982 = c__7246__auto___12980;
var G__12983 = cljs.core.count.call(null,c__7246__auto___12980);
var G__12984 = 0;
seq__11385_12969 = G__12981;
chunk__11386_12970 = G__12982;
count__11387_12971 = G__12983;
i__11388_12972 = G__12984;
continue;
}
} else
{var arg__9967__auto___12985 = cljs.core.first.call(null,seq__11385_12979__$1);a__9966__auto__.push(arg__9967__auto___12985);
{
var G__12986 = cljs.core.next.call(null,seq__11385_12979__$1);
var G__12987 = null;
var G__12988 = 0;
var G__12989 = 0;
seq__11385_12969 = G__12986;
chunk__11386_12970 = G__12987;
count__11387_12971 = G__12988;
i__11388_12972 = G__12989;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.hr.apply(null,a__9966__auto__);
};
var hr = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return hr__delegate.call(this,args__9965__auto__);};
hr.cljs$lang$maxFixedArity = 0;
hr.cljs$lang$applyTo = (function (arglist__12990){
var args__9965__auto__ = cljs.core.seq(arglist__12990);
return hr__delegate(args__9965__auto__);
});
hr.cljs$core$IFn$_invoke$arity$variadic = hr__delegate;
return hr;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.html = (function() { 
var html__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11393_12991 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11394_12992 = null;var count__11395_12993 = 0;var i__11396_12994 = 0;while(true){
if((i__11396_12994 < count__11395_12993))
{var arg__9967__auto___12995 = cljs.core._nth.call(null,chunk__11394_12992,i__11396_12994);a__9966__auto__.push(arg__9967__auto___12995);
{
var G__12996 = seq__11393_12991;
var G__12997 = chunk__11394_12992;
var G__12998 = count__11395_12993;
var G__12999 = (i__11396_12994 + 1);
seq__11393_12991 = G__12996;
chunk__11394_12992 = G__12997;
count__11395_12993 = G__12998;
i__11396_12994 = G__12999;
continue;
}
} else
{var temp__4092__auto___13000 = cljs.core.seq.call(null,seq__11393_12991);if(temp__4092__auto___13000)
{var seq__11393_13001__$1 = temp__4092__auto___13000;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11393_13001__$1))
{var c__7246__auto___13002 = cljs.core.chunk_first.call(null,seq__11393_13001__$1);{
var G__13003 = cljs.core.chunk_rest.call(null,seq__11393_13001__$1);
var G__13004 = c__7246__auto___13002;
var G__13005 = cljs.core.count.call(null,c__7246__auto___13002);
var G__13006 = 0;
seq__11393_12991 = G__13003;
chunk__11394_12992 = G__13004;
count__11395_12993 = G__13005;
i__11396_12994 = G__13006;
continue;
}
} else
{var arg__9967__auto___13007 = cljs.core.first.call(null,seq__11393_13001__$1);a__9966__auto__.push(arg__9967__auto___13007);
{
var G__13008 = cljs.core.next.call(null,seq__11393_13001__$1);
var G__13009 = null;
var G__13010 = 0;
var G__13011 = 0;
seq__11393_12991 = G__13008;
chunk__11394_12992 = G__13009;
count__11395_12993 = G__13010;
i__11396_12994 = G__13011;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.html.apply(null,a__9966__auto__);
};
var html = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return html__delegate.call(this,args__9965__auto__);};
html.cljs$lang$maxFixedArity = 0;
html.cljs$lang$applyTo = (function (arglist__13012){
var args__9965__auto__ = cljs.core.seq(arglist__13012);
return html__delegate(args__9965__auto__);
});
html.cljs$core$IFn$_invoke$arity$variadic = html__delegate;
return html;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.i = (function() { 
var i__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11401_13013 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11402_13014 = null;var count__11403_13015 = 0;var i__11404_13016 = 0;while(true){
if((i__11404_13016 < count__11403_13015))
{var arg__9967__auto___13017 = cljs.core._nth.call(null,chunk__11402_13014,i__11404_13016);a__9966__auto__.push(arg__9967__auto___13017);
{
var G__13018 = seq__11401_13013;
var G__13019 = chunk__11402_13014;
var G__13020 = count__11403_13015;
var G__13021 = (i__11404_13016 + 1);
seq__11401_13013 = G__13018;
chunk__11402_13014 = G__13019;
count__11403_13015 = G__13020;
i__11404_13016 = G__13021;
continue;
}
} else
{var temp__4092__auto___13022 = cljs.core.seq.call(null,seq__11401_13013);if(temp__4092__auto___13022)
{var seq__11401_13023__$1 = temp__4092__auto___13022;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11401_13023__$1))
{var c__7246__auto___13024 = cljs.core.chunk_first.call(null,seq__11401_13023__$1);{
var G__13025 = cljs.core.chunk_rest.call(null,seq__11401_13023__$1);
var G__13026 = c__7246__auto___13024;
var G__13027 = cljs.core.count.call(null,c__7246__auto___13024);
var G__13028 = 0;
seq__11401_13013 = G__13025;
chunk__11402_13014 = G__13026;
count__11403_13015 = G__13027;
i__11404_13016 = G__13028;
continue;
}
} else
{var arg__9967__auto___13029 = cljs.core.first.call(null,seq__11401_13023__$1);a__9966__auto__.push(arg__9967__auto___13029);
{
var G__13030 = cljs.core.next.call(null,seq__11401_13023__$1);
var G__13031 = null;
var G__13032 = 0;
var G__13033 = 0;
seq__11401_13013 = G__13030;
chunk__11402_13014 = G__13031;
count__11403_13015 = G__13032;
i__11404_13016 = G__13033;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.i.apply(null,a__9966__auto__);
};
var i = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return i__delegate.call(this,args__9965__auto__);};
i.cljs$lang$maxFixedArity = 0;
i.cljs$lang$applyTo = (function (arglist__13034){
var args__9965__auto__ = cljs.core.seq(arglist__13034);
return i__delegate(args__9965__auto__);
});
i.cljs$core$IFn$_invoke$arity$variadic = i__delegate;
return i;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.iframe = (function() { 
var iframe__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11409_13035 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11410_13036 = null;var count__11411_13037 = 0;var i__11412_13038 = 0;while(true){
if((i__11412_13038 < count__11411_13037))
{var arg__9967__auto___13039 = cljs.core._nth.call(null,chunk__11410_13036,i__11412_13038);a__9966__auto__.push(arg__9967__auto___13039);
{
var G__13040 = seq__11409_13035;
var G__13041 = chunk__11410_13036;
var G__13042 = count__11411_13037;
var G__13043 = (i__11412_13038 + 1);
seq__11409_13035 = G__13040;
chunk__11410_13036 = G__13041;
count__11411_13037 = G__13042;
i__11412_13038 = G__13043;
continue;
}
} else
{var temp__4092__auto___13044 = cljs.core.seq.call(null,seq__11409_13035);if(temp__4092__auto___13044)
{var seq__11409_13045__$1 = temp__4092__auto___13044;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11409_13045__$1))
{var c__7246__auto___13046 = cljs.core.chunk_first.call(null,seq__11409_13045__$1);{
var G__13047 = cljs.core.chunk_rest.call(null,seq__11409_13045__$1);
var G__13048 = c__7246__auto___13046;
var G__13049 = cljs.core.count.call(null,c__7246__auto___13046);
var G__13050 = 0;
seq__11409_13035 = G__13047;
chunk__11410_13036 = G__13048;
count__11411_13037 = G__13049;
i__11412_13038 = G__13050;
continue;
}
} else
{var arg__9967__auto___13051 = cljs.core.first.call(null,seq__11409_13045__$1);a__9966__auto__.push(arg__9967__auto___13051);
{
var G__13052 = cljs.core.next.call(null,seq__11409_13045__$1);
var G__13053 = null;
var G__13054 = 0;
var G__13055 = 0;
seq__11409_13035 = G__13052;
chunk__11410_13036 = G__13053;
count__11411_13037 = G__13054;
i__11412_13038 = G__13055;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.iframe.apply(null,a__9966__auto__);
};
var iframe = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return iframe__delegate.call(this,args__9965__auto__);};
iframe.cljs$lang$maxFixedArity = 0;
iframe.cljs$lang$applyTo = (function (arglist__13056){
var args__9965__auto__ = cljs.core.seq(arglist__13056);
return iframe__delegate(args__9965__auto__);
});
iframe.cljs$core$IFn$_invoke$arity$variadic = iframe__delegate;
return iframe;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.img = (function() { 
var img__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11417_13057 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11418_13058 = null;var count__11419_13059 = 0;var i__11420_13060 = 0;while(true){
if((i__11420_13060 < count__11419_13059))
{var arg__9967__auto___13061 = cljs.core._nth.call(null,chunk__11418_13058,i__11420_13060);a__9966__auto__.push(arg__9967__auto___13061);
{
var G__13062 = seq__11417_13057;
var G__13063 = chunk__11418_13058;
var G__13064 = count__11419_13059;
var G__13065 = (i__11420_13060 + 1);
seq__11417_13057 = G__13062;
chunk__11418_13058 = G__13063;
count__11419_13059 = G__13064;
i__11420_13060 = G__13065;
continue;
}
} else
{var temp__4092__auto___13066 = cljs.core.seq.call(null,seq__11417_13057);if(temp__4092__auto___13066)
{var seq__11417_13067__$1 = temp__4092__auto___13066;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11417_13067__$1))
{var c__7246__auto___13068 = cljs.core.chunk_first.call(null,seq__11417_13067__$1);{
var G__13069 = cljs.core.chunk_rest.call(null,seq__11417_13067__$1);
var G__13070 = c__7246__auto___13068;
var G__13071 = cljs.core.count.call(null,c__7246__auto___13068);
var G__13072 = 0;
seq__11417_13057 = G__13069;
chunk__11418_13058 = G__13070;
count__11419_13059 = G__13071;
i__11420_13060 = G__13072;
continue;
}
} else
{var arg__9967__auto___13073 = cljs.core.first.call(null,seq__11417_13067__$1);a__9966__auto__.push(arg__9967__auto___13073);
{
var G__13074 = cljs.core.next.call(null,seq__11417_13067__$1);
var G__13075 = null;
var G__13076 = 0;
var G__13077 = 0;
seq__11417_13057 = G__13074;
chunk__11418_13058 = G__13075;
count__11419_13059 = G__13076;
i__11420_13060 = G__13077;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.img.apply(null,a__9966__auto__);
};
var img = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return img__delegate.call(this,args__9965__auto__);};
img.cljs$lang$maxFixedArity = 0;
img.cljs$lang$applyTo = (function (arglist__13078){
var args__9965__auto__ = cljs.core.seq(arglist__13078);
return img__delegate(args__9965__auto__);
});
img.cljs$core$IFn$_invoke$arity$variadic = img__delegate;
return img;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.input = (function() { 
var input__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11425_13079 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11426_13080 = null;var count__11427_13081 = 0;var i__11428_13082 = 0;while(true){
if((i__11428_13082 < count__11427_13081))
{var arg__9967__auto___13083 = cljs.core._nth.call(null,chunk__11426_13080,i__11428_13082);a__9966__auto__.push(arg__9967__auto___13083);
{
var G__13084 = seq__11425_13079;
var G__13085 = chunk__11426_13080;
var G__13086 = count__11427_13081;
var G__13087 = (i__11428_13082 + 1);
seq__11425_13079 = G__13084;
chunk__11426_13080 = G__13085;
count__11427_13081 = G__13086;
i__11428_13082 = G__13087;
continue;
}
} else
{var temp__4092__auto___13088 = cljs.core.seq.call(null,seq__11425_13079);if(temp__4092__auto___13088)
{var seq__11425_13089__$1 = temp__4092__auto___13088;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11425_13089__$1))
{var c__7246__auto___13090 = cljs.core.chunk_first.call(null,seq__11425_13089__$1);{
var G__13091 = cljs.core.chunk_rest.call(null,seq__11425_13089__$1);
var G__13092 = c__7246__auto___13090;
var G__13093 = cljs.core.count.call(null,c__7246__auto___13090);
var G__13094 = 0;
seq__11425_13079 = G__13091;
chunk__11426_13080 = G__13092;
count__11427_13081 = G__13093;
i__11428_13082 = G__13094;
continue;
}
} else
{var arg__9967__auto___13095 = cljs.core.first.call(null,seq__11425_13089__$1);a__9966__auto__.push(arg__9967__auto___13095);
{
var G__13096 = cljs.core.next.call(null,seq__11425_13089__$1);
var G__13097 = null;
var G__13098 = 0;
var G__13099 = 0;
seq__11425_13079 = G__13096;
chunk__11426_13080 = G__13097;
count__11427_13081 = G__13098;
i__11428_13082 = G__13099;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.input.apply(null,a__9966__auto__);
};
var input = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return input__delegate.call(this,args__9965__auto__);};
input.cljs$lang$maxFixedArity = 0;
input.cljs$lang$applyTo = (function (arglist__13100){
var args__9965__auto__ = cljs.core.seq(arglist__13100);
return input__delegate(args__9965__auto__);
});
input.cljs$core$IFn$_invoke$arity$variadic = input__delegate;
return input;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.ins = (function() { 
var ins__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11433_13101 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11434_13102 = null;var count__11435_13103 = 0;var i__11436_13104 = 0;while(true){
if((i__11436_13104 < count__11435_13103))
{var arg__9967__auto___13105 = cljs.core._nth.call(null,chunk__11434_13102,i__11436_13104);a__9966__auto__.push(arg__9967__auto___13105);
{
var G__13106 = seq__11433_13101;
var G__13107 = chunk__11434_13102;
var G__13108 = count__11435_13103;
var G__13109 = (i__11436_13104 + 1);
seq__11433_13101 = G__13106;
chunk__11434_13102 = G__13107;
count__11435_13103 = G__13108;
i__11436_13104 = G__13109;
continue;
}
} else
{var temp__4092__auto___13110 = cljs.core.seq.call(null,seq__11433_13101);if(temp__4092__auto___13110)
{var seq__11433_13111__$1 = temp__4092__auto___13110;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11433_13111__$1))
{var c__7246__auto___13112 = cljs.core.chunk_first.call(null,seq__11433_13111__$1);{
var G__13113 = cljs.core.chunk_rest.call(null,seq__11433_13111__$1);
var G__13114 = c__7246__auto___13112;
var G__13115 = cljs.core.count.call(null,c__7246__auto___13112);
var G__13116 = 0;
seq__11433_13101 = G__13113;
chunk__11434_13102 = G__13114;
count__11435_13103 = G__13115;
i__11436_13104 = G__13116;
continue;
}
} else
{var arg__9967__auto___13117 = cljs.core.first.call(null,seq__11433_13111__$1);a__9966__auto__.push(arg__9967__auto___13117);
{
var G__13118 = cljs.core.next.call(null,seq__11433_13111__$1);
var G__13119 = null;
var G__13120 = 0;
var G__13121 = 0;
seq__11433_13101 = G__13118;
chunk__11434_13102 = G__13119;
count__11435_13103 = G__13120;
i__11436_13104 = G__13121;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.ins.apply(null,a__9966__auto__);
};
var ins = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return ins__delegate.call(this,args__9965__auto__);};
ins.cljs$lang$maxFixedArity = 0;
ins.cljs$lang$applyTo = (function (arglist__13122){
var args__9965__auto__ = cljs.core.seq(arglist__13122);
return ins__delegate(args__9965__auto__);
});
ins.cljs$core$IFn$_invoke$arity$variadic = ins__delegate;
return ins;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.kbd = (function() { 
var kbd__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11441_13123 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11442_13124 = null;var count__11443_13125 = 0;var i__11444_13126 = 0;while(true){
if((i__11444_13126 < count__11443_13125))
{var arg__9967__auto___13127 = cljs.core._nth.call(null,chunk__11442_13124,i__11444_13126);a__9966__auto__.push(arg__9967__auto___13127);
{
var G__13128 = seq__11441_13123;
var G__13129 = chunk__11442_13124;
var G__13130 = count__11443_13125;
var G__13131 = (i__11444_13126 + 1);
seq__11441_13123 = G__13128;
chunk__11442_13124 = G__13129;
count__11443_13125 = G__13130;
i__11444_13126 = G__13131;
continue;
}
} else
{var temp__4092__auto___13132 = cljs.core.seq.call(null,seq__11441_13123);if(temp__4092__auto___13132)
{var seq__11441_13133__$1 = temp__4092__auto___13132;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11441_13133__$1))
{var c__7246__auto___13134 = cljs.core.chunk_first.call(null,seq__11441_13133__$1);{
var G__13135 = cljs.core.chunk_rest.call(null,seq__11441_13133__$1);
var G__13136 = c__7246__auto___13134;
var G__13137 = cljs.core.count.call(null,c__7246__auto___13134);
var G__13138 = 0;
seq__11441_13123 = G__13135;
chunk__11442_13124 = G__13136;
count__11443_13125 = G__13137;
i__11444_13126 = G__13138;
continue;
}
} else
{var arg__9967__auto___13139 = cljs.core.first.call(null,seq__11441_13133__$1);a__9966__auto__.push(arg__9967__auto___13139);
{
var G__13140 = cljs.core.next.call(null,seq__11441_13133__$1);
var G__13141 = null;
var G__13142 = 0;
var G__13143 = 0;
seq__11441_13123 = G__13140;
chunk__11442_13124 = G__13141;
count__11443_13125 = G__13142;
i__11444_13126 = G__13143;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.kbd.apply(null,a__9966__auto__);
};
var kbd = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return kbd__delegate.call(this,args__9965__auto__);};
kbd.cljs$lang$maxFixedArity = 0;
kbd.cljs$lang$applyTo = (function (arglist__13144){
var args__9965__auto__ = cljs.core.seq(arglist__13144);
return kbd__delegate(args__9965__auto__);
});
kbd.cljs$core$IFn$_invoke$arity$variadic = kbd__delegate;
return kbd;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.keygen = (function() { 
var keygen__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11449_13145 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11450_13146 = null;var count__11451_13147 = 0;var i__11452_13148 = 0;while(true){
if((i__11452_13148 < count__11451_13147))
{var arg__9967__auto___13149 = cljs.core._nth.call(null,chunk__11450_13146,i__11452_13148);a__9966__auto__.push(arg__9967__auto___13149);
{
var G__13150 = seq__11449_13145;
var G__13151 = chunk__11450_13146;
var G__13152 = count__11451_13147;
var G__13153 = (i__11452_13148 + 1);
seq__11449_13145 = G__13150;
chunk__11450_13146 = G__13151;
count__11451_13147 = G__13152;
i__11452_13148 = G__13153;
continue;
}
} else
{var temp__4092__auto___13154 = cljs.core.seq.call(null,seq__11449_13145);if(temp__4092__auto___13154)
{var seq__11449_13155__$1 = temp__4092__auto___13154;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11449_13155__$1))
{var c__7246__auto___13156 = cljs.core.chunk_first.call(null,seq__11449_13155__$1);{
var G__13157 = cljs.core.chunk_rest.call(null,seq__11449_13155__$1);
var G__13158 = c__7246__auto___13156;
var G__13159 = cljs.core.count.call(null,c__7246__auto___13156);
var G__13160 = 0;
seq__11449_13145 = G__13157;
chunk__11450_13146 = G__13158;
count__11451_13147 = G__13159;
i__11452_13148 = G__13160;
continue;
}
} else
{var arg__9967__auto___13161 = cljs.core.first.call(null,seq__11449_13155__$1);a__9966__auto__.push(arg__9967__auto___13161);
{
var G__13162 = cljs.core.next.call(null,seq__11449_13155__$1);
var G__13163 = null;
var G__13164 = 0;
var G__13165 = 0;
seq__11449_13145 = G__13162;
chunk__11450_13146 = G__13163;
count__11451_13147 = G__13164;
i__11452_13148 = G__13165;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.keygen.apply(null,a__9966__auto__);
};
var keygen = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return keygen__delegate.call(this,args__9965__auto__);};
keygen.cljs$lang$maxFixedArity = 0;
keygen.cljs$lang$applyTo = (function (arglist__13166){
var args__9965__auto__ = cljs.core.seq(arglist__13166);
return keygen__delegate(args__9965__auto__);
});
keygen.cljs$core$IFn$_invoke$arity$variadic = keygen__delegate;
return keygen;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.label = (function() { 
var label__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11457_13167 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11458_13168 = null;var count__11459_13169 = 0;var i__11460_13170 = 0;while(true){
if((i__11460_13170 < count__11459_13169))
{var arg__9967__auto___13171 = cljs.core._nth.call(null,chunk__11458_13168,i__11460_13170);a__9966__auto__.push(arg__9967__auto___13171);
{
var G__13172 = seq__11457_13167;
var G__13173 = chunk__11458_13168;
var G__13174 = count__11459_13169;
var G__13175 = (i__11460_13170 + 1);
seq__11457_13167 = G__13172;
chunk__11458_13168 = G__13173;
count__11459_13169 = G__13174;
i__11460_13170 = G__13175;
continue;
}
} else
{var temp__4092__auto___13176 = cljs.core.seq.call(null,seq__11457_13167);if(temp__4092__auto___13176)
{var seq__11457_13177__$1 = temp__4092__auto___13176;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11457_13177__$1))
{var c__7246__auto___13178 = cljs.core.chunk_first.call(null,seq__11457_13177__$1);{
var G__13179 = cljs.core.chunk_rest.call(null,seq__11457_13177__$1);
var G__13180 = c__7246__auto___13178;
var G__13181 = cljs.core.count.call(null,c__7246__auto___13178);
var G__13182 = 0;
seq__11457_13167 = G__13179;
chunk__11458_13168 = G__13180;
count__11459_13169 = G__13181;
i__11460_13170 = G__13182;
continue;
}
} else
{var arg__9967__auto___13183 = cljs.core.first.call(null,seq__11457_13177__$1);a__9966__auto__.push(arg__9967__auto___13183);
{
var G__13184 = cljs.core.next.call(null,seq__11457_13177__$1);
var G__13185 = null;
var G__13186 = 0;
var G__13187 = 0;
seq__11457_13167 = G__13184;
chunk__11458_13168 = G__13185;
count__11459_13169 = G__13186;
i__11460_13170 = G__13187;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.label.apply(null,a__9966__auto__);
};
var label = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return label__delegate.call(this,args__9965__auto__);};
label.cljs$lang$maxFixedArity = 0;
label.cljs$lang$applyTo = (function (arglist__13188){
var args__9965__auto__ = cljs.core.seq(arglist__13188);
return label__delegate(args__9965__auto__);
});
label.cljs$core$IFn$_invoke$arity$variadic = label__delegate;
return label;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.legend = (function() { 
var legend__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11465_13189 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11466_13190 = null;var count__11467_13191 = 0;var i__11468_13192 = 0;while(true){
if((i__11468_13192 < count__11467_13191))
{var arg__9967__auto___13193 = cljs.core._nth.call(null,chunk__11466_13190,i__11468_13192);a__9966__auto__.push(arg__9967__auto___13193);
{
var G__13194 = seq__11465_13189;
var G__13195 = chunk__11466_13190;
var G__13196 = count__11467_13191;
var G__13197 = (i__11468_13192 + 1);
seq__11465_13189 = G__13194;
chunk__11466_13190 = G__13195;
count__11467_13191 = G__13196;
i__11468_13192 = G__13197;
continue;
}
} else
{var temp__4092__auto___13198 = cljs.core.seq.call(null,seq__11465_13189);if(temp__4092__auto___13198)
{var seq__11465_13199__$1 = temp__4092__auto___13198;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11465_13199__$1))
{var c__7246__auto___13200 = cljs.core.chunk_first.call(null,seq__11465_13199__$1);{
var G__13201 = cljs.core.chunk_rest.call(null,seq__11465_13199__$1);
var G__13202 = c__7246__auto___13200;
var G__13203 = cljs.core.count.call(null,c__7246__auto___13200);
var G__13204 = 0;
seq__11465_13189 = G__13201;
chunk__11466_13190 = G__13202;
count__11467_13191 = G__13203;
i__11468_13192 = G__13204;
continue;
}
} else
{var arg__9967__auto___13205 = cljs.core.first.call(null,seq__11465_13199__$1);a__9966__auto__.push(arg__9967__auto___13205);
{
var G__13206 = cljs.core.next.call(null,seq__11465_13199__$1);
var G__13207 = null;
var G__13208 = 0;
var G__13209 = 0;
seq__11465_13189 = G__13206;
chunk__11466_13190 = G__13207;
count__11467_13191 = G__13208;
i__11468_13192 = G__13209;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.legend.apply(null,a__9966__auto__);
};
var legend = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return legend__delegate.call(this,args__9965__auto__);};
legend.cljs$lang$maxFixedArity = 0;
legend.cljs$lang$applyTo = (function (arglist__13210){
var args__9965__auto__ = cljs.core.seq(arglist__13210);
return legend__delegate(args__9965__auto__);
});
legend.cljs$core$IFn$_invoke$arity$variadic = legend__delegate;
return legend;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.li = (function() { 
var li__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11473_13211 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11474_13212 = null;var count__11475_13213 = 0;var i__11476_13214 = 0;while(true){
if((i__11476_13214 < count__11475_13213))
{var arg__9967__auto___13215 = cljs.core._nth.call(null,chunk__11474_13212,i__11476_13214);a__9966__auto__.push(arg__9967__auto___13215);
{
var G__13216 = seq__11473_13211;
var G__13217 = chunk__11474_13212;
var G__13218 = count__11475_13213;
var G__13219 = (i__11476_13214 + 1);
seq__11473_13211 = G__13216;
chunk__11474_13212 = G__13217;
count__11475_13213 = G__13218;
i__11476_13214 = G__13219;
continue;
}
} else
{var temp__4092__auto___13220 = cljs.core.seq.call(null,seq__11473_13211);if(temp__4092__auto___13220)
{var seq__11473_13221__$1 = temp__4092__auto___13220;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11473_13221__$1))
{var c__7246__auto___13222 = cljs.core.chunk_first.call(null,seq__11473_13221__$1);{
var G__13223 = cljs.core.chunk_rest.call(null,seq__11473_13221__$1);
var G__13224 = c__7246__auto___13222;
var G__13225 = cljs.core.count.call(null,c__7246__auto___13222);
var G__13226 = 0;
seq__11473_13211 = G__13223;
chunk__11474_13212 = G__13224;
count__11475_13213 = G__13225;
i__11476_13214 = G__13226;
continue;
}
} else
{var arg__9967__auto___13227 = cljs.core.first.call(null,seq__11473_13221__$1);a__9966__auto__.push(arg__9967__auto___13227);
{
var G__13228 = cljs.core.next.call(null,seq__11473_13221__$1);
var G__13229 = null;
var G__13230 = 0;
var G__13231 = 0;
seq__11473_13211 = G__13228;
chunk__11474_13212 = G__13229;
count__11475_13213 = G__13230;
i__11476_13214 = G__13231;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.li.apply(null,a__9966__auto__);
};
var li = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return li__delegate.call(this,args__9965__auto__);};
li.cljs$lang$maxFixedArity = 0;
li.cljs$lang$applyTo = (function (arglist__13232){
var args__9965__auto__ = cljs.core.seq(arglist__13232);
return li__delegate(args__9965__auto__);
});
li.cljs$core$IFn$_invoke$arity$variadic = li__delegate;
return li;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.link = (function() { 
var link__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11481_13233 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11482_13234 = null;var count__11483_13235 = 0;var i__11484_13236 = 0;while(true){
if((i__11484_13236 < count__11483_13235))
{var arg__9967__auto___13237 = cljs.core._nth.call(null,chunk__11482_13234,i__11484_13236);a__9966__auto__.push(arg__9967__auto___13237);
{
var G__13238 = seq__11481_13233;
var G__13239 = chunk__11482_13234;
var G__13240 = count__11483_13235;
var G__13241 = (i__11484_13236 + 1);
seq__11481_13233 = G__13238;
chunk__11482_13234 = G__13239;
count__11483_13235 = G__13240;
i__11484_13236 = G__13241;
continue;
}
} else
{var temp__4092__auto___13242 = cljs.core.seq.call(null,seq__11481_13233);if(temp__4092__auto___13242)
{var seq__11481_13243__$1 = temp__4092__auto___13242;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11481_13243__$1))
{var c__7246__auto___13244 = cljs.core.chunk_first.call(null,seq__11481_13243__$1);{
var G__13245 = cljs.core.chunk_rest.call(null,seq__11481_13243__$1);
var G__13246 = c__7246__auto___13244;
var G__13247 = cljs.core.count.call(null,c__7246__auto___13244);
var G__13248 = 0;
seq__11481_13233 = G__13245;
chunk__11482_13234 = G__13246;
count__11483_13235 = G__13247;
i__11484_13236 = G__13248;
continue;
}
} else
{var arg__9967__auto___13249 = cljs.core.first.call(null,seq__11481_13243__$1);a__9966__auto__.push(arg__9967__auto___13249);
{
var G__13250 = cljs.core.next.call(null,seq__11481_13243__$1);
var G__13251 = null;
var G__13252 = 0;
var G__13253 = 0;
seq__11481_13233 = G__13250;
chunk__11482_13234 = G__13251;
count__11483_13235 = G__13252;
i__11484_13236 = G__13253;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.link.apply(null,a__9966__auto__);
};
var link = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return link__delegate.call(this,args__9965__auto__);};
link.cljs$lang$maxFixedArity = 0;
link.cljs$lang$applyTo = (function (arglist__13254){
var args__9965__auto__ = cljs.core.seq(arglist__13254);
return link__delegate(args__9965__auto__);
});
link.cljs$core$IFn$_invoke$arity$variadic = link__delegate;
return link;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.main = (function() { 
var main__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11489_13255 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11490_13256 = null;var count__11491_13257 = 0;var i__11492_13258 = 0;while(true){
if((i__11492_13258 < count__11491_13257))
{var arg__9967__auto___13259 = cljs.core._nth.call(null,chunk__11490_13256,i__11492_13258);a__9966__auto__.push(arg__9967__auto___13259);
{
var G__13260 = seq__11489_13255;
var G__13261 = chunk__11490_13256;
var G__13262 = count__11491_13257;
var G__13263 = (i__11492_13258 + 1);
seq__11489_13255 = G__13260;
chunk__11490_13256 = G__13261;
count__11491_13257 = G__13262;
i__11492_13258 = G__13263;
continue;
}
} else
{var temp__4092__auto___13264 = cljs.core.seq.call(null,seq__11489_13255);if(temp__4092__auto___13264)
{var seq__11489_13265__$1 = temp__4092__auto___13264;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11489_13265__$1))
{var c__7246__auto___13266 = cljs.core.chunk_first.call(null,seq__11489_13265__$1);{
var G__13267 = cljs.core.chunk_rest.call(null,seq__11489_13265__$1);
var G__13268 = c__7246__auto___13266;
var G__13269 = cljs.core.count.call(null,c__7246__auto___13266);
var G__13270 = 0;
seq__11489_13255 = G__13267;
chunk__11490_13256 = G__13268;
count__11491_13257 = G__13269;
i__11492_13258 = G__13270;
continue;
}
} else
{var arg__9967__auto___13271 = cljs.core.first.call(null,seq__11489_13265__$1);a__9966__auto__.push(arg__9967__auto___13271);
{
var G__13272 = cljs.core.next.call(null,seq__11489_13265__$1);
var G__13273 = null;
var G__13274 = 0;
var G__13275 = 0;
seq__11489_13255 = G__13272;
chunk__11490_13256 = G__13273;
count__11491_13257 = G__13274;
i__11492_13258 = G__13275;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.main.apply(null,a__9966__auto__);
};
var main = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return main__delegate.call(this,args__9965__auto__);};
main.cljs$lang$maxFixedArity = 0;
main.cljs$lang$applyTo = (function (arglist__13276){
var args__9965__auto__ = cljs.core.seq(arglist__13276);
return main__delegate(args__9965__auto__);
});
main.cljs$core$IFn$_invoke$arity$variadic = main__delegate;
return main;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.map = (function() { 
var map__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11497_13277 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11498_13278 = null;var count__11499_13279 = 0;var i__11500_13280 = 0;while(true){
if((i__11500_13280 < count__11499_13279))
{var arg__9967__auto___13281 = cljs.core._nth.call(null,chunk__11498_13278,i__11500_13280);a__9966__auto__.push(arg__9967__auto___13281);
{
var G__13282 = seq__11497_13277;
var G__13283 = chunk__11498_13278;
var G__13284 = count__11499_13279;
var G__13285 = (i__11500_13280 + 1);
seq__11497_13277 = G__13282;
chunk__11498_13278 = G__13283;
count__11499_13279 = G__13284;
i__11500_13280 = G__13285;
continue;
}
} else
{var temp__4092__auto___13286 = cljs.core.seq.call(null,seq__11497_13277);if(temp__4092__auto___13286)
{var seq__11497_13287__$1 = temp__4092__auto___13286;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11497_13287__$1))
{var c__7246__auto___13288 = cljs.core.chunk_first.call(null,seq__11497_13287__$1);{
var G__13289 = cljs.core.chunk_rest.call(null,seq__11497_13287__$1);
var G__13290 = c__7246__auto___13288;
var G__13291 = cljs.core.count.call(null,c__7246__auto___13288);
var G__13292 = 0;
seq__11497_13277 = G__13289;
chunk__11498_13278 = G__13290;
count__11499_13279 = G__13291;
i__11500_13280 = G__13292;
continue;
}
} else
{var arg__9967__auto___13293 = cljs.core.first.call(null,seq__11497_13287__$1);a__9966__auto__.push(arg__9967__auto___13293);
{
var G__13294 = cljs.core.next.call(null,seq__11497_13287__$1);
var G__13295 = null;
var G__13296 = 0;
var G__13297 = 0;
seq__11497_13277 = G__13294;
chunk__11498_13278 = G__13295;
count__11499_13279 = G__13296;
i__11500_13280 = G__13297;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.map.apply(null,a__9966__auto__);
};
var map = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return map__delegate.call(this,args__9965__auto__);};
map.cljs$lang$maxFixedArity = 0;
map.cljs$lang$applyTo = (function (arglist__13298){
var args__9965__auto__ = cljs.core.seq(arglist__13298);
return map__delegate(args__9965__auto__);
});
map.cljs$core$IFn$_invoke$arity$variadic = map__delegate;
return map;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.mark = (function() { 
var mark__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11505_13299 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11506_13300 = null;var count__11507_13301 = 0;var i__11508_13302 = 0;while(true){
if((i__11508_13302 < count__11507_13301))
{var arg__9967__auto___13303 = cljs.core._nth.call(null,chunk__11506_13300,i__11508_13302);a__9966__auto__.push(arg__9967__auto___13303);
{
var G__13304 = seq__11505_13299;
var G__13305 = chunk__11506_13300;
var G__13306 = count__11507_13301;
var G__13307 = (i__11508_13302 + 1);
seq__11505_13299 = G__13304;
chunk__11506_13300 = G__13305;
count__11507_13301 = G__13306;
i__11508_13302 = G__13307;
continue;
}
} else
{var temp__4092__auto___13308 = cljs.core.seq.call(null,seq__11505_13299);if(temp__4092__auto___13308)
{var seq__11505_13309__$1 = temp__4092__auto___13308;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11505_13309__$1))
{var c__7246__auto___13310 = cljs.core.chunk_first.call(null,seq__11505_13309__$1);{
var G__13311 = cljs.core.chunk_rest.call(null,seq__11505_13309__$1);
var G__13312 = c__7246__auto___13310;
var G__13313 = cljs.core.count.call(null,c__7246__auto___13310);
var G__13314 = 0;
seq__11505_13299 = G__13311;
chunk__11506_13300 = G__13312;
count__11507_13301 = G__13313;
i__11508_13302 = G__13314;
continue;
}
} else
{var arg__9967__auto___13315 = cljs.core.first.call(null,seq__11505_13309__$1);a__9966__auto__.push(arg__9967__auto___13315);
{
var G__13316 = cljs.core.next.call(null,seq__11505_13309__$1);
var G__13317 = null;
var G__13318 = 0;
var G__13319 = 0;
seq__11505_13299 = G__13316;
chunk__11506_13300 = G__13317;
count__11507_13301 = G__13318;
i__11508_13302 = G__13319;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.mark.apply(null,a__9966__auto__);
};
var mark = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return mark__delegate.call(this,args__9965__auto__);};
mark.cljs$lang$maxFixedArity = 0;
mark.cljs$lang$applyTo = (function (arglist__13320){
var args__9965__auto__ = cljs.core.seq(arglist__13320);
return mark__delegate(args__9965__auto__);
});
mark.cljs$core$IFn$_invoke$arity$variadic = mark__delegate;
return mark;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.menu = (function() { 
var menu__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11513_13321 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11514_13322 = null;var count__11515_13323 = 0;var i__11516_13324 = 0;while(true){
if((i__11516_13324 < count__11515_13323))
{var arg__9967__auto___13325 = cljs.core._nth.call(null,chunk__11514_13322,i__11516_13324);a__9966__auto__.push(arg__9967__auto___13325);
{
var G__13326 = seq__11513_13321;
var G__13327 = chunk__11514_13322;
var G__13328 = count__11515_13323;
var G__13329 = (i__11516_13324 + 1);
seq__11513_13321 = G__13326;
chunk__11514_13322 = G__13327;
count__11515_13323 = G__13328;
i__11516_13324 = G__13329;
continue;
}
} else
{var temp__4092__auto___13330 = cljs.core.seq.call(null,seq__11513_13321);if(temp__4092__auto___13330)
{var seq__11513_13331__$1 = temp__4092__auto___13330;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11513_13331__$1))
{var c__7246__auto___13332 = cljs.core.chunk_first.call(null,seq__11513_13331__$1);{
var G__13333 = cljs.core.chunk_rest.call(null,seq__11513_13331__$1);
var G__13334 = c__7246__auto___13332;
var G__13335 = cljs.core.count.call(null,c__7246__auto___13332);
var G__13336 = 0;
seq__11513_13321 = G__13333;
chunk__11514_13322 = G__13334;
count__11515_13323 = G__13335;
i__11516_13324 = G__13336;
continue;
}
} else
{var arg__9967__auto___13337 = cljs.core.first.call(null,seq__11513_13331__$1);a__9966__auto__.push(arg__9967__auto___13337);
{
var G__13338 = cljs.core.next.call(null,seq__11513_13331__$1);
var G__13339 = null;
var G__13340 = 0;
var G__13341 = 0;
seq__11513_13321 = G__13338;
chunk__11514_13322 = G__13339;
count__11515_13323 = G__13340;
i__11516_13324 = G__13341;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.menu.apply(null,a__9966__auto__);
};
var menu = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return menu__delegate.call(this,args__9965__auto__);};
menu.cljs$lang$maxFixedArity = 0;
menu.cljs$lang$applyTo = (function (arglist__13342){
var args__9965__auto__ = cljs.core.seq(arglist__13342);
return menu__delegate(args__9965__auto__);
});
menu.cljs$core$IFn$_invoke$arity$variadic = menu__delegate;
return menu;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.menuitem = (function() { 
var menuitem__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11521_13343 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11522_13344 = null;var count__11523_13345 = 0;var i__11524_13346 = 0;while(true){
if((i__11524_13346 < count__11523_13345))
{var arg__9967__auto___13347 = cljs.core._nth.call(null,chunk__11522_13344,i__11524_13346);a__9966__auto__.push(arg__9967__auto___13347);
{
var G__13348 = seq__11521_13343;
var G__13349 = chunk__11522_13344;
var G__13350 = count__11523_13345;
var G__13351 = (i__11524_13346 + 1);
seq__11521_13343 = G__13348;
chunk__11522_13344 = G__13349;
count__11523_13345 = G__13350;
i__11524_13346 = G__13351;
continue;
}
} else
{var temp__4092__auto___13352 = cljs.core.seq.call(null,seq__11521_13343);if(temp__4092__auto___13352)
{var seq__11521_13353__$1 = temp__4092__auto___13352;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11521_13353__$1))
{var c__7246__auto___13354 = cljs.core.chunk_first.call(null,seq__11521_13353__$1);{
var G__13355 = cljs.core.chunk_rest.call(null,seq__11521_13353__$1);
var G__13356 = c__7246__auto___13354;
var G__13357 = cljs.core.count.call(null,c__7246__auto___13354);
var G__13358 = 0;
seq__11521_13343 = G__13355;
chunk__11522_13344 = G__13356;
count__11523_13345 = G__13357;
i__11524_13346 = G__13358;
continue;
}
} else
{var arg__9967__auto___13359 = cljs.core.first.call(null,seq__11521_13353__$1);a__9966__auto__.push(arg__9967__auto___13359);
{
var G__13360 = cljs.core.next.call(null,seq__11521_13353__$1);
var G__13361 = null;
var G__13362 = 0;
var G__13363 = 0;
seq__11521_13343 = G__13360;
chunk__11522_13344 = G__13361;
count__11523_13345 = G__13362;
i__11524_13346 = G__13363;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.menuitem.apply(null,a__9966__auto__);
};
var menuitem = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return menuitem__delegate.call(this,args__9965__auto__);};
menuitem.cljs$lang$maxFixedArity = 0;
menuitem.cljs$lang$applyTo = (function (arglist__13364){
var args__9965__auto__ = cljs.core.seq(arglist__13364);
return menuitem__delegate(args__9965__auto__);
});
menuitem.cljs$core$IFn$_invoke$arity$variadic = menuitem__delegate;
return menuitem;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.meta = (function() { 
var meta__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11529_13365 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11530_13366 = null;var count__11531_13367 = 0;var i__11532_13368 = 0;while(true){
if((i__11532_13368 < count__11531_13367))
{var arg__9967__auto___13369 = cljs.core._nth.call(null,chunk__11530_13366,i__11532_13368);a__9966__auto__.push(arg__9967__auto___13369);
{
var G__13370 = seq__11529_13365;
var G__13371 = chunk__11530_13366;
var G__13372 = count__11531_13367;
var G__13373 = (i__11532_13368 + 1);
seq__11529_13365 = G__13370;
chunk__11530_13366 = G__13371;
count__11531_13367 = G__13372;
i__11532_13368 = G__13373;
continue;
}
} else
{var temp__4092__auto___13374 = cljs.core.seq.call(null,seq__11529_13365);if(temp__4092__auto___13374)
{var seq__11529_13375__$1 = temp__4092__auto___13374;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11529_13375__$1))
{var c__7246__auto___13376 = cljs.core.chunk_first.call(null,seq__11529_13375__$1);{
var G__13377 = cljs.core.chunk_rest.call(null,seq__11529_13375__$1);
var G__13378 = c__7246__auto___13376;
var G__13379 = cljs.core.count.call(null,c__7246__auto___13376);
var G__13380 = 0;
seq__11529_13365 = G__13377;
chunk__11530_13366 = G__13378;
count__11531_13367 = G__13379;
i__11532_13368 = G__13380;
continue;
}
} else
{var arg__9967__auto___13381 = cljs.core.first.call(null,seq__11529_13375__$1);a__9966__auto__.push(arg__9967__auto___13381);
{
var G__13382 = cljs.core.next.call(null,seq__11529_13375__$1);
var G__13383 = null;
var G__13384 = 0;
var G__13385 = 0;
seq__11529_13365 = G__13382;
chunk__11530_13366 = G__13383;
count__11531_13367 = G__13384;
i__11532_13368 = G__13385;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.meta.apply(null,a__9966__auto__);
};
var meta = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return meta__delegate.call(this,args__9965__auto__);};
meta.cljs$lang$maxFixedArity = 0;
meta.cljs$lang$applyTo = (function (arglist__13386){
var args__9965__auto__ = cljs.core.seq(arglist__13386);
return meta__delegate(args__9965__auto__);
});
meta.cljs$core$IFn$_invoke$arity$variadic = meta__delegate;
return meta;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.meter = (function() { 
var meter__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11537_13387 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11538_13388 = null;var count__11539_13389 = 0;var i__11540_13390 = 0;while(true){
if((i__11540_13390 < count__11539_13389))
{var arg__9967__auto___13391 = cljs.core._nth.call(null,chunk__11538_13388,i__11540_13390);a__9966__auto__.push(arg__9967__auto___13391);
{
var G__13392 = seq__11537_13387;
var G__13393 = chunk__11538_13388;
var G__13394 = count__11539_13389;
var G__13395 = (i__11540_13390 + 1);
seq__11537_13387 = G__13392;
chunk__11538_13388 = G__13393;
count__11539_13389 = G__13394;
i__11540_13390 = G__13395;
continue;
}
} else
{var temp__4092__auto___13396 = cljs.core.seq.call(null,seq__11537_13387);if(temp__4092__auto___13396)
{var seq__11537_13397__$1 = temp__4092__auto___13396;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11537_13397__$1))
{var c__7246__auto___13398 = cljs.core.chunk_first.call(null,seq__11537_13397__$1);{
var G__13399 = cljs.core.chunk_rest.call(null,seq__11537_13397__$1);
var G__13400 = c__7246__auto___13398;
var G__13401 = cljs.core.count.call(null,c__7246__auto___13398);
var G__13402 = 0;
seq__11537_13387 = G__13399;
chunk__11538_13388 = G__13400;
count__11539_13389 = G__13401;
i__11540_13390 = G__13402;
continue;
}
} else
{var arg__9967__auto___13403 = cljs.core.first.call(null,seq__11537_13397__$1);a__9966__auto__.push(arg__9967__auto___13403);
{
var G__13404 = cljs.core.next.call(null,seq__11537_13397__$1);
var G__13405 = null;
var G__13406 = 0;
var G__13407 = 0;
seq__11537_13387 = G__13404;
chunk__11538_13388 = G__13405;
count__11539_13389 = G__13406;
i__11540_13390 = G__13407;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.meter.apply(null,a__9966__auto__);
};
var meter = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return meter__delegate.call(this,args__9965__auto__);};
meter.cljs$lang$maxFixedArity = 0;
meter.cljs$lang$applyTo = (function (arglist__13408){
var args__9965__auto__ = cljs.core.seq(arglist__13408);
return meter__delegate(args__9965__auto__);
});
meter.cljs$core$IFn$_invoke$arity$variadic = meter__delegate;
return meter;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.nav = (function() { 
var nav__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11545_13409 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11546_13410 = null;var count__11547_13411 = 0;var i__11548_13412 = 0;while(true){
if((i__11548_13412 < count__11547_13411))
{var arg__9967__auto___13413 = cljs.core._nth.call(null,chunk__11546_13410,i__11548_13412);a__9966__auto__.push(arg__9967__auto___13413);
{
var G__13414 = seq__11545_13409;
var G__13415 = chunk__11546_13410;
var G__13416 = count__11547_13411;
var G__13417 = (i__11548_13412 + 1);
seq__11545_13409 = G__13414;
chunk__11546_13410 = G__13415;
count__11547_13411 = G__13416;
i__11548_13412 = G__13417;
continue;
}
} else
{var temp__4092__auto___13418 = cljs.core.seq.call(null,seq__11545_13409);if(temp__4092__auto___13418)
{var seq__11545_13419__$1 = temp__4092__auto___13418;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11545_13419__$1))
{var c__7246__auto___13420 = cljs.core.chunk_first.call(null,seq__11545_13419__$1);{
var G__13421 = cljs.core.chunk_rest.call(null,seq__11545_13419__$1);
var G__13422 = c__7246__auto___13420;
var G__13423 = cljs.core.count.call(null,c__7246__auto___13420);
var G__13424 = 0;
seq__11545_13409 = G__13421;
chunk__11546_13410 = G__13422;
count__11547_13411 = G__13423;
i__11548_13412 = G__13424;
continue;
}
} else
{var arg__9967__auto___13425 = cljs.core.first.call(null,seq__11545_13419__$1);a__9966__auto__.push(arg__9967__auto___13425);
{
var G__13426 = cljs.core.next.call(null,seq__11545_13419__$1);
var G__13427 = null;
var G__13428 = 0;
var G__13429 = 0;
seq__11545_13409 = G__13426;
chunk__11546_13410 = G__13427;
count__11547_13411 = G__13428;
i__11548_13412 = G__13429;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.nav.apply(null,a__9966__auto__);
};
var nav = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return nav__delegate.call(this,args__9965__auto__);};
nav.cljs$lang$maxFixedArity = 0;
nav.cljs$lang$applyTo = (function (arglist__13430){
var args__9965__auto__ = cljs.core.seq(arglist__13430);
return nav__delegate(args__9965__auto__);
});
nav.cljs$core$IFn$_invoke$arity$variadic = nav__delegate;
return nav;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.noscript = (function() { 
var noscript__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11553_13431 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11554_13432 = null;var count__11555_13433 = 0;var i__11556_13434 = 0;while(true){
if((i__11556_13434 < count__11555_13433))
{var arg__9967__auto___13435 = cljs.core._nth.call(null,chunk__11554_13432,i__11556_13434);a__9966__auto__.push(arg__9967__auto___13435);
{
var G__13436 = seq__11553_13431;
var G__13437 = chunk__11554_13432;
var G__13438 = count__11555_13433;
var G__13439 = (i__11556_13434 + 1);
seq__11553_13431 = G__13436;
chunk__11554_13432 = G__13437;
count__11555_13433 = G__13438;
i__11556_13434 = G__13439;
continue;
}
} else
{var temp__4092__auto___13440 = cljs.core.seq.call(null,seq__11553_13431);if(temp__4092__auto___13440)
{var seq__11553_13441__$1 = temp__4092__auto___13440;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11553_13441__$1))
{var c__7246__auto___13442 = cljs.core.chunk_first.call(null,seq__11553_13441__$1);{
var G__13443 = cljs.core.chunk_rest.call(null,seq__11553_13441__$1);
var G__13444 = c__7246__auto___13442;
var G__13445 = cljs.core.count.call(null,c__7246__auto___13442);
var G__13446 = 0;
seq__11553_13431 = G__13443;
chunk__11554_13432 = G__13444;
count__11555_13433 = G__13445;
i__11556_13434 = G__13446;
continue;
}
} else
{var arg__9967__auto___13447 = cljs.core.first.call(null,seq__11553_13441__$1);a__9966__auto__.push(arg__9967__auto___13447);
{
var G__13448 = cljs.core.next.call(null,seq__11553_13441__$1);
var G__13449 = null;
var G__13450 = 0;
var G__13451 = 0;
seq__11553_13431 = G__13448;
chunk__11554_13432 = G__13449;
count__11555_13433 = G__13450;
i__11556_13434 = G__13451;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.noscript.apply(null,a__9966__auto__);
};
var noscript = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return noscript__delegate.call(this,args__9965__auto__);};
noscript.cljs$lang$maxFixedArity = 0;
noscript.cljs$lang$applyTo = (function (arglist__13452){
var args__9965__auto__ = cljs.core.seq(arglist__13452);
return noscript__delegate(args__9965__auto__);
});
noscript.cljs$core$IFn$_invoke$arity$variadic = noscript__delegate;
return noscript;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.object = (function() { 
var object__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11561_13453 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11562_13454 = null;var count__11563_13455 = 0;var i__11564_13456 = 0;while(true){
if((i__11564_13456 < count__11563_13455))
{var arg__9967__auto___13457 = cljs.core._nth.call(null,chunk__11562_13454,i__11564_13456);a__9966__auto__.push(arg__9967__auto___13457);
{
var G__13458 = seq__11561_13453;
var G__13459 = chunk__11562_13454;
var G__13460 = count__11563_13455;
var G__13461 = (i__11564_13456 + 1);
seq__11561_13453 = G__13458;
chunk__11562_13454 = G__13459;
count__11563_13455 = G__13460;
i__11564_13456 = G__13461;
continue;
}
} else
{var temp__4092__auto___13462 = cljs.core.seq.call(null,seq__11561_13453);if(temp__4092__auto___13462)
{var seq__11561_13463__$1 = temp__4092__auto___13462;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11561_13463__$1))
{var c__7246__auto___13464 = cljs.core.chunk_first.call(null,seq__11561_13463__$1);{
var G__13465 = cljs.core.chunk_rest.call(null,seq__11561_13463__$1);
var G__13466 = c__7246__auto___13464;
var G__13467 = cljs.core.count.call(null,c__7246__auto___13464);
var G__13468 = 0;
seq__11561_13453 = G__13465;
chunk__11562_13454 = G__13466;
count__11563_13455 = G__13467;
i__11564_13456 = G__13468;
continue;
}
} else
{var arg__9967__auto___13469 = cljs.core.first.call(null,seq__11561_13463__$1);a__9966__auto__.push(arg__9967__auto___13469);
{
var G__13470 = cljs.core.next.call(null,seq__11561_13463__$1);
var G__13471 = null;
var G__13472 = 0;
var G__13473 = 0;
seq__11561_13453 = G__13470;
chunk__11562_13454 = G__13471;
count__11563_13455 = G__13472;
i__11564_13456 = G__13473;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.object.apply(null,a__9966__auto__);
};
var object = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return object__delegate.call(this,args__9965__auto__);};
object.cljs$lang$maxFixedArity = 0;
object.cljs$lang$applyTo = (function (arglist__13474){
var args__9965__auto__ = cljs.core.seq(arglist__13474);
return object__delegate(args__9965__auto__);
});
object.cljs$core$IFn$_invoke$arity$variadic = object__delegate;
return object;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.ol = (function() { 
var ol__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11569_13475 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11570_13476 = null;var count__11571_13477 = 0;var i__11572_13478 = 0;while(true){
if((i__11572_13478 < count__11571_13477))
{var arg__9967__auto___13479 = cljs.core._nth.call(null,chunk__11570_13476,i__11572_13478);a__9966__auto__.push(arg__9967__auto___13479);
{
var G__13480 = seq__11569_13475;
var G__13481 = chunk__11570_13476;
var G__13482 = count__11571_13477;
var G__13483 = (i__11572_13478 + 1);
seq__11569_13475 = G__13480;
chunk__11570_13476 = G__13481;
count__11571_13477 = G__13482;
i__11572_13478 = G__13483;
continue;
}
} else
{var temp__4092__auto___13484 = cljs.core.seq.call(null,seq__11569_13475);if(temp__4092__auto___13484)
{var seq__11569_13485__$1 = temp__4092__auto___13484;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11569_13485__$1))
{var c__7246__auto___13486 = cljs.core.chunk_first.call(null,seq__11569_13485__$1);{
var G__13487 = cljs.core.chunk_rest.call(null,seq__11569_13485__$1);
var G__13488 = c__7246__auto___13486;
var G__13489 = cljs.core.count.call(null,c__7246__auto___13486);
var G__13490 = 0;
seq__11569_13475 = G__13487;
chunk__11570_13476 = G__13488;
count__11571_13477 = G__13489;
i__11572_13478 = G__13490;
continue;
}
} else
{var arg__9967__auto___13491 = cljs.core.first.call(null,seq__11569_13485__$1);a__9966__auto__.push(arg__9967__auto___13491);
{
var G__13492 = cljs.core.next.call(null,seq__11569_13485__$1);
var G__13493 = null;
var G__13494 = 0;
var G__13495 = 0;
seq__11569_13475 = G__13492;
chunk__11570_13476 = G__13493;
count__11571_13477 = G__13494;
i__11572_13478 = G__13495;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.ol.apply(null,a__9966__auto__);
};
var ol = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return ol__delegate.call(this,args__9965__auto__);};
ol.cljs$lang$maxFixedArity = 0;
ol.cljs$lang$applyTo = (function (arglist__13496){
var args__9965__auto__ = cljs.core.seq(arglist__13496);
return ol__delegate(args__9965__auto__);
});
ol.cljs$core$IFn$_invoke$arity$variadic = ol__delegate;
return ol;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.optgroup = (function() { 
var optgroup__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11577_13497 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11578_13498 = null;var count__11579_13499 = 0;var i__11580_13500 = 0;while(true){
if((i__11580_13500 < count__11579_13499))
{var arg__9967__auto___13501 = cljs.core._nth.call(null,chunk__11578_13498,i__11580_13500);a__9966__auto__.push(arg__9967__auto___13501);
{
var G__13502 = seq__11577_13497;
var G__13503 = chunk__11578_13498;
var G__13504 = count__11579_13499;
var G__13505 = (i__11580_13500 + 1);
seq__11577_13497 = G__13502;
chunk__11578_13498 = G__13503;
count__11579_13499 = G__13504;
i__11580_13500 = G__13505;
continue;
}
} else
{var temp__4092__auto___13506 = cljs.core.seq.call(null,seq__11577_13497);if(temp__4092__auto___13506)
{var seq__11577_13507__$1 = temp__4092__auto___13506;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11577_13507__$1))
{var c__7246__auto___13508 = cljs.core.chunk_first.call(null,seq__11577_13507__$1);{
var G__13509 = cljs.core.chunk_rest.call(null,seq__11577_13507__$1);
var G__13510 = c__7246__auto___13508;
var G__13511 = cljs.core.count.call(null,c__7246__auto___13508);
var G__13512 = 0;
seq__11577_13497 = G__13509;
chunk__11578_13498 = G__13510;
count__11579_13499 = G__13511;
i__11580_13500 = G__13512;
continue;
}
} else
{var arg__9967__auto___13513 = cljs.core.first.call(null,seq__11577_13507__$1);a__9966__auto__.push(arg__9967__auto___13513);
{
var G__13514 = cljs.core.next.call(null,seq__11577_13507__$1);
var G__13515 = null;
var G__13516 = 0;
var G__13517 = 0;
seq__11577_13497 = G__13514;
chunk__11578_13498 = G__13515;
count__11579_13499 = G__13516;
i__11580_13500 = G__13517;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.optgroup.apply(null,a__9966__auto__);
};
var optgroup = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return optgroup__delegate.call(this,args__9965__auto__);};
optgroup.cljs$lang$maxFixedArity = 0;
optgroup.cljs$lang$applyTo = (function (arglist__13518){
var args__9965__auto__ = cljs.core.seq(arglist__13518);
return optgroup__delegate(args__9965__auto__);
});
optgroup.cljs$core$IFn$_invoke$arity$variadic = optgroup__delegate;
return optgroup;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.option = (function() { 
var option__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11585_13519 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11586_13520 = null;var count__11587_13521 = 0;var i__11588_13522 = 0;while(true){
if((i__11588_13522 < count__11587_13521))
{var arg__9967__auto___13523 = cljs.core._nth.call(null,chunk__11586_13520,i__11588_13522);a__9966__auto__.push(arg__9967__auto___13523);
{
var G__13524 = seq__11585_13519;
var G__13525 = chunk__11586_13520;
var G__13526 = count__11587_13521;
var G__13527 = (i__11588_13522 + 1);
seq__11585_13519 = G__13524;
chunk__11586_13520 = G__13525;
count__11587_13521 = G__13526;
i__11588_13522 = G__13527;
continue;
}
} else
{var temp__4092__auto___13528 = cljs.core.seq.call(null,seq__11585_13519);if(temp__4092__auto___13528)
{var seq__11585_13529__$1 = temp__4092__auto___13528;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11585_13529__$1))
{var c__7246__auto___13530 = cljs.core.chunk_first.call(null,seq__11585_13529__$1);{
var G__13531 = cljs.core.chunk_rest.call(null,seq__11585_13529__$1);
var G__13532 = c__7246__auto___13530;
var G__13533 = cljs.core.count.call(null,c__7246__auto___13530);
var G__13534 = 0;
seq__11585_13519 = G__13531;
chunk__11586_13520 = G__13532;
count__11587_13521 = G__13533;
i__11588_13522 = G__13534;
continue;
}
} else
{var arg__9967__auto___13535 = cljs.core.first.call(null,seq__11585_13529__$1);a__9966__auto__.push(arg__9967__auto___13535);
{
var G__13536 = cljs.core.next.call(null,seq__11585_13529__$1);
var G__13537 = null;
var G__13538 = 0;
var G__13539 = 0;
seq__11585_13519 = G__13536;
chunk__11586_13520 = G__13537;
count__11587_13521 = G__13538;
i__11588_13522 = G__13539;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.option.apply(null,a__9966__auto__);
};
var option = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return option__delegate.call(this,args__9965__auto__);};
option.cljs$lang$maxFixedArity = 0;
option.cljs$lang$applyTo = (function (arglist__13540){
var args__9965__auto__ = cljs.core.seq(arglist__13540);
return option__delegate(args__9965__auto__);
});
option.cljs$core$IFn$_invoke$arity$variadic = option__delegate;
return option;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.output = (function() { 
var output__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11593_13541 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11594_13542 = null;var count__11595_13543 = 0;var i__11596_13544 = 0;while(true){
if((i__11596_13544 < count__11595_13543))
{var arg__9967__auto___13545 = cljs.core._nth.call(null,chunk__11594_13542,i__11596_13544);a__9966__auto__.push(arg__9967__auto___13545);
{
var G__13546 = seq__11593_13541;
var G__13547 = chunk__11594_13542;
var G__13548 = count__11595_13543;
var G__13549 = (i__11596_13544 + 1);
seq__11593_13541 = G__13546;
chunk__11594_13542 = G__13547;
count__11595_13543 = G__13548;
i__11596_13544 = G__13549;
continue;
}
} else
{var temp__4092__auto___13550 = cljs.core.seq.call(null,seq__11593_13541);if(temp__4092__auto___13550)
{var seq__11593_13551__$1 = temp__4092__auto___13550;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11593_13551__$1))
{var c__7246__auto___13552 = cljs.core.chunk_first.call(null,seq__11593_13551__$1);{
var G__13553 = cljs.core.chunk_rest.call(null,seq__11593_13551__$1);
var G__13554 = c__7246__auto___13552;
var G__13555 = cljs.core.count.call(null,c__7246__auto___13552);
var G__13556 = 0;
seq__11593_13541 = G__13553;
chunk__11594_13542 = G__13554;
count__11595_13543 = G__13555;
i__11596_13544 = G__13556;
continue;
}
} else
{var arg__9967__auto___13557 = cljs.core.first.call(null,seq__11593_13551__$1);a__9966__auto__.push(arg__9967__auto___13557);
{
var G__13558 = cljs.core.next.call(null,seq__11593_13551__$1);
var G__13559 = null;
var G__13560 = 0;
var G__13561 = 0;
seq__11593_13541 = G__13558;
chunk__11594_13542 = G__13559;
count__11595_13543 = G__13560;
i__11596_13544 = G__13561;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.output.apply(null,a__9966__auto__);
};
var output = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return output__delegate.call(this,args__9965__auto__);};
output.cljs$lang$maxFixedArity = 0;
output.cljs$lang$applyTo = (function (arglist__13562){
var args__9965__auto__ = cljs.core.seq(arglist__13562);
return output__delegate(args__9965__auto__);
});
output.cljs$core$IFn$_invoke$arity$variadic = output__delegate;
return output;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.p = (function() { 
var p__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11601_13563 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11602_13564 = null;var count__11603_13565 = 0;var i__11604_13566 = 0;while(true){
if((i__11604_13566 < count__11603_13565))
{var arg__9967__auto___13567 = cljs.core._nth.call(null,chunk__11602_13564,i__11604_13566);a__9966__auto__.push(arg__9967__auto___13567);
{
var G__13568 = seq__11601_13563;
var G__13569 = chunk__11602_13564;
var G__13570 = count__11603_13565;
var G__13571 = (i__11604_13566 + 1);
seq__11601_13563 = G__13568;
chunk__11602_13564 = G__13569;
count__11603_13565 = G__13570;
i__11604_13566 = G__13571;
continue;
}
} else
{var temp__4092__auto___13572 = cljs.core.seq.call(null,seq__11601_13563);if(temp__4092__auto___13572)
{var seq__11601_13573__$1 = temp__4092__auto___13572;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11601_13573__$1))
{var c__7246__auto___13574 = cljs.core.chunk_first.call(null,seq__11601_13573__$1);{
var G__13575 = cljs.core.chunk_rest.call(null,seq__11601_13573__$1);
var G__13576 = c__7246__auto___13574;
var G__13577 = cljs.core.count.call(null,c__7246__auto___13574);
var G__13578 = 0;
seq__11601_13563 = G__13575;
chunk__11602_13564 = G__13576;
count__11603_13565 = G__13577;
i__11604_13566 = G__13578;
continue;
}
} else
{var arg__9967__auto___13579 = cljs.core.first.call(null,seq__11601_13573__$1);a__9966__auto__.push(arg__9967__auto___13579);
{
var G__13580 = cljs.core.next.call(null,seq__11601_13573__$1);
var G__13581 = null;
var G__13582 = 0;
var G__13583 = 0;
seq__11601_13563 = G__13580;
chunk__11602_13564 = G__13581;
count__11603_13565 = G__13582;
i__11604_13566 = G__13583;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.p.apply(null,a__9966__auto__);
};
var p = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return p__delegate.call(this,args__9965__auto__);};
p.cljs$lang$maxFixedArity = 0;
p.cljs$lang$applyTo = (function (arglist__13584){
var args__9965__auto__ = cljs.core.seq(arglist__13584);
return p__delegate(args__9965__auto__);
});
p.cljs$core$IFn$_invoke$arity$variadic = p__delegate;
return p;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.param = (function() { 
var param__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11609_13585 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11610_13586 = null;var count__11611_13587 = 0;var i__11612_13588 = 0;while(true){
if((i__11612_13588 < count__11611_13587))
{var arg__9967__auto___13589 = cljs.core._nth.call(null,chunk__11610_13586,i__11612_13588);a__9966__auto__.push(arg__9967__auto___13589);
{
var G__13590 = seq__11609_13585;
var G__13591 = chunk__11610_13586;
var G__13592 = count__11611_13587;
var G__13593 = (i__11612_13588 + 1);
seq__11609_13585 = G__13590;
chunk__11610_13586 = G__13591;
count__11611_13587 = G__13592;
i__11612_13588 = G__13593;
continue;
}
} else
{var temp__4092__auto___13594 = cljs.core.seq.call(null,seq__11609_13585);if(temp__4092__auto___13594)
{var seq__11609_13595__$1 = temp__4092__auto___13594;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11609_13595__$1))
{var c__7246__auto___13596 = cljs.core.chunk_first.call(null,seq__11609_13595__$1);{
var G__13597 = cljs.core.chunk_rest.call(null,seq__11609_13595__$1);
var G__13598 = c__7246__auto___13596;
var G__13599 = cljs.core.count.call(null,c__7246__auto___13596);
var G__13600 = 0;
seq__11609_13585 = G__13597;
chunk__11610_13586 = G__13598;
count__11611_13587 = G__13599;
i__11612_13588 = G__13600;
continue;
}
} else
{var arg__9967__auto___13601 = cljs.core.first.call(null,seq__11609_13595__$1);a__9966__auto__.push(arg__9967__auto___13601);
{
var G__13602 = cljs.core.next.call(null,seq__11609_13595__$1);
var G__13603 = null;
var G__13604 = 0;
var G__13605 = 0;
seq__11609_13585 = G__13602;
chunk__11610_13586 = G__13603;
count__11611_13587 = G__13604;
i__11612_13588 = G__13605;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.param.apply(null,a__9966__auto__);
};
var param = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return param__delegate.call(this,args__9965__auto__);};
param.cljs$lang$maxFixedArity = 0;
param.cljs$lang$applyTo = (function (arglist__13606){
var args__9965__auto__ = cljs.core.seq(arglist__13606);
return param__delegate(args__9965__auto__);
});
param.cljs$core$IFn$_invoke$arity$variadic = param__delegate;
return param;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.pre = (function() { 
var pre__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11617_13607 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11618_13608 = null;var count__11619_13609 = 0;var i__11620_13610 = 0;while(true){
if((i__11620_13610 < count__11619_13609))
{var arg__9967__auto___13611 = cljs.core._nth.call(null,chunk__11618_13608,i__11620_13610);a__9966__auto__.push(arg__9967__auto___13611);
{
var G__13612 = seq__11617_13607;
var G__13613 = chunk__11618_13608;
var G__13614 = count__11619_13609;
var G__13615 = (i__11620_13610 + 1);
seq__11617_13607 = G__13612;
chunk__11618_13608 = G__13613;
count__11619_13609 = G__13614;
i__11620_13610 = G__13615;
continue;
}
} else
{var temp__4092__auto___13616 = cljs.core.seq.call(null,seq__11617_13607);if(temp__4092__auto___13616)
{var seq__11617_13617__$1 = temp__4092__auto___13616;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11617_13617__$1))
{var c__7246__auto___13618 = cljs.core.chunk_first.call(null,seq__11617_13617__$1);{
var G__13619 = cljs.core.chunk_rest.call(null,seq__11617_13617__$1);
var G__13620 = c__7246__auto___13618;
var G__13621 = cljs.core.count.call(null,c__7246__auto___13618);
var G__13622 = 0;
seq__11617_13607 = G__13619;
chunk__11618_13608 = G__13620;
count__11619_13609 = G__13621;
i__11620_13610 = G__13622;
continue;
}
} else
{var arg__9967__auto___13623 = cljs.core.first.call(null,seq__11617_13617__$1);a__9966__auto__.push(arg__9967__auto___13623);
{
var G__13624 = cljs.core.next.call(null,seq__11617_13617__$1);
var G__13625 = null;
var G__13626 = 0;
var G__13627 = 0;
seq__11617_13607 = G__13624;
chunk__11618_13608 = G__13625;
count__11619_13609 = G__13626;
i__11620_13610 = G__13627;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.pre.apply(null,a__9966__auto__);
};
var pre = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return pre__delegate.call(this,args__9965__auto__);};
pre.cljs$lang$maxFixedArity = 0;
pre.cljs$lang$applyTo = (function (arglist__13628){
var args__9965__auto__ = cljs.core.seq(arglist__13628);
return pre__delegate(args__9965__auto__);
});
pre.cljs$core$IFn$_invoke$arity$variadic = pre__delegate;
return pre;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.progress = (function() { 
var progress__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11625_13629 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11626_13630 = null;var count__11627_13631 = 0;var i__11628_13632 = 0;while(true){
if((i__11628_13632 < count__11627_13631))
{var arg__9967__auto___13633 = cljs.core._nth.call(null,chunk__11626_13630,i__11628_13632);a__9966__auto__.push(arg__9967__auto___13633);
{
var G__13634 = seq__11625_13629;
var G__13635 = chunk__11626_13630;
var G__13636 = count__11627_13631;
var G__13637 = (i__11628_13632 + 1);
seq__11625_13629 = G__13634;
chunk__11626_13630 = G__13635;
count__11627_13631 = G__13636;
i__11628_13632 = G__13637;
continue;
}
} else
{var temp__4092__auto___13638 = cljs.core.seq.call(null,seq__11625_13629);if(temp__4092__auto___13638)
{var seq__11625_13639__$1 = temp__4092__auto___13638;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11625_13639__$1))
{var c__7246__auto___13640 = cljs.core.chunk_first.call(null,seq__11625_13639__$1);{
var G__13641 = cljs.core.chunk_rest.call(null,seq__11625_13639__$1);
var G__13642 = c__7246__auto___13640;
var G__13643 = cljs.core.count.call(null,c__7246__auto___13640);
var G__13644 = 0;
seq__11625_13629 = G__13641;
chunk__11626_13630 = G__13642;
count__11627_13631 = G__13643;
i__11628_13632 = G__13644;
continue;
}
} else
{var arg__9967__auto___13645 = cljs.core.first.call(null,seq__11625_13639__$1);a__9966__auto__.push(arg__9967__auto___13645);
{
var G__13646 = cljs.core.next.call(null,seq__11625_13639__$1);
var G__13647 = null;
var G__13648 = 0;
var G__13649 = 0;
seq__11625_13629 = G__13646;
chunk__11626_13630 = G__13647;
count__11627_13631 = G__13648;
i__11628_13632 = G__13649;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.progress.apply(null,a__9966__auto__);
};
var progress = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return progress__delegate.call(this,args__9965__auto__);};
progress.cljs$lang$maxFixedArity = 0;
progress.cljs$lang$applyTo = (function (arglist__13650){
var args__9965__auto__ = cljs.core.seq(arglist__13650);
return progress__delegate(args__9965__auto__);
});
progress.cljs$core$IFn$_invoke$arity$variadic = progress__delegate;
return progress;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.q = (function() { 
var q__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11633_13651 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11634_13652 = null;var count__11635_13653 = 0;var i__11636_13654 = 0;while(true){
if((i__11636_13654 < count__11635_13653))
{var arg__9967__auto___13655 = cljs.core._nth.call(null,chunk__11634_13652,i__11636_13654);a__9966__auto__.push(arg__9967__auto___13655);
{
var G__13656 = seq__11633_13651;
var G__13657 = chunk__11634_13652;
var G__13658 = count__11635_13653;
var G__13659 = (i__11636_13654 + 1);
seq__11633_13651 = G__13656;
chunk__11634_13652 = G__13657;
count__11635_13653 = G__13658;
i__11636_13654 = G__13659;
continue;
}
} else
{var temp__4092__auto___13660 = cljs.core.seq.call(null,seq__11633_13651);if(temp__4092__auto___13660)
{var seq__11633_13661__$1 = temp__4092__auto___13660;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11633_13661__$1))
{var c__7246__auto___13662 = cljs.core.chunk_first.call(null,seq__11633_13661__$1);{
var G__13663 = cljs.core.chunk_rest.call(null,seq__11633_13661__$1);
var G__13664 = c__7246__auto___13662;
var G__13665 = cljs.core.count.call(null,c__7246__auto___13662);
var G__13666 = 0;
seq__11633_13651 = G__13663;
chunk__11634_13652 = G__13664;
count__11635_13653 = G__13665;
i__11636_13654 = G__13666;
continue;
}
} else
{var arg__9967__auto___13667 = cljs.core.first.call(null,seq__11633_13661__$1);a__9966__auto__.push(arg__9967__auto___13667);
{
var G__13668 = cljs.core.next.call(null,seq__11633_13661__$1);
var G__13669 = null;
var G__13670 = 0;
var G__13671 = 0;
seq__11633_13651 = G__13668;
chunk__11634_13652 = G__13669;
count__11635_13653 = G__13670;
i__11636_13654 = G__13671;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.q.apply(null,a__9966__auto__);
};
var q = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return q__delegate.call(this,args__9965__auto__);};
q.cljs$lang$maxFixedArity = 0;
q.cljs$lang$applyTo = (function (arglist__13672){
var args__9965__auto__ = cljs.core.seq(arglist__13672);
return q__delegate(args__9965__auto__);
});
q.cljs$core$IFn$_invoke$arity$variadic = q__delegate;
return q;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.rp = (function() { 
var rp__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11641_13673 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11642_13674 = null;var count__11643_13675 = 0;var i__11644_13676 = 0;while(true){
if((i__11644_13676 < count__11643_13675))
{var arg__9967__auto___13677 = cljs.core._nth.call(null,chunk__11642_13674,i__11644_13676);a__9966__auto__.push(arg__9967__auto___13677);
{
var G__13678 = seq__11641_13673;
var G__13679 = chunk__11642_13674;
var G__13680 = count__11643_13675;
var G__13681 = (i__11644_13676 + 1);
seq__11641_13673 = G__13678;
chunk__11642_13674 = G__13679;
count__11643_13675 = G__13680;
i__11644_13676 = G__13681;
continue;
}
} else
{var temp__4092__auto___13682 = cljs.core.seq.call(null,seq__11641_13673);if(temp__4092__auto___13682)
{var seq__11641_13683__$1 = temp__4092__auto___13682;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11641_13683__$1))
{var c__7246__auto___13684 = cljs.core.chunk_first.call(null,seq__11641_13683__$1);{
var G__13685 = cljs.core.chunk_rest.call(null,seq__11641_13683__$1);
var G__13686 = c__7246__auto___13684;
var G__13687 = cljs.core.count.call(null,c__7246__auto___13684);
var G__13688 = 0;
seq__11641_13673 = G__13685;
chunk__11642_13674 = G__13686;
count__11643_13675 = G__13687;
i__11644_13676 = G__13688;
continue;
}
} else
{var arg__9967__auto___13689 = cljs.core.first.call(null,seq__11641_13683__$1);a__9966__auto__.push(arg__9967__auto___13689);
{
var G__13690 = cljs.core.next.call(null,seq__11641_13683__$1);
var G__13691 = null;
var G__13692 = 0;
var G__13693 = 0;
seq__11641_13673 = G__13690;
chunk__11642_13674 = G__13691;
count__11643_13675 = G__13692;
i__11644_13676 = G__13693;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.rp.apply(null,a__9966__auto__);
};
var rp = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return rp__delegate.call(this,args__9965__auto__);};
rp.cljs$lang$maxFixedArity = 0;
rp.cljs$lang$applyTo = (function (arglist__13694){
var args__9965__auto__ = cljs.core.seq(arglist__13694);
return rp__delegate(args__9965__auto__);
});
rp.cljs$core$IFn$_invoke$arity$variadic = rp__delegate;
return rp;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.rt = (function() { 
var rt__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11649_13695 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11650_13696 = null;var count__11651_13697 = 0;var i__11652_13698 = 0;while(true){
if((i__11652_13698 < count__11651_13697))
{var arg__9967__auto___13699 = cljs.core._nth.call(null,chunk__11650_13696,i__11652_13698);a__9966__auto__.push(arg__9967__auto___13699);
{
var G__13700 = seq__11649_13695;
var G__13701 = chunk__11650_13696;
var G__13702 = count__11651_13697;
var G__13703 = (i__11652_13698 + 1);
seq__11649_13695 = G__13700;
chunk__11650_13696 = G__13701;
count__11651_13697 = G__13702;
i__11652_13698 = G__13703;
continue;
}
} else
{var temp__4092__auto___13704 = cljs.core.seq.call(null,seq__11649_13695);if(temp__4092__auto___13704)
{var seq__11649_13705__$1 = temp__4092__auto___13704;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11649_13705__$1))
{var c__7246__auto___13706 = cljs.core.chunk_first.call(null,seq__11649_13705__$1);{
var G__13707 = cljs.core.chunk_rest.call(null,seq__11649_13705__$1);
var G__13708 = c__7246__auto___13706;
var G__13709 = cljs.core.count.call(null,c__7246__auto___13706);
var G__13710 = 0;
seq__11649_13695 = G__13707;
chunk__11650_13696 = G__13708;
count__11651_13697 = G__13709;
i__11652_13698 = G__13710;
continue;
}
} else
{var arg__9967__auto___13711 = cljs.core.first.call(null,seq__11649_13705__$1);a__9966__auto__.push(arg__9967__auto___13711);
{
var G__13712 = cljs.core.next.call(null,seq__11649_13705__$1);
var G__13713 = null;
var G__13714 = 0;
var G__13715 = 0;
seq__11649_13695 = G__13712;
chunk__11650_13696 = G__13713;
count__11651_13697 = G__13714;
i__11652_13698 = G__13715;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.rt.apply(null,a__9966__auto__);
};
var rt = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return rt__delegate.call(this,args__9965__auto__);};
rt.cljs$lang$maxFixedArity = 0;
rt.cljs$lang$applyTo = (function (arglist__13716){
var args__9965__auto__ = cljs.core.seq(arglist__13716);
return rt__delegate(args__9965__auto__);
});
rt.cljs$core$IFn$_invoke$arity$variadic = rt__delegate;
return rt;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.ruby = (function() { 
var ruby__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11657_13717 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11658_13718 = null;var count__11659_13719 = 0;var i__11660_13720 = 0;while(true){
if((i__11660_13720 < count__11659_13719))
{var arg__9967__auto___13721 = cljs.core._nth.call(null,chunk__11658_13718,i__11660_13720);a__9966__auto__.push(arg__9967__auto___13721);
{
var G__13722 = seq__11657_13717;
var G__13723 = chunk__11658_13718;
var G__13724 = count__11659_13719;
var G__13725 = (i__11660_13720 + 1);
seq__11657_13717 = G__13722;
chunk__11658_13718 = G__13723;
count__11659_13719 = G__13724;
i__11660_13720 = G__13725;
continue;
}
} else
{var temp__4092__auto___13726 = cljs.core.seq.call(null,seq__11657_13717);if(temp__4092__auto___13726)
{var seq__11657_13727__$1 = temp__4092__auto___13726;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11657_13727__$1))
{var c__7246__auto___13728 = cljs.core.chunk_first.call(null,seq__11657_13727__$1);{
var G__13729 = cljs.core.chunk_rest.call(null,seq__11657_13727__$1);
var G__13730 = c__7246__auto___13728;
var G__13731 = cljs.core.count.call(null,c__7246__auto___13728);
var G__13732 = 0;
seq__11657_13717 = G__13729;
chunk__11658_13718 = G__13730;
count__11659_13719 = G__13731;
i__11660_13720 = G__13732;
continue;
}
} else
{var arg__9967__auto___13733 = cljs.core.first.call(null,seq__11657_13727__$1);a__9966__auto__.push(arg__9967__auto___13733);
{
var G__13734 = cljs.core.next.call(null,seq__11657_13727__$1);
var G__13735 = null;
var G__13736 = 0;
var G__13737 = 0;
seq__11657_13717 = G__13734;
chunk__11658_13718 = G__13735;
count__11659_13719 = G__13736;
i__11660_13720 = G__13737;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.ruby.apply(null,a__9966__auto__);
};
var ruby = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return ruby__delegate.call(this,args__9965__auto__);};
ruby.cljs$lang$maxFixedArity = 0;
ruby.cljs$lang$applyTo = (function (arglist__13738){
var args__9965__auto__ = cljs.core.seq(arglist__13738);
return ruby__delegate(args__9965__auto__);
});
ruby.cljs$core$IFn$_invoke$arity$variadic = ruby__delegate;
return ruby;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.s = (function() { 
var s__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11665_13739 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11666_13740 = null;var count__11667_13741 = 0;var i__11668_13742 = 0;while(true){
if((i__11668_13742 < count__11667_13741))
{var arg__9967__auto___13743 = cljs.core._nth.call(null,chunk__11666_13740,i__11668_13742);a__9966__auto__.push(arg__9967__auto___13743);
{
var G__13744 = seq__11665_13739;
var G__13745 = chunk__11666_13740;
var G__13746 = count__11667_13741;
var G__13747 = (i__11668_13742 + 1);
seq__11665_13739 = G__13744;
chunk__11666_13740 = G__13745;
count__11667_13741 = G__13746;
i__11668_13742 = G__13747;
continue;
}
} else
{var temp__4092__auto___13748 = cljs.core.seq.call(null,seq__11665_13739);if(temp__4092__auto___13748)
{var seq__11665_13749__$1 = temp__4092__auto___13748;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11665_13749__$1))
{var c__7246__auto___13750 = cljs.core.chunk_first.call(null,seq__11665_13749__$1);{
var G__13751 = cljs.core.chunk_rest.call(null,seq__11665_13749__$1);
var G__13752 = c__7246__auto___13750;
var G__13753 = cljs.core.count.call(null,c__7246__auto___13750);
var G__13754 = 0;
seq__11665_13739 = G__13751;
chunk__11666_13740 = G__13752;
count__11667_13741 = G__13753;
i__11668_13742 = G__13754;
continue;
}
} else
{var arg__9967__auto___13755 = cljs.core.first.call(null,seq__11665_13749__$1);a__9966__auto__.push(arg__9967__auto___13755);
{
var G__13756 = cljs.core.next.call(null,seq__11665_13749__$1);
var G__13757 = null;
var G__13758 = 0;
var G__13759 = 0;
seq__11665_13739 = G__13756;
chunk__11666_13740 = G__13757;
count__11667_13741 = G__13758;
i__11668_13742 = G__13759;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.s.apply(null,a__9966__auto__);
};
var s = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return s__delegate.call(this,args__9965__auto__);};
s.cljs$lang$maxFixedArity = 0;
s.cljs$lang$applyTo = (function (arglist__13760){
var args__9965__auto__ = cljs.core.seq(arglist__13760);
return s__delegate(args__9965__auto__);
});
s.cljs$core$IFn$_invoke$arity$variadic = s__delegate;
return s;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.samp = (function() { 
var samp__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11673_13761 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11674_13762 = null;var count__11675_13763 = 0;var i__11676_13764 = 0;while(true){
if((i__11676_13764 < count__11675_13763))
{var arg__9967__auto___13765 = cljs.core._nth.call(null,chunk__11674_13762,i__11676_13764);a__9966__auto__.push(arg__9967__auto___13765);
{
var G__13766 = seq__11673_13761;
var G__13767 = chunk__11674_13762;
var G__13768 = count__11675_13763;
var G__13769 = (i__11676_13764 + 1);
seq__11673_13761 = G__13766;
chunk__11674_13762 = G__13767;
count__11675_13763 = G__13768;
i__11676_13764 = G__13769;
continue;
}
} else
{var temp__4092__auto___13770 = cljs.core.seq.call(null,seq__11673_13761);if(temp__4092__auto___13770)
{var seq__11673_13771__$1 = temp__4092__auto___13770;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11673_13771__$1))
{var c__7246__auto___13772 = cljs.core.chunk_first.call(null,seq__11673_13771__$1);{
var G__13773 = cljs.core.chunk_rest.call(null,seq__11673_13771__$1);
var G__13774 = c__7246__auto___13772;
var G__13775 = cljs.core.count.call(null,c__7246__auto___13772);
var G__13776 = 0;
seq__11673_13761 = G__13773;
chunk__11674_13762 = G__13774;
count__11675_13763 = G__13775;
i__11676_13764 = G__13776;
continue;
}
} else
{var arg__9967__auto___13777 = cljs.core.first.call(null,seq__11673_13771__$1);a__9966__auto__.push(arg__9967__auto___13777);
{
var G__13778 = cljs.core.next.call(null,seq__11673_13771__$1);
var G__13779 = null;
var G__13780 = 0;
var G__13781 = 0;
seq__11673_13761 = G__13778;
chunk__11674_13762 = G__13779;
count__11675_13763 = G__13780;
i__11676_13764 = G__13781;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.samp.apply(null,a__9966__auto__);
};
var samp = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return samp__delegate.call(this,args__9965__auto__);};
samp.cljs$lang$maxFixedArity = 0;
samp.cljs$lang$applyTo = (function (arglist__13782){
var args__9965__auto__ = cljs.core.seq(arglist__13782);
return samp__delegate(args__9965__auto__);
});
samp.cljs$core$IFn$_invoke$arity$variadic = samp__delegate;
return samp;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.script = (function() { 
var script__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11681_13783 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11682_13784 = null;var count__11683_13785 = 0;var i__11684_13786 = 0;while(true){
if((i__11684_13786 < count__11683_13785))
{var arg__9967__auto___13787 = cljs.core._nth.call(null,chunk__11682_13784,i__11684_13786);a__9966__auto__.push(arg__9967__auto___13787);
{
var G__13788 = seq__11681_13783;
var G__13789 = chunk__11682_13784;
var G__13790 = count__11683_13785;
var G__13791 = (i__11684_13786 + 1);
seq__11681_13783 = G__13788;
chunk__11682_13784 = G__13789;
count__11683_13785 = G__13790;
i__11684_13786 = G__13791;
continue;
}
} else
{var temp__4092__auto___13792 = cljs.core.seq.call(null,seq__11681_13783);if(temp__4092__auto___13792)
{var seq__11681_13793__$1 = temp__4092__auto___13792;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11681_13793__$1))
{var c__7246__auto___13794 = cljs.core.chunk_first.call(null,seq__11681_13793__$1);{
var G__13795 = cljs.core.chunk_rest.call(null,seq__11681_13793__$1);
var G__13796 = c__7246__auto___13794;
var G__13797 = cljs.core.count.call(null,c__7246__auto___13794);
var G__13798 = 0;
seq__11681_13783 = G__13795;
chunk__11682_13784 = G__13796;
count__11683_13785 = G__13797;
i__11684_13786 = G__13798;
continue;
}
} else
{var arg__9967__auto___13799 = cljs.core.first.call(null,seq__11681_13793__$1);a__9966__auto__.push(arg__9967__auto___13799);
{
var G__13800 = cljs.core.next.call(null,seq__11681_13793__$1);
var G__13801 = null;
var G__13802 = 0;
var G__13803 = 0;
seq__11681_13783 = G__13800;
chunk__11682_13784 = G__13801;
count__11683_13785 = G__13802;
i__11684_13786 = G__13803;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.script.apply(null,a__9966__auto__);
};
var script = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return script__delegate.call(this,args__9965__auto__);};
script.cljs$lang$maxFixedArity = 0;
script.cljs$lang$applyTo = (function (arglist__13804){
var args__9965__auto__ = cljs.core.seq(arglist__13804);
return script__delegate(args__9965__auto__);
});
script.cljs$core$IFn$_invoke$arity$variadic = script__delegate;
return script;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.section = (function() { 
var section__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11689_13805 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11690_13806 = null;var count__11691_13807 = 0;var i__11692_13808 = 0;while(true){
if((i__11692_13808 < count__11691_13807))
{var arg__9967__auto___13809 = cljs.core._nth.call(null,chunk__11690_13806,i__11692_13808);a__9966__auto__.push(arg__9967__auto___13809);
{
var G__13810 = seq__11689_13805;
var G__13811 = chunk__11690_13806;
var G__13812 = count__11691_13807;
var G__13813 = (i__11692_13808 + 1);
seq__11689_13805 = G__13810;
chunk__11690_13806 = G__13811;
count__11691_13807 = G__13812;
i__11692_13808 = G__13813;
continue;
}
} else
{var temp__4092__auto___13814 = cljs.core.seq.call(null,seq__11689_13805);if(temp__4092__auto___13814)
{var seq__11689_13815__$1 = temp__4092__auto___13814;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11689_13815__$1))
{var c__7246__auto___13816 = cljs.core.chunk_first.call(null,seq__11689_13815__$1);{
var G__13817 = cljs.core.chunk_rest.call(null,seq__11689_13815__$1);
var G__13818 = c__7246__auto___13816;
var G__13819 = cljs.core.count.call(null,c__7246__auto___13816);
var G__13820 = 0;
seq__11689_13805 = G__13817;
chunk__11690_13806 = G__13818;
count__11691_13807 = G__13819;
i__11692_13808 = G__13820;
continue;
}
} else
{var arg__9967__auto___13821 = cljs.core.first.call(null,seq__11689_13815__$1);a__9966__auto__.push(arg__9967__auto___13821);
{
var G__13822 = cljs.core.next.call(null,seq__11689_13815__$1);
var G__13823 = null;
var G__13824 = 0;
var G__13825 = 0;
seq__11689_13805 = G__13822;
chunk__11690_13806 = G__13823;
count__11691_13807 = G__13824;
i__11692_13808 = G__13825;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.section.apply(null,a__9966__auto__);
};
var section = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return section__delegate.call(this,args__9965__auto__);};
section.cljs$lang$maxFixedArity = 0;
section.cljs$lang$applyTo = (function (arglist__13826){
var args__9965__auto__ = cljs.core.seq(arglist__13826);
return section__delegate(args__9965__auto__);
});
section.cljs$core$IFn$_invoke$arity$variadic = section__delegate;
return section;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.select = (function() { 
var select__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11697_13827 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11698_13828 = null;var count__11699_13829 = 0;var i__11700_13830 = 0;while(true){
if((i__11700_13830 < count__11699_13829))
{var arg__9967__auto___13831 = cljs.core._nth.call(null,chunk__11698_13828,i__11700_13830);a__9966__auto__.push(arg__9967__auto___13831);
{
var G__13832 = seq__11697_13827;
var G__13833 = chunk__11698_13828;
var G__13834 = count__11699_13829;
var G__13835 = (i__11700_13830 + 1);
seq__11697_13827 = G__13832;
chunk__11698_13828 = G__13833;
count__11699_13829 = G__13834;
i__11700_13830 = G__13835;
continue;
}
} else
{var temp__4092__auto___13836 = cljs.core.seq.call(null,seq__11697_13827);if(temp__4092__auto___13836)
{var seq__11697_13837__$1 = temp__4092__auto___13836;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11697_13837__$1))
{var c__7246__auto___13838 = cljs.core.chunk_first.call(null,seq__11697_13837__$1);{
var G__13839 = cljs.core.chunk_rest.call(null,seq__11697_13837__$1);
var G__13840 = c__7246__auto___13838;
var G__13841 = cljs.core.count.call(null,c__7246__auto___13838);
var G__13842 = 0;
seq__11697_13827 = G__13839;
chunk__11698_13828 = G__13840;
count__11699_13829 = G__13841;
i__11700_13830 = G__13842;
continue;
}
} else
{var arg__9967__auto___13843 = cljs.core.first.call(null,seq__11697_13837__$1);a__9966__auto__.push(arg__9967__auto___13843);
{
var G__13844 = cljs.core.next.call(null,seq__11697_13837__$1);
var G__13845 = null;
var G__13846 = 0;
var G__13847 = 0;
seq__11697_13827 = G__13844;
chunk__11698_13828 = G__13845;
count__11699_13829 = G__13846;
i__11700_13830 = G__13847;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.select.apply(null,a__9966__auto__);
};
var select = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return select__delegate.call(this,args__9965__auto__);};
select.cljs$lang$maxFixedArity = 0;
select.cljs$lang$applyTo = (function (arglist__13848){
var args__9965__auto__ = cljs.core.seq(arglist__13848);
return select__delegate(args__9965__auto__);
});
select.cljs$core$IFn$_invoke$arity$variadic = select__delegate;
return select;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.small = (function() { 
var small__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11705_13849 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11706_13850 = null;var count__11707_13851 = 0;var i__11708_13852 = 0;while(true){
if((i__11708_13852 < count__11707_13851))
{var arg__9967__auto___13853 = cljs.core._nth.call(null,chunk__11706_13850,i__11708_13852);a__9966__auto__.push(arg__9967__auto___13853);
{
var G__13854 = seq__11705_13849;
var G__13855 = chunk__11706_13850;
var G__13856 = count__11707_13851;
var G__13857 = (i__11708_13852 + 1);
seq__11705_13849 = G__13854;
chunk__11706_13850 = G__13855;
count__11707_13851 = G__13856;
i__11708_13852 = G__13857;
continue;
}
} else
{var temp__4092__auto___13858 = cljs.core.seq.call(null,seq__11705_13849);if(temp__4092__auto___13858)
{var seq__11705_13859__$1 = temp__4092__auto___13858;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11705_13859__$1))
{var c__7246__auto___13860 = cljs.core.chunk_first.call(null,seq__11705_13859__$1);{
var G__13861 = cljs.core.chunk_rest.call(null,seq__11705_13859__$1);
var G__13862 = c__7246__auto___13860;
var G__13863 = cljs.core.count.call(null,c__7246__auto___13860);
var G__13864 = 0;
seq__11705_13849 = G__13861;
chunk__11706_13850 = G__13862;
count__11707_13851 = G__13863;
i__11708_13852 = G__13864;
continue;
}
} else
{var arg__9967__auto___13865 = cljs.core.first.call(null,seq__11705_13859__$1);a__9966__auto__.push(arg__9967__auto___13865);
{
var G__13866 = cljs.core.next.call(null,seq__11705_13859__$1);
var G__13867 = null;
var G__13868 = 0;
var G__13869 = 0;
seq__11705_13849 = G__13866;
chunk__11706_13850 = G__13867;
count__11707_13851 = G__13868;
i__11708_13852 = G__13869;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.small.apply(null,a__9966__auto__);
};
var small = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return small__delegate.call(this,args__9965__auto__);};
small.cljs$lang$maxFixedArity = 0;
small.cljs$lang$applyTo = (function (arglist__13870){
var args__9965__auto__ = cljs.core.seq(arglist__13870);
return small__delegate(args__9965__auto__);
});
small.cljs$core$IFn$_invoke$arity$variadic = small__delegate;
return small;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.source = (function() { 
var source__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11713_13871 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11714_13872 = null;var count__11715_13873 = 0;var i__11716_13874 = 0;while(true){
if((i__11716_13874 < count__11715_13873))
{var arg__9967__auto___13875 = cljs.core._nth.call(null,chunk__11714_13872,i__11716_13874);a__9966__auto__.push(arg__9967__auto___13875);
{
var G__13876 = seq__11713_13871;
var G__13877 = chunk__11714_13872;
var G__13878 = count__11715_13873;
var G__13879 = (i__11716_13874 + 1);
seq__11713_13871 = G__13876;
chunk__11714_13872 = G__13877;
count__11715_13873 = G__13878;
i__11716_13874 = G__13879;
continue;
}
} else
{var temp__4092__auto___13880 = cljs.core.seq.call(null,seq__11713_13871);if(temp__4092__auto___13880)
{var seq__11713_13881__$1 = temp__4092__auto___13880;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11713_13881__$1))
{var c__7246__auto___13882 = cljs.core.chunk_first.call(null,seq__11713_13881__$1);{
var G__13883 = cljs.core.chunk_rest.call(null,seq__11713_13881__$1);
var G__13884 = c__7246__auto___13882;
var G__13885 = cljs.core.count.call(null,c__7246__auto___13882);
var G__13886 = 0;
seq__11713_13871 = G__13883;
chunk__11714_13872 = G__13884;
count__11715_13873 = G__13885;
i__11716_13874 = G__13886;
continue;
}
} else
{var arg__9967__auto___13887 = cljs.core.first.call(null,seq__11713_13881__$1);a__9966__auto__.push(arg__9967__auto___13887);
{
var G__13888 = cljs.core.next.call(null,seq__11713_13881__$1);
var G__13889 = null;
var G__13890 = 0;
var G__13891 = 0;
seq__11713_13871 = G__13888;
chunk__11714_13872 = G__13889;
count__11715_13873 = G__13890;
i__11716_13874 = G__13891;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.source.apply(null,a__9966__auto__);
};
var source = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return source__delegate.call(this,args__9965__auto__);};
source.cljs$lang$maxFixedArity = 0;
source.cljs$lang$applyTo = (function (arglist__13892){
var args__9965__auto__ = cljs.core.seq(arglist__13892);
return source__delegate(args__9965__auto__);
});
source.cljs$core$IFn$_invoke$arity$variadic = source__delegate;
return source;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.span = (function() { 
var span__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11721_13893 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11722_13894 = null;var count__11723_13895 = 0;var i__11724_13896 = 0;while(true){
if((i__11724_13896 < count__11723_13895))
{var arg__9967__auto___13897 = cljs.core._nth.call(null,chunk__11722_13894,i__11724_13896);a__9966__auto__.push(arg__9967__auto___13897);
{
var G__13898 = seq__11721_13893;
var G__13899 = chunk__11722_13894;
var G__13900 = count__11723_13895;
var G__13901 = (i__11724_13896 + 1);
seq__11721_13893 = G__13898;
chunk__11722_13894 = G__13899;
count__11723_13895 = G__13900;
i__11724_13896 = G__13901;
continue;
}
} else
{var temp__4092__auto___13902 = cljs.core.seq.call(null,seq__11721_13893);if(temp__4092__auto___13902)
{var seq__11721_13903__$1 = temp__4092__auto___13902;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11721_13903__$1))
{var c__7246__auto___13904 = cljs.core.chunk_first.call(null,seq__11721_13903__$1);{
var G__13905 = cljs.core.chunk_rest.call(null,seq__11721_13903__$1);
var G__13906 = c__7246__auto___13904;
var G__13907 = cljs.core.count.call(null,c__7246__auto___13904);
var G__13908 = 0;
seq__11721_13893 = G__13905;
chunk__11722_13894 = G__13906;
count__11723_13895 = G__13907;
i__11724_13896 = G__13908;
continue;
}
} else
{var arg__9967__auto___13909 = cljs.core.first.call(null,seq__11721_13903__$1);a__9966__auto__.push(arg__9967__auto___13909);
{
var G__13910 = cljs.core.next.call(null,seq__11721_13903__$1);
var G__13911 = null;
var G__13912 = 0;
var G__13913 = 0;
seq__11721_13893 = G__13910;
chunk__11722_13894 = G__13911;
count__11723_13895 = G__13912;
i__11724_13896 = G__13913;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.span.apply(null,a__9966__auto__);
};
var span = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return span__delegate.call(this,args__9965__auto__);};
span.cljs$lang$maxFixedArity = 0;
span.cljs$lang$applyTo = (function (arglist__13914){
var args__9965__auto__ = cljs.core.seq(arglist__13914);
return span__delegate(args__9965__auto__);
});
span.cljs$core$IFn$_invoke$arity$variadic = span__delegate;
return span;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.strong = (function() { 
var strong__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11729_13915 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11730_13916 = null;var count__11731_13917 = 0;var i__11732_13918 = 0;while(true){
if((i__11732_13918 < count__11731_13917))
{var arg__9967__auto___13919 = cljs.core._nth.call(null,chunk__11730_13916,i__11732_13918);a__9966__auto__.push(arg__9967__auto___13919);
{
var G__13920 = seq__11729_13915;
var G__13921 = chunk__11730_13916;
var G__13922 = count__11731_13917;
var G__13923 = (i__11732_13918 + 1);
seq__11729_13915 = G__13920;
chunk__11730_13916 = G__13921;
count__11731_13917 = G__13922;
i__11732_13918 = G__13923;
continue;
}
} else
{var temp__4092__auto___13924 = cljs.core.seq.call(null,seq__11729_13915);if(temp__4092__auto___13924)
{var seq__11729_13925__$1 = temp__4092__auto___13924;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11729_13925__$1))
{var c__7246__auto___13926 = cljs.core.chunk_first.call(null,seq__11729_13925__$1);{
var G__13927 = cljs.core.chunk_rest.call(null,seq__11729_13925__$1);
var G__13928 = c__7246__auto___13926;
var G__13929 = cljs.core.count.call(null,c__7246__auto___13926);
var G__13930 = 0;
seq__11729_13915 = G__13927;
chunk__11730_13916 = G__13928;
count__11731_13917 = G__13929;
i__11732_13918 = G__13930;
continue;
}
} else
{var arg__9967__auto___13931 = cljs.core.first.call(null,seq__11729_13925__$1);a__9966__auto__.push(arg__9967__auto___13931);
{
var G__13932 = cljs.core.next.call(null,seq__11729_13925__$1);
var G__13933 = null;
var G__13934 = 0;
var G__13935 = 0;
seq__11729_13915 = G__13932;
chunk__11730_13916 = G__13933;
count__11731_13917 = G__13934;
i__11732_13918 = G__13935;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.strong.apply(null,a__9966__auto__);
};
var strong = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return strong__delegate.call(this,args__9965__auto__);};
strong.cljs$lang$maxFixedArity = 0;
strong.cljs$lang$applyTo = (function (arglist__13936){
var args__9965__auto__ = cljs.core.seq(arglist__13936);
return strong__delegate(args__9965__auto__);
});
strong.cljs$core$IFn$_invoke$arity$variadic = strong__delegate;
return strong;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.style = (function() { 
var style__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11737_13937 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11738_13938 = null;var count__11739_13939 = 0;var i__11740_13940 = 0;while(true){
if((i__11740_13940 < count__11739_13939))
{var arg__9967__auto___13941 = cljs.core._nth.call(null,chunk__11738_13938,i__11740_13940);a__9966__auto__.push(arg__9967__auto___13941);
{
var G__13942 = seq__11737_13937;
var G__13943 = chunk__11738_13938;
var G__13944 = count__11739_13939;
var G__13945 = (i__11740_13940 + 1);
seq__11737_13937 = G__13942;
chunk__11738_13938 = G__13943;
count__11739_13939 = G__13944;
i__11740_13940 = G__13945;
continue;
}
} else
{var temp__4092__auto___13946 = cljs.core.seq.call(null,seq__11737_13937);if(temp__4092__auto___13946)
{var seq__11737_13947__$1 = temp__4092__auto___13946;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11737_13947__$1))
{var c__7246__auto___13948 = cljs.core.chunk_first.call(null,seq__11737_13947__$1);{
var G__13949 = cljs.core.chunk_rest.call(null,seq__11737_13947__$1);
var G__13950 = c__7246__auto___13948;
var G__13951 = cljs.core.count.call(null,c__7246__auto___13948);
var G__13952 = 0;
seq__11737_13937 = G__13949;
chunk__11738_13938 = G__13950;
count__11739_13939 = G__13951;
i__11740_13940 = G__13952;
continue;
}
} else
{var arg__9967__auto___13953 = cljs.core.first.call(null,seq__11737_13947__$1);a__9966__auto__.push(arg__9967__auto___13953);
{
var G__13954 = cljs.core.next.call(null,seq__11737_13947__$1);
var G__13955 = null;
var G__13956 = 0;
var G__13957 = 0;
seq__11737_13937 = G__13954;
chunk__11738_13938 = G__13955;
count__11739_13939 = G__13956;
i__11740_13940 = G__13957;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.style.apply(null,a__9966__auto__);
};
var style = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return style__delegate.call(this,args__9965__auto__);};
style.cljs$lang$maxFixedArity = 0;
style.cljs$lang$applyTo = (function (arglist__13958){
var args__9965__auto__ = cljs.core.seq(arglist__13958);
return style__delegate(args__9965__auto__);
});
style.cljs$core$IFn$_invoke$arity$variadic = style__delegate;
return style;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.sub = (function() { 
var sub__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11745_13959 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11746_13960 = null;var count__11747_13961 = 0;var i__11748_13962 = 0;while(true){
if((i__11748_13962 < count__11747_13961))
{var arg__9967__auto___13963 = cljs.core._nth.call(null,chunk__11746_13960,i__11748_13962);a__9966__auto__.push(arg__9967__auto___13963);
{
var G__13964 = seq__11745_13959;
var G__13965 = chunk__11746_13960;
var G__13966 = count__11747_13961;
var G__13967 = (i__11748_13962 + 1);
seq__11745_13959 = G__13964;
chunk__11746_13960 = G__13965;
count__11747_13961 = G__13966;
i__11748_13962 = G__13967;
continue;
}
} else
{var temp__4092__auto___13968 = cljs.core.seq.call(null,seq__11745_13959);if(temp__4092__auto___13968)
{var seq__11745_13969__$1 = temp__4092__auto___13968;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11745_13969__$1))
{var c__7246__auto___13970 = cljs.core.chunk_first.call(null,seq__11745_13969__$1);{
var G__13971 = cljs.core.chunk_rest.call(null,seq__11745_13969__$1);
var G__13972 = c__7246__auto___13970;
var G__13973 = cljs.core.count.call(null,c__7246__auto___13970);
var G__13974 = 0;
seq__11745_13959 = G__13971;
chunk__11746_13960 = G__13972;
count__11747_13961 = G__13973;
i__11748_13962 = G__13974;
continue;
}
} else
{var arg__9967__auto___13975 = cljs.core.first.call(null,seq__11745_13969__$1);a__9966__auto__.push(arg__9967__auto___13975);
{
var G__13976 = cljs.core.next.call(null,seq__11745_13969__$1);
var G__13977 = null;
var G__13978 = 0;
var G__13979 = 0;
seq__11745_13959 = G__13976;
chunk__11746_13960 = G__13977;
count__11747_13961 = G__13978;
i__11748_13962 = G__13979;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.sub.apply(null,a__9966__auto__);
};
var sub = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return sub__delegate.call(this,args__9965__auto__);};
sub.cljs$lang$maxFixedArity = 0;
sub.cljs$lang$applyTo = (function (arglist__13980){
var args__9965__auto__ = cljs.core.seq(arglist__13980);
return sub__delegate(args__9965__auto__);
});
sub.cljs$core$IFn$_invoke$arity$variadic = sub__delegate;
return sub;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.summary = (function() { 
var summary__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11753_13981 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11754_13982 = null;var count__11755_13983 = 0;var i__11756_13984 = 0;while(true){
if((i__11756_13984 < count__11755_13983))
{var arg__9967__auto___13985 = cljs.core._nth.call(null,chunk__11754_13982,i__11756_13984);a__9966__auto__.push(arg__9967__auto___13985);
{
var G__13986 = seq__11753_13981;
var G__13987 = chunk__11754_13982;
var G__13988 = count__11755_13983;
var G__13989 = (i__11756_13984 + 1);
seq__11753_13981 = G__13986;
chunk__11754_13982 = G__13987;
count__11755_13983 = G__13988;
i__11756_13984 = G__13989;
continue;
}
} else
{var temp__4092__auto___13990 = cljs.core.seq.call(null,seq__11753_13981);if(temp__4092__auto___13990)
{var seq__11753_13991__$1 = temp__4092__auto___13990;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11753_13991__$1))
{var c__7246__auto___13992 = cljs.core.chunk_first.call(null,seq__11753_13991__$1);{
var G__13993 = cljs.core.chunk_rest.call(null,seq__11753_13991__$1);
var G__13994 = c__7246__auto___13992;
var G__13995 = cljs.core.count.call(null,c__7246__auto___13992);
var G__13996 = 0;
seq__11753_13981 = G__13993;
chunk__11754_13982 = G__13994;
count__11755_13983 = G__13995;
i__11756_13984 = G__13996;
continue;
}
} else
{var arg__9967__auto___13997 = cljs.core.first.call(null,seq__11753_13991__$1);a__9966__auto__.push(arg__9967__auto___13997);
{
var G__13998 = cljs.core.next.call(null,seq__11753_13991__$1);
var G__13999 = null;
var G__14000 = 0;
var G__14001 = 0;
seq__11753_13981 = G__13998;
chunk__11754_13982 = G__13999;
count__11755_13983 = G__14000;
i__11756_13984 = G__14001;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.summary.apply(null,a__9966__auto__);
};
var summary = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return summary__delegate.call(this,args__9965__auto__);};
summary.cljs$lang$maxFixedArity = 0;
summary.cljs$lang$applyTo = (function (arglist__14002){
var args__9965__auto__ = cljs.core.seq(arglist__14002);
return summary__delegate(args__9965__auto__);
});
summary.cljs$core$IFn$_invoke$arity$variadic = summary__delegate;
return summary;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.sup = (function() { 
var sup__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11761_14003 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11762_14004 = null;var count__11763_14005 = 0;var i__11764_14006 = 0;while(true){
if((i__11764_14006 < count__11763_14005))
{var arg__9967__auto___14007 = cljs.core._nth.call(null,chunk__11762_14004,i__11764_14006);a__9966__auto__.push(arg__9967__auto___14007);
{
var G__14008 = seq__11761_14003;
var G__14009 = chunk__11762_14004;
var G__14010 = count__11763_14005;
var G__14011 = (i__11764_14006 + 1);
seq__11761_14003 = G__14008;
chunk__11762_14004 = G__14009;
count__11763_14005 = G__14010;
i__11764_14006 = G__14011;
continue;
}
} else
{var temp__4092__auto___14012 = cljs.core.seq.call(null,seq__11761_14003);if(temp__4092__auto___14012)
{var seq__11761_14013__$1 = temp__4092__auto___14012;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11761_14013__$1))
{var c__7246__auto___14014 = cljs.core.chunk_first.call(null,seq__11761_14013__$1);{
var G__14015 = cljs.core.chunk_rest.call(null,seq__11761_14013__$1);
var G__14016 = c__7246__auto___14014;
var G__14017 = cljs.core.count.call(null,c__7246__auto___14014);
var G__14018 = 0;
seq__11761_14003 = G__14015;
chunk__11762_14004 = G__14016;
count__11763_14005 = G__14017;
i__11764_14006 = G__14018;
continue;
}
} else
{var arg__9967__auto___14019 = cljs.core.first.call(null,seq__11761_14013__$1);a__9966__auto__.push(arg__9967__auto___14019);
{
var G__14020 = cljs.core.next.call(null,seq__11761_14013__$1);
var G__14021 = null;
var G__14022 = 0;
var G__14023 = 0;
seq__11761_14003 = G__14020;
chunk__11762_14004 = G__14021;
count__11763_14005 = G__14022;
i__11764_14006 = G__14023;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.sup.apply(null,a__9966__auto__);
};
var sup = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return sup__delegate.call(this,args__9965__auto__);};
sup.cljs$lang$maxFixedArity = 0;
sup.cljs$lang$applyTo = (function (arglist__14024){
var args__9965__auto__ = cljs.core.seq(arglist__14024);
return sup__delegate(args__9965__auto__);
});
sup.cljs$core$IFn$_invoke$arity$variadic = sup__delegate;
return sup;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.table = (function() { 
var table__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11769_14025 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11770_14026 = null;var count__11771_14027 = 0;var i__11772_14028 = 0;while(true){
if((i__11772_14028 < count__11771_14027))
{var arg__9967__auto___14029 = cljs.core._nth.call(null,chunk__11770_14026,i__11772_14028);a__9966__auto__.push(arg__9967__auto___14029);
{
var G__14030 = seq__11769_14025;
var G__14031 = chunk__11770_14026;
var G__14032 = count__11771_14027;
var G__14033 = (i__11772_14028 + 1);
seq__11769_14025 = G__14030;
chunk__11770_14026 = G__14031;
count__11771_14027 = G__14032;
i__11772_14028 = G__14033;
continue;
}
} else
{var temp__4092__auto___14034 = cljs.core.seq.call(null,seq__11769_14025);if(temp__4092__auto___14034)
{var seq__11769_14035__$1 = temp__4092__auto___14034;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11769_14035__$1))
{var c__7246__auto___14036 = cljs.core.chunk_first.call(null,seq__11769_14035__$1);{
var G__14037 = cljs.core.chunk_rest.call(null,seq__11769_14035__$1);
var G__14038 = c__7246__auto___14036;
var G__14039 = cljs.core.count.call(null,c__7246__auto___14036);
var G__14040 = 0;
seq__11769_14025 = G__14037;
chunk__11770_14026 = G__14038;
count__11771_14027 = G__14039;
i__11772_14028 = G__14040;
continue;
}
} else
{var arg__9967__auto___14041 = cljs.core.first.call(null,seq__11769_14035__$1);a__9966__auto__.push(arg__9967__auto___14041);
{
var G__14042 = cljs.core.next.call(null,seq__11769_14035__$1);
var G__14043 = null;
var G__14044 = 0;
var G__14045 = 0;
seq__11769_14025 = G__14042;
chunk__11770_14026 = G__14043;
count__11771_14027 = G__14044;
i__11772_14028 = G__14045;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.table.apply(null,a__9966__auto__);
};
var table = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return table__delegate.call(this,args__9965__auto__);};
table.cljs$lang$maxFixedArity = 0;
table.cljs$lang$applyTo = (function (arglist__14046){
var args__9965__auto__ = cljs.core.seq(arglist__14046);
return table__delegate(args__9965__auto__);
});
table.cljs$core$IFn$_invoke$arity$variadic = table__delegate;
return table;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.tbody = (function() { 
var tbody__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11777_14047 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11778_14048 = null;var count__11779_14049 = 0;var i__11780_14050 = 0;while(true){
if((i__11780_14050 < count__11779_14049))
{var arg__9967__auto___14051 = cljs.core._nth.call(null,chunk__11778_14048,i__11780_14050);a__9966__auto__.push(arg__9967__auto___14051);
{
var G__14052 = seq__11777_14047;
var G__14053 = chunk__11778_14048;
var G__14054 = count__11779_14049;
var G__14055 = (i__11780_14050 + 1);
seq__11777_14047 = G__14052;
chunk__11778_14048 = G__14053;
count__11779_14049 = G__14054;
i__11780_14050 = G__14055;
continue;
}
} else
{var temp__4092__auto___14056 = cljs.core.seq.call(null,seq__11777_14047);if(temp__4092__auto___14056)
{var seq__11777_14057__$1 = temp__4092__auto___14056;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11777_14057__$1))
{var c__7246__auto___14058 = cljs.core.chunk_first.call(null,seq__11777_14057__$1);{
var G__14059 = cljs.core.chunk_rest.call(null,seq__11777_14057__$1);
var G__14060 = c__7246__auto___14058;
var G__14061 = cljs.core.count.call(null,c__7246__auto___14058);
var G__14062 = 0;
seq__11777_14047 = G__14059;
chunk__11778_14048 = G__14060;
count__11779_14049 = G__14061;
i__11780_14050 = G__14062;
continue;
}
} else
{var arg__9967__auto___14063 = cljs.core.first.call(null,seq__11777_14057__$1);a__9966__auto__.push(arg__9967__auto___14063);
{
var G__14064 = cljs.core.next.call(null,seq__11777_14057__$1);
var G__14065 = null;
var G__14066 = 0;
var G__14067 = 0;
seq__11777_14047 = G__14064;
chunk__11778_14048 = G__14065;
count__11779_14049 = G__14066;
i__11780_14050 = G__14067;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.tbody.apply(null,a__9966__auto__);
};
var tbody = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return tbody__delegate.call(this,args__9965__auto__);};
tbody.cljs$lang$maxFixedArity = 0;
tbody.cljs$lang$applyTo = (function (arglist__14068){
var args__9965__auto__ = cljs.core.seq(arglist__14068);
return tbody__delegate(args__9965__auto__);
});
tbody.cljs$core$IFn$_invoke$arity$variadic = tbody__delegate;
return tbody;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.td = (function() { 
var td__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11785_14069 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11786_14070 = null;var count__11787_14071 = 0;var i__11788_14072 = 0;while(true){
if((i__11788_14072 < count__11787_14071))
{var arg__9967__auto___14073 = cljs.core._nth.call(null,chunk__11786_14070,i__11788_14072);a__9966__auto__.push(arg__9967__auto___14073);
{
var G__14074 = seq__11785_14069;
var G__14075 = chunk__11786_14070;
var G__14076 = count__11787_14071;
var G__14077 = (i__11788_14072 + 1);
seq__11785_14069 = G__14074;
chunk__11786_14070 = G__14075;
count__11787_14071 = G__14076;
i__11788_14072 = G__14077;
continue;
}
} else
{var temp__4092__auto___14078 = cljs.core.seq.call(null,seq__11785_14069);if(temp__4092__auto___14078)
{var seq__11785_14079__$1 = temp__4092__auto___14078;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11785_14079__$1))
{var c__7246__auto___14080 = cljs.core.chunk_first.call(null,seq__11785_14079__$1);{
var G__14081 = cljs.core.chunk_rest.call(null,seq__11785_14079__$1);
var G__14082 = c__7246__auto___14080;
var G__14083 = cljs.core.count.call(null,c__7246__auto___14080);
var G__14084 = 0;
seq__11785_14069 = G__14081;
chunk__11786_14070 = G__14082;
count__11787_14071 = G__14083;
i__11788_14072 = G__14084;
continue;
}
} else
{var arg__9967__auto___14085 = cljs.core.first.call(null,seq__11785_14079__$1);a__9966__auto__.push(arg__9967__auto___14085);
{
var G__14086 = cljs.core.next.call(null,seq__11785_14079__$1);
var G__14087 = null;
var G__14088 = 0;
var G__14089 = 0;
seq__11785_14069 = G__14086;
chunk__11786_14070 = G__14087;
count__11787_14071 = G__14088;
i__11788_14072 = G__14089;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.td.apply(null,a__9966__auto__);
};
var td = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return td__delegate.call(this,args__9965__auto__);};
td.cljs$lang$maxFixedArity = 0;
td.cljs$lang$applyTo = (function (arglist__14090){
var args__9965__auto__ = cljs.core.seq(arglist__14090);
return td__delegate(args__9965__auto__);
});
td.cljs$core$IFn$_invoke$arity$variadic = td__delegate;
return td;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.textarea = (function() { 
var textarea__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11793_14091 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11794_14092 = null;var count__11795_14093 = 0;var i__11796_14094 = 0;while(true){
if((i__11796_14094 < count__11795_14093))
{var arg__9967__auto___14095 = cljs.core._nth.call(null,chunk__11794_14092,i__11796_14094);a__9966__auto__.push(arg__9967__auto___14095);
{
var G__14096 = seq__11793_14091;
var G__14097 = chunk__11794_14092;
var G__14098 = count__11795_14093;
var G__14099 = (i__11796_14094 + 1);
seq__11793_14091 = G__14096;
chunk__11794_14092 = G__14097;
count__11795_14093 = G__14098;
i__11796_14094 = G__14099;
continue;
}
} else
{var temp__4092__auto___14100 = cljs.core.seq.call(null,seq__11793_14091);if(temp__4092__auto___14100)
{var seq__11793_14101__$1 = temp__4092__auto___14100;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11793_14101__$1))
{var c__7246__auto___14102 = cljs.core.chunk_first.call(null,seq__11793_14101__$1);{
var G__14103 = cljs.core.chunk_rest.call(null,seq__11793_14101__$1);
var G__14104 = c__7246__auto___14102;
var G__14105 = cljs.core.count.call(null,c__7246__auto___14102);
var G__14106 = 0;
seq__11793_14091 = G__14103;
chunk__11794_14092 = G__14104;
count__11795_14093 = G__14105;
i__11796_14094 = G__14106;
continue;
}
} else
{var arg__9967__auto___14107 = cljs.core.first.call(null,seq__11793_14101__$1);a__9966__auto__.push(arg__9967__auto___14107);
{
var G__14108 = cljs.core.next.call(null,seq__11793_14101__$1);
var G__14109 = null;
var G__14110 = 0;
var G__14111 = 0;
seq__11793_14091 = G__14108;
chunk__11794_14092 = G__14109;
count__11795_14093 = G__14110;
i__11796_14094 = G__14111;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.textarea.apply(null,a__9966__auto__);
};
var textarea = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return textarea__delegate.call(this,args__9965__auto__);};
textarea.cljs$lang$maxFixedArity = 0;
textarea.cljs$lang$applyTo = (function (arglist__14112){
var args__9965__auto__ = cljs.core.seq(arglist__14112);
return textarea__delegate(args__9965__auto__);
});
textarea.cljs$core$IFn$_invoke$arity$variadic = textarea__delegate;
return textarea;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.tfoot = (function() { 
var tfoot__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11801_14113 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11802_14114 = null;var count__11803_14115 = 0;var i__11804_14116 = 0;while(true){
if((i__11804_14116 < count__11803_14115))
{var arg__9967__auto___14117 = cljs.core._nth.call(null,chunk__11802_14114,i__11804_14116);a__9966__auto__.push(arg__9967__auto___14117);
{
var G__14118 = seq__11801_14113;
var G__14119 = chunk__11802_14114;
var G__14120 = count__11803_14115;
var G__14121 = (i__11804_14116 + 1);
seq__11801_14113 = G__14118;
chunk__11802_14114 = G__14119;
count__11803_14115 = G__14120;
i__11804_14116 = G__14121;
continue;
}
} else
{var temp__4092__auto___14122 = cljs.core.seq.call(null,seq__11801_14113);if(temp__4092__auto___14122)
{var seq__11801_14123__$1 = temp__4092__auto___14122;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11801_14123__$1))
{var c__7246__auto___14124 = cljs.core.chunk_first.call(null,seq__11801_14123__$1);{
var G__14125 = cljs.core.chunk_rest.call(null,seq__11801_14123__$1);
var G__14126 = c__7246__auto___14124;
var G__14127 = cljs.core.count.call(null,c__7246__auto___14124);
var G__14128 = 0;
seq__11801_14113 = G__14125;
chunk__11802_14114 = G__14126;
count__11803_14115 = G__14127;
i__11804_14116 = G__14128;
continue;
}
} else
{var arg__9967__auto___14129 = cljs.core.first.call(null,seq__11801_14123__$1);a__9966__auto__.push(arg__9967__auto___14129);
{
var G__14130 = cljs.core.next.call(null,seq__11801_14123__$1);
var G__14131 = null;
var G__14132 = 0;
var G__14133 = 0;
seq__11801_14113 = G__14130;
chunk__11802_14114 = G__14131;
count__11803_14115 = G__14132;
i__11804_14116 = G__14133;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.tfoot.apply(null,a__9966__auto__);
};
var tfoot = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return tfoot__delegate.call(this,args__9965__auto__);};
tfoot.cljs$lang$maxFixedArity = 0;
tfoot.cljs$lang$applyTo = (function (arglist__14134){
var args__9965__auto__ = cljs.core.seq(arglist__14134);
return tfoot__delegate(args__9965__auto__);
});
tfoot.cljs$core$IFn$_invoke$arity$variadic = tfoot__delegate;
return tfoot;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.th = (function() { 
var th__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11809_14135 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11810_14136 = null;var count__11811_14137 = 0;var i__11812_14138 = 0;while(true){
if((i__11812_14138 < count__11811_14137))
{var arg__9967__auto___14139 = cljs.core._nth.call(null,chunk__11810_14136,i__11812_14138);a__9966__auto__.push(arg__9967__auto___14139);
{
var G__14140 = seq__11809_14135;
var G__14141 = chunk__11810_14136;
var G__14142 = count__11811_14137;
var G__14143 = (i__11812_14138 + 1);
seq__11809_14135 = G__14140;
chunk__11810_14136 = G__14141;
count__11811_14137 = G__14142;
i__11812_14138 = G__14143;
continue;
}
} else
{var temp__4092__auto___14144 = cljs.core.seq.call(null,seq__11809_14135);if(temp__4092__auto___14144)
{var seq__11809_14145__$1 = temp__4092__auto___14144;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11809_14145__$1))
{var c__7246__auto___14146 = cljs.core.chunk_first.call(null,seq__11809_14145__$1);{
var G__14147 = cljs.core.chunk_rest.call(null,seq__11809_14145__$1);
var G__14148 = c__7246__auto___14146;
var G__14149 = cljs.core.count.call(null,c__7246__auto___14146);
var G__14150 = 0;
seq__11809_14135 = G__14147;
chunk__11810_14136 = G__14148;
count__11811_14137 = G__14149;
i__11812_14138 = G__14150;
continue;
}
} else
{var arg__9967__auto___14151 = cljs.core.first.call(null,seq__11809_14145__$1);a__9966__auto__.push(arg__9967__auto___14151);
{
var G__14152 = cljs.core.next.call(null,seq__11809_14145__$1);
var G__14153 = null;
var G__14154 = 0;
var G__14155 = 0;
seq__11809_14135 = G__14152;
chunk__11810_14136 = G__14153;
count__11811_14137 = G__14154;
i__11812_14138 = G__14155;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.th.apply(null,a__9966__auto__);
};
var th = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return th__delegate.call(this,args__9965__auto__);};
th.cljs$lang$maxFixedArity = 0;
th.cljs$lang$applyTo = (function (arglist__14156){
var args__9965__auto__ = cljs.core.seq(arglist__14156);
return th__delegate(args__9965__auto__);
});
th.cljs$core$IFn$_invoke$arity$variadic = th__delegate;
return th;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.thead = (function() { 
var thead__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11817_14157 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11818_14158 = null;var count__11819_14159 = 0;var i__11820_14160 = 0;while(true){
if((i__11820_14160 < count__11819_14159))
{var arg__9967__auto___14161 = cljs.core._nth.call(null,chunk__11818_14158,i__11820_14160);a__9966__auto__.push(arg__9967__auto___14161);
{
var G__14162 = seq__11817_14157;
var G__14163 = chunk__11818_14158;
var G__14164 = count__11819_14159;
var G__14165 = (i__11820_14160 + 1);
seq__11817_14157 = G__14162;
chunk__11818_14158 = G__14163;
count__11819_14159 = G__14164;
i__11820_14160 = G__14165;
continue;
}
} else
{var temp__4092__auto___14166 = cljs.core.seq.call(null,seq__11817_14157);if(temp__4092__auto___14166)
{var seq__11817_14167__$1 = temp__4092__auto___14166;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11817_14167__$1))
{var c__7246__auto___14168 = cljs.core.chunk_first.call(null,seq__11817_14167__$1);{
var G__14169 = cljs.core.chunk_rest.call(null,seq__11817_14167__$1);
var G__14170 = c__7246__auto___14168;
var G__14171 = cljs.core.count.call(null,c__7246__auto___14168);
var G__14172 = 0;
seq__11817_14157 = G__14169;
chunk__11818_14158 = G__14170;
count__11819_14159 = G__14171;
i__11820_14160 = G__14172;
continue;
}
} else
{var arg__9967__auto___14173 = cljs.core.first.call(null,seq__11817_14167__$1);a__9966__auto__.push(arg__9967__auto___14173);
{
var G__14174 = cljs.core.next.call(null,seq__11817_14167__$1);
var G__14175 = null;
var G__14176 = 0;
var G__14177 = 0;
seq__11817_14157 = G__14174;
chunk__11818_14158 = G__14175;
count__11819_14159 = G__14176;
i__11820_14160 = G__14177;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.thead.apply(null,a__9966__auto__);
};
var thead = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return thead__delegate.call(this,args__9965__auto__);};
thead.cljs$lang$maxFixedArity = 0;
thead.cljs$lang$applyTo = (function (arglist__14178){
var args__9965__auto__ = cljs.core.seq(arglist__14178);
return thead__delegate(args__9965__auto__);
});
thead.cljs$core$IFn$_invoke$arity$variadic = thead__delegate;
return thead;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.time = (function() { 
var time__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11825_14179 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11826_14180 = null;var count__11827_14181 = 0;var i__11828_14182 = 0;while(true){
if((i__11828_14182 < count__11827_14181))
{var arg__9967__auto___14183 = cljs.core._nth.call(null,chunk__11826_14180,i__11828_14182);a__9966__auto__.push(arg__9967__auto___14183);
{
var G__14184 = seq__11825_14179;
var G__14185 = chunk__11826_14180;
var G__14186 = count__11827_14181;
var G__14187 = (i__11828_14182 + 1);
seq__11825_14179 = G__14184;
chunk__11826_14180 = G__14185;
count__11827_14181 = G__14186;
i__11828_14182 = G__14187;
continue;
}
} else
{var temp__4092__auto___14188 = cljs.core.seq.call(null,seq__11825_14179);if(temp__4092__auto___14188)
{var seq__11825_14189__$1 = temp__4092__auto___14188;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11825_14189__$1))
{var c__7246__auto___14190 = cljs.core.chunk_first.call(null,seq__11825_14189__$1);{
var G__14191 = cljs.core.chunk_rest.call(null,seq__11825_14189__$1);
var G__14192 = c__7246__auto___14190;
var G__14193 = cljs.core.count.call(null,c__7246__auto___14190);
var G__14194 = 0;
seq__11825_14179 = G__14191;
chunk__11826_14180 = G__14192;
count__11827_14181 = G__14193;
i__11828_14182 = G__14194;
continue;
}
} else
{var arg__9967__auto___14195 = cljs.core.first.call(null,seq__11825_14189__$1);a__9966__auto__.push(arg__9967__auto___14195);
{
var G__14196 = cljs.core.next.call(null,seq__11825_14189__$1);
var G__14197 = null;
var G__14198 = 0;
var G__14199 = 0;
seq__11825_14179 = G__14196;
chunk__11826_14180 = G__14197;
count__11827_14181 = G__14198;
i__11828_14182 = G__14199;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.time.apply(null,a__9966__auto__);
};
var time = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return time__delegate.call(this,args__9965__auto__);};
time.cljs$lang$maxFixedArity = 0;
time.cljs$lang$applyTo = (function (arglist__14200){
var args__9965__auto__ = cljs.core.seq(arglist__14200);
return time__delegate(args__9965__auto__);
});
time.cljs$core$IFn$_invoke$arity$variadic = time__delegate;
return time;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.title = (function() { 
var title__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11833_14201 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11834_14202 = null;var count__11835_14203 = 0;var i__11836_14204 = 0;while(true){
if((i__11836_14204 < count__11835_14203))
{var arg__9967__auto___14205 = cljs.core._nth.call(null,chunk__11834_14202,i__11836_14204);a__9966__auto__.push(arg__9967__auto___14205);
{
var G__14206 = seq__11833_14201;
var G__14207 = chunk__11834_14202;
var G__14208 = count__11835_14203;
var G__14209 = (i__11836_14204 + 1);
seq__11833_14201 = G__14206;
chunk__11834_14202 = G__14207;
count__11835_14203 = G__14208;
i__11836_14204 = G__14209;
continue;
}
} else
{var temp__4092__auto___14210 = cljs.core.seq.call(null,seq__11833_14201);if(temp__4092__auto___14210)
{var seq__11833_14211__$1 = temp__4092__auto___14210;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11833_14211__$1))
{var c__7246__auto___14212 = cljs.core.chunk_first.call(null,seq__11833_14211__$1);{
var G__14213 = cljs.core.chunk_rest.call(null,seq__11833_14211__$1);
var G__14214 = c__7246__auto___14212;
var G__14215 = cljs.core.count.call(null,c__7246__auto___14212);
var G__14216 = 0;
seq__11833_14201 = G__14213;
chunk__11834_14202 = G__14214;
count__11835_14203 = G__14215;
i__11836_14204 = G__14216;
continue;
}
} else
{var arg__9967__auto___14217 = cljs.core.first.call(null,seq__11833_14211__$1);a__9966__auto__.push(arg__9967__auto___14217);
{
var G__14218 = cljs.core.next.call(null,seq__11833_14211__$1);
var G__14219 = null;
var G__14220 = 0;
var G__14221 = 0;
seq__11833_14201 = G__14218;
chunk__11834_14202 = G__14219;
count__11835_14203 = G__14220;
i__11836_14204 = G__14221;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.title.apply(null,a__9966__auto__);
};
var title = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return title__delegate.call(this,args__9965__auto__);};
title.cljs$lang$maxFixedArity = 0;
title.cljs$lang$applyTo = (function (arglist__14222){
var args__9965__auto__ = cljs.core.seq(arglist__14222);
return title__delegate(args__9965__auto__);
});
title.cljs$core$IFn$_invoke$arity$variadic = title__delegate;
return title;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.tr = (function() { 
var tr__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11841_14223 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11842_14224 = null;var count__11843_14225 = 0;var i__11844_14226 = 0;while(true){
if((i__11844_14226 < count__11843_14225))
{var arg__9967__auto___14227 = cljs.core._nth.call(null,chunk__11842_14224,i__11844_14226);a__9966__auto__.push(arg__9967__auto___14227);
{
var G__14228 = seq__11841_14223;
var G__14229 = chunk__11842_14224;
var G__14230 = count__11843_14225;
var G__14231 = (i__11844_14226 + 1);
seq__11841_14223 = G__14228;
chunk__11842_14224 = G__14229;
count__11843_14225 = G__14230;
i__11844_14226 = G__14231;
continue;
}
} else
{var temp__4092__auto___14232 = cljs.core.seq.call(null,seq__11841_14223);if(temp__4092__auto___14232)
{var seq__11841_14233__$1 = temp__4092__auto___14232;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11841_14233__$1))
{var c__7246__auto___14234 = cljs.core.chunk_first.call(null,seq__11841_14233__$1);{
var G__14235 = cljs.core.chunk_rest.call(null,seq__11841_14233__$1);
var G__14236 = c__7246__auto___14234;
var G__14237 = cljs.core.count.call(null,c__7246__auto___14234);
var G__14238 = 0;
seq__11841_14223 = G__14235;
chunk__11842_14224 = G__14236;
count__11843_14225 = G__14237;
i__11844_14226 = G__14238;
continue;
}
} else
{var arg__9967__auto___14239 = cljs.core.first.call(null,seq__11841_14233__$1);a__9966__auto__.push(arg__9967__auto___14239);
{
var G__14240 = cljs.core.next.call(null,seq__11841_14233__$1);
var G__14241 = null;
var G__14242 = 0;
var G__14243 = 0;
seq__11841_14223 = G__14240;
chunk__11842_14224 = G__14241;
count__11843_14225 = G__14242;
i__11844_14226 = G__14243;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.tr.apply(null,a__9966__auto__);
};
var tr = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return tr__delegate.call(this,args__9965__auto__);};
tr.cljs$lang$maxFixedArity = 0;
tr.cljs$lang$applyTo = (function (arglist__14244){
var args__9965__auto__ = cljs.core.seq(arglist__14244);
return tr__delegate(args__9965__auto__);
});
tr.cljs$core$IFn$_invoke$arity$variadic = tr__delegate;
return tr;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.track = (function() { 
var track__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11849_14245 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11850_14246 = null;var count__11851_14247 = 0;var i__11852_14248 = 0;while(true){
if((i__11852_14248 < count__11851_14247))
{var arg__9967__auto___14249 = cljs.core._nth.call(null,chunk__11850_14246,i__11852_14248);a__9966__auto__.push(arg__9967__auto___14249);
{
var G__14250 = seq__11849_14245;
var G__14251 = chunk__11850_14246;
var G__14252 = count__11851_14247;
var G__14253 = (i__11852_14248 + 1);
seq__11849_14245 = G__14250;
chunk__11850_14246 = G__14251;
count__11851_14247 = G__14252;
i__11852_14248 = G__14253;
continue;
}
} else
{var temp__4092__auto___14254 = cljs.core.seq.call(null,seq__11849_14245);if(temp__4092__auto___14254)
{var seq__11849_14255__$1 = temp__4092__auto___14254;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11849_14255__$1))
{var c__7246__auto___14256 = cljs.core.chunk_first.call(null,seq__11849_14255__$1);{
var G__14257 = cljs.core.chunk_rest.call(null,seq__11849_14255__$1);
var G__14258 = c__7246__auto___14256;
var G__14259 = cljs.core.count.call(null,c__7246__auto___14256);
var G__14260 = 0;
seq__11849_14245 = G__14257;
chunk__11850_14246 = G__14258;
count__11851_14247 = G__14259;
i__11852_14248 = G__14260;
continue;
}
} else
{var arg__9967__auto___14261 = cljs.core.first.call(null,seq__11849_14255__$1);a__9966__auto__.push(arg__9967__auto___14261);
{
var G__14262 = cljs.core.next.call(null,seq__11849_14255__$1);
var G__14263 = null;
var G__14264 = 0;
var G__14265 = 0;
seq__11849_14245 = G__14262;
chunk__11850_14246 = G__14263;
count__11851_14247 = G__14264;
i__11852_14248 = G__14265;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.track.apply(null,a__9966__auto__);
};
var track = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return track__delegate.call(this,args__9965__auto__);};
track.cljs$lang$maxFixedArity = 0;
track.cljs$lang$applyTo = (function (arglist__14266){
var args__9965__auto__ = cljs.core.seq(arglist__14266);
return track__delegate(args__9965__auto__);
});
track.cljs$core$IFn$_invoke$arity$variadic = track__delegate;
return track;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.u = (function() { 
var u__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11857_14267 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11858_14268 = null;var count__11859_14269 = 0;var i__11860_14270 = 0;while(true){
if((i__11860_14270 < count__11859_14269))
{var arg__9967__auto___14271 = cljs.core._nth.call(null,chunk__11858_14268,i__11860_14270);a__9966__auto__.push(arg__9967__auto___14271);
{
var G__14272 = seq__11857_14267;
var G__14273 = chunk__11858_14268;
var G__14274 = count__11859_14269;
var G__14275 = (i__11860_14270 + 1);
seq__11857_14267 = G__14272;
chunk__11858_14268 = G__14273;
count__11859_14269 = G__14274;
i__11860_14270 = G__14275;
continue;
}
} else
{var temp__4092__auto___14276 = cljs.core.seq.call(null,seq__11857_14267);if(temp__4092__auto___14276)
{var seq__11857_14277__$1 = temp__4092__auto___14276;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11857_14277__$1))
{var c__7246__auto___14278 = cljs.core.chunk_first.call(null,seq__11857_14277__$1);{
var G__14279 = cljs.core.chunk_rest.call(null,seq__11857_14277__$1);
var G__14280 = c__7246__auto___14278;
var G__14281 = cljs.core.count.call(null,c__7246__auto___14278);
var G__14282 = 0;
seq__11857_14267 = G__14279;
chunk__11858_14268 = G__14280;
count__11859_14269 = G__14281;
i__11860_14270 = G__14282;
continue;
}
} else
{var arg__9967__auto___14283 = cljs.core.first.call(null,seq__11857_14277__$1);a__9966__auto__.push(arg__9967__auto___14283);
{
var G__14284 = cljs.core.next.call(null,seq__11857_14277__$1);
var G__14285 = null;
var G__14286 = 0;
var G__14287 = 0;
seq__11857_14267 = G__14284;
chunk__11858_14268 = G__14285;
count__11859_14269 = G__14286;
i__11860_14270 = G__14287;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.u.apply(null,a__9966__auto__);
};
var u = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return u__delegate.call(this,args__9965__auto__);};
u.cljs$lang$maxFixedArity = 0;
u.cljs$lang$applyTo = (function (arglist__14288){
var args__9965__auto__ = cljs.core.seq(arglist__14288);
return u__delegate(args__9965__auto__);
});
u.cljs$core$IFn$_invoke$arity$variadic = u__delegate;
return u;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.ul = (function() { 
var ul__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11865_14289 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11866_14290 = null;var count__11867_14291 = 0;var i__11868_14292 = 0;while(true){
if((i__11868_14292 < count__11867_14291))
{var arg__9967__auto___14293 = cljs.core._nth.call(null,chunk__11866_14290,i__11868_14292);a__9966__auto__.push(arg__9967__auto___14293);
{
var G__14294 = seq__11865_14289;
var G__14295 = chunk__11866_14290;
var G__14296 = count__11867_14291;
var G__14297 = (i__11868_14292 + 1);
seq__11865_14289 = G__14294;
chunk__11866_14290 = G__14295;
count__11867_14291 = G__14296;
i__11868_14292 = G__14297;
continue;
}
} else
{var temp__4092__auto___14298 = cljs.core.seq.call(null,seq__11865_14289);if(temp__4092__auto___14298)
{var seq__11865_14299__$1 = temp__4092__auto___14298;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11865_14299__$1))
{var c__7246__auto___14300 = cljs.core.chunk_first.call(null,seq__11865_14299__$1);{
var G__14301 = cljs.core.chunk_rest.call(null,seq__11865_14299__$1);
var G__14302 = c__7246__auto___14300;
var G__14303 = cljs.core.count.call(null,c__7246__auto___14300);
var G__14304 = 0;
seq__11865_14289 = G__14301;
chunk__11866_14290 = G__14302;
count__11867_14291 = G__14303;
i__11868_14292 = G__14304;
continue;
}
} else
{var arg__9967__auto___14305 = cljs.core.first.call(null,seq__11865_14299__$1);a__9966__auto__.push(arg__9967__auto___14305);
{
var G__14306 = cljs.core.next.call(null,seq__11865_14299__$1);
var G__14307 = null;
var G__14308 = 0;
var G__14309 = 0;
seq__11865_14289 = G__14306;
chunk__11866_14290 = G__14307;
count__11867_14291 = G__14308;
i__11868_14292 = G__14309;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.ul.apply(null,a__9966__auto__);
};
var ul = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return ul__delegate.call(this,args__9965__auto__);};
ul.cljs$lang$maxFixedArity = 0;
ul.cljs$lang$applyTo = (function (arglist__14310){
var args__9965__auto__ = cljs.core.seq(arglist__14310);
return ul__delegate(args__9965__auto__);
});
ul.cljs$core$IFn$_invoke$arity$variadic = ul__delegate;
return ul;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.var$ = (function() { 
var var$__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11873_14311 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11874_14312 = null;var count__11875_14313 = 0;var i__11876_14314 = 0;while(true){
if((i__11876_14314 < count__11875_14313))
{var arg__9967__auto___14315 = cljs.core._nth.call(null,chunk__11874_14312,i__11876_14314);a__9966__auto__.push(arg__9967__auto___14315);
{
var G__14316 = seq__11873_14311;
var G__14317 = chunk__11874_14312;
var G__14318 = count__11875_14313;
var G__14319 = (i__11876_14314 + 1);
seq__11873_14311 = G__14316;
chunk__11874_14312 = G__14317;
count__11875_14313 = G__14318;
i__11876_14314 = G__14319;
continue;
}
} else
{var temp__4092__auto___14320 = cljs.core.seq.call(null,seq__11873_14311);if(temp__4092__auto___14320)
{var seq__11873_14321__$1 = temp__4092__auto___14320;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11873_14321__$1))
{var c__7246__auto___14322 = cljs.core.chunk_first.call(null,seq__11873_14321__$1);{
var G__14323 = cljs.core.chunk_rest.call(null,seq__11873_14321__$1);
var G__14324 = c__7246__auto___14322;
var G__14325 = cljs.core.count.call(null,c__7246__auto___14322);
var G__14326 = 0;
seq__11873_14311 = G__14323;
chunk__11874_14312 = G__14324;
count__11875_14313 = G__14325;
i__11876_14314 = G__14326;
continue;
}
} else
{var arg__9967__auto___14327 = cljs.core.first.call(null,seq__11873_14321__$1);a__9966__auto__.push(arg__9967__auto___14327);
{
var G__14328 = cljs.core.next.call(null,seq__11873_14321__$1);
var G__14329 = null;
var G__14330 = 0;
var G__14331 = 0;
seq__11873_14311 = G__14328;
chunk__11874_14312 = G__14329;
count__11875_14313 = G__14330;
i__11876_14314 = G__14331;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.var$.apply(null,a__9966__auto__);
};
var var$ = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return var$__delegate.call(this,args__9965__auto__);};
var$.cljs$lang$maxFixedArity = 0;
var$.cljs$lang$applyTo = (function (arglist__14332){
var args__9965__auto__ = cljs.core.seq(arglist__14332);
return var$__delegate(args__9965__auto__);
});
var$.cljs$core$IFn$_invoke$arity$variadic = var$__delegate;
return var$;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.video = (function() { 
var video__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11881_14333 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11882_14334 = null;var count__11883_14335 = 0;var i__11884_14336 = 0;while(true){
if((i__11884_14336 < count__11883_14335))
{var arg__9967__auto___14337 = cljs.core._nth.call(null,chunk__11882_14334,i__11884_14336);a__9966__auto__.push(arg__9967__auto___14337);
{
var G__14338 = seq__11881_14333;
var G__14339 = chunk__11882_14334;
var G__14340 = count__11883_14335;
var G__14341 = (i__11884_14336 + 1);
seq__11881_14333 = G__14338;
chunk__11882_14334 = G__14339;
count__11883_14335 = G__14340;
i__11884_14336 = G__14341;
continue;
}
} else
{var temp__4092__auto___14342 = cljs.core.seq.call(null,seq__11881_14333);if(temp__4092__auto___14342)
{var seq__11881_14343__$1 = temp__4092__auto___14342;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11881_14343__$1))
{var c__7246__auto___14344 = cljs.core.chunk_first.call(null,seq__11881_14343__$1);{
var G__14345 = cljs.core.chunk_rest.call(null,seq__11881_14343__$1);
var G__14346 = c__7246__auto___14344;
var G__14347 = cljs.core.count.call(null,c__7246__auto___14344);
var G__14348 = 0;
seq__11881_14333 = G__14345;
chunk__11882_14334 = G__14346;
count__11883_14335 = G__14347;
i__11884_14336 = G__14348;
continue;
}
} else
{var arg__9967__auto___14349 = cljs.core.first.call(null,seq__11881_14343__$1);a__9966__auto__.push(arg__9967__auto___14349);
{
var G__14350 = cljs.core.next.call(null,seq__11881_14343__$1);
var G__14351 = null;
var G__14352 = 0;
var G__14353 = 0;
seq__11881_14333 = G__14350;
chunk__11882_14334 = G__14351;
count__11883_14335 = G__14352;
i__11884_14336 = G__14353;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.video.apply(null,a__9966__auto__);
};
var video = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return video__delegate.call(this,args__9965__auto__);};
video.cljs$lang$maxFixedArity = 0;
video.cljs$lang$applyTo = (function (arglist__14354){
var args__9965__auto__ = cljs.core.seq(arglist__14354);
return video__delegate(args__9965__auto__);
});
video.cljs$core$IFn$_invoke$arity$variadic = video__delegate;
return video;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.wbr = (function() { 
var wbr__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11889_14355 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11890_14356 = null;var count__11891_14357 = 0;var i__11892_14358 = 0;while(true){
if((i__11892_14358 < count__11891_14357))
{var arg__9967__auto___14359 = cljs.core._nth.call(null,chunk__11890_14356,i__11892_14358);a__9966__auto__.push(arg__9967__auto___14359);
{
var G__14360 = seq__11889_14355;
var G__14361 = chunk__11890_14356;
var G__14362 = count__11891_14357;
var G__14363 = (i__11892_14358 + 1);
seq__11889_14355 = G__14360;
chunk__11890_14356 = G__14361;
count__11891_14357 = G__14362;
i__11892_14358 = G__14363;
continue;
}
} else
{var temp__4092__auto___14364 = cljs.core.seq.call(null,seq__11889_14355);if(temp__4092__auto___14364)
{var seq__11889_14365__$1 = temp__4092__auto___14364;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11889_14365__$1))
{var c__7246__auto___14366 = cljs.core.chunk_first.call(null,seq__11889_14365__$1);{
var G__14367 = cljs.core.chunk_rest.call(null,seq__11889_14365__$1);
var G__14368 = c__7246__auto___14366;
var G__14369 = cljs.core.count.call(null,c__7246__auto___14366);
var G__14370 = 0;
seq__11889_14355 = G__14367;
chunk__11890_14356 = G__14368;
count__11891_14357 = G__14369;
i__11892_14358 = G__14370;
continue;
}
} else
{var arg__9967__auto___14371 = cljs.core.first.call(null,seq__11889_14365__$1);a__9966__auto__.push(arg__9967__auto___14371);
{
var G__14372 = cljs.core.next.call(null,seq__11889_14365__$1);
var G__14373 = null;
var G__14374 = 0;
var G__14375 = 0;
seq__11889_14355 = G__14372;
chunk__11890_14356 = G__14373;
count__11891_14357 = G__14374;
i__11892_14358 = G__14375;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.wbr.apply(null,a__9966__auto__);
};
var wbr = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return wbr__delegate.call(this,args__9965__auto__);};
wbr.cljs$lang$maxFixedArity = 0;
wbr.cljs$lang$applyTo = (function (arglist__14376){
var args__9965__auto__ = cljs.core.seq(arglist__14376);
return wbr__delegate(args__9965__auto__);
});
wbr.cljs$core$IFn$_invoke$arity$variadic = wbr__delegate;
return wbr;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.circle = (function() { 
var circle__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11897_14377 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11898_14378 = null;var count__11899_14379 = 0;var i__11900_14380 = 0;while(true){
if((i__11900_14380 < count__11899_14379))
{var arg__9967__auto___14381 = cljs.core._nth.call(null,chunk__11898_14378,i__11900_14380);a__9966__auto__.push(arg__9967__auto___14381);
{
var G__14382 = seq__11897_14377;
var G__14383 = chunk__11898_14378;
var G__14384 = count__11899_14379;
var G__14385 = (i__11900_14380 + 1);
seq__11897_14377 = G__14382;
chunk__11898_14378 = G__14383;
count__11899_14379 = G__14384;
i__11900_14380 = G__14385;
continue;
}
} else
{var temp__4092__auto___14386 = cljs.core.seq.call(null,seq__11897_14377);if(temp__4092__auto___14386)
{var seq__11897_14387__$1 = temp__4092__auto___14386;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11897_14387__$1))
{var c__7246__auto___14388 = cljs.core.chunk_first.call(null,seq__11897_14387__$1);{
var G__14389 = cljs.core.chunk_rest.call(null,seq__11897_14387__$1);
var G__14390 = c__7246__auto___14388;
var G__14391 = cljs.core.count.call(null,c__7246__auto___14388);
var G__14392 = 0;
seq__11897_14377 = G__14389;
chunk__11898_14378 = G__14390;
count__11899_14379 = G__14391;
i__11900_14380 = G__14392;
continue;
}
} else
{var arg__9967__auto___14393 = cljs.core.first.call(null,seq__11897_14387__$1);a__9966__auto__.push(arg__9967__auto___14393);
{
var G__14394 = cljs.core.next.call(null,seq__11897_14387__$1);
var G__14395 = null;
var G__14396 = 0;
var G__14397 = 0;
seq__11897_14377 = G__14394;
chunk__11898_14378 = G__14395;
count__11899_14379 = G__14396;
i__11900_14380 = G__14397;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.circle.apply(null,a__9966__auto__);
};
var circle = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return circle__delegate.call(this,args__9965__auto__);};
circle.cljs$lang$maxFixedArity = 0;
circle.cljs$lang$applyTo = (function (arglist__14398){
var args__9965__auto__ = cljs.core.seq(arglist__14398);
return circle__delegate(args__9965__auto__);
});
circle.cljs$core$IFn$_invoke$arity$variadic = circle__delegate;
return circle;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.g = (function() { 
var g__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11905_14399 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11906_14400 = null;var count__11907_14401 = 0;var i__11908_14402 = 0;while(true){
if((i__11908_14402 < count__11907_14401))
{var arg__9967__auto___14403 = cljs.core._nth.call(null,chunk__11906_14400,i__11908_14402);a__9966__auto__.push(arg__9967__auto___14403);
{
var G__14404 = seq__11905_14399;
var G__14405 = chunk__11906_14400;
var G__14406 = count__11907_14401;
var G__14407 = (i__11908_14402 + 1);
seq__11905_14399 = G__14404;
chunk__11906_14400 = G__14405;
count__11907_14401 = G__14406;
i__11908_14402 = G__14407;
continue;
}
} else
{var temp__4092__auto___14408 = cljs.core.seq.call(null,seq__11905_14399);if(temp__4092__auto___14408)
{var seq__11905_14409__$1 = temp__4092__auto___14408;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11905_14409__$1))
{var c__7246__auto___14410 = cljs.core.chunk_first.call(null,seq__11905_14409__$1);{
var G__14411 = cljs.core.chunk_rest.call(null,seq__11905_14409__$1);
var G__14412 = c__7246__auto___14410;
var G__14413 = cljs.core.count.call(null,c__7246__auto___14410);
var G__14414 = 0;
seq__11905_14399 = G__14411;
chunk__11906_14400 = G__14412;
count__11907_14401 = G__14413;
i__11908_14402 = G__14414;
continue;
}
} else
{var arg__9967__auto___14415 = cljs.core.first.call(null,seq__11905_14409__$1);a__9966__auto__.push(arg__9967__auto___14415);
{
var G__14416 = cljs.core.next.call(null,seq__11905_14409__$1);
var G__14417 = null;
var G__14418 = 0;
var G__14419 = 0;
seq__11905_14399 = G__14416;
chunk__11906_14400 = G__14417;
count__11907_14401 = G__14418;
i__11908_14402 = G__14419;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.g.apply(null,a__9966__auto__);
};
var g = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return g__delegate.call(this,args__9965__auto__);};
g.cljs$lang$maxFixedArity = 0;
g.cljs$lang$applyTo = (function (arglist__14420){
var args__9965__auto__ = cljs.core.seq(arglist__14420);
return g__delegate(args__9965__auto__);
});
g.cljs$core$IFn$_invoke$arity$variadic = g__delegate;
return g;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.line = (function() { 
var line__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11913_14421 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11914_14422 = null;var count__11915_14423 = 0;var i__11916_14424 = 0;while(true){
if((i__11916_14424 < count__11915_14423))
{var arg__9967__auto___14425 = cljs.core._nth.call(null,chunk__11914_14422,i__11916_14424);a__9966__auto__.push(arg__9967__auto___14425);
{
var G__14426 = seq__11913_14421;
var G__14427 = chunk__11914_14422;
var G__14428 = count__11915_14423;
var G__14429 = (i__11916_14424 + 1);
seq__11913_14421 = G__14426;
chunk__11914_14422 = G__14427;
count__11915_14423 = G__14428;
i__11916_14424 = G__14429;
continue;
}
} else
{var temp__4092__auto___14430 = cljs.core.seq.call(null,seq__11913_14421);if(temp__4092__auto___14430)
{var seq__11913_14431__$1 = temp__4092__auto___14430;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11913_14431__$1))
{var c__7246__auto___14432 = cljs.core.chunk_first.call(null,seq__11913_14431__$1);{
var G__14433 = cljs.core.chunk_rest.call(null,seq__11913_14431__$1);
var G__14434 = c__7246__auto___14432;
var G__14435 = cljs.core.count.call(null,c__7246__auto___14432);
var G__14436 = 0;
seq__11913_14421 = G__14433;
chunk__11914_14422 = G__14434;
count__11915_14423 = G__14435;
i__11916_14424 = G__14436;
continue;
}
} else
{var arg__9967__auto___14437 = cljs.core.first.call(null,seq__11913_14431__$1);a__9966__auto__.push(arg__9967__auto___14437);
{
var G__14438 = cljs.core.next.call(null,seq__11913_14431__$1);
var G__14439 = null;
var G__14440 = 0;
var G__14441 = 0;
seq__11913_14421 = G__14438;
chunk__11914_14422 = G__14439;
count__11915_14423 = G__14440;
i__11916_14424 = G__14441;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.line.apply(null,a__9966__auto__);
};
var line = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return line__delegate.call(this,args__9965__auto__);};
line.cljs$lang$maxFixedArity = 0;
line.cljs$lang$applyTo = (function (arglist__14442){
var args__9965__auto__ = cljs.core.seq(arglist__14442);
return line__delegate(args__9965__auto__);
});
line.cljs$core$IFn$_invoke$arity$variadic = line__delegate;
return line;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.path = (function() { 
var path__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11921_14443 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11922_14444 = null;var count__11923_14445 = 0;var i__11924_14446 = 0;while(true){
if((i__11924_14446 < count__11923_14445))
{var arg__9967__auto___14447 = cljs.core._nth.call(null,chunk__11922_14444,i__11924_14446);a__9966__auto__.push(arg__9967__auto___14447);
{
var G__14448 = seq__11921_14443;
var G__14449 = chunk__11922_14444;
var G__14450 = count__11923_14445;
var G__14451 = (i__11924_14446 + 1);
seq__11921_14443 = G__14448;
chunk__11922_14444 = G__14449;
count__11923_14445 = G__14450;
i__11924_14446 = G__14451;
continue;
}
} else
{var temp__4092__auto___14452 = cljs.core.seq.call(null,seq__11921_14443);if(temp__4092__auto___14452)
{var seq__11921_14453__$1 = temp__4092__auto___14452;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11921_14453__$1))
{var c__7246__auto___14454 = cljs.core.chunk_first.call(null,seq__11921_14453__$1);{
var G__14455 = cljs.core.chunk_rest.call(null,seq__11921_14453__$1);
var G__14456 = c__7246__auto___14454;
var G__14457 = cljs.core.count.call(null,c__7246__auto___14454);
var G__14458 = 0;
seq__11921_14443 = G__14455;
chunk__11922_14444 = G__14456;
count__11923_14445 = G__14457;
i__11924_14446 = G__14458;
continue;
}
} else
{var arg__9967__auto___14459 = cljs.core.first.call(null,seq__11921_14453__$1);a__9966__auto__.push(arg__9967__auto___14459);
{
var G__14460 = cljs.core.next.call(null,seq__11921_14453__$1);
var G__14461 = null;
var G__14462 = 0;
var G__14463 = 0;
seq__11921_14443 = G__14460;
chunk__11922_14444 = G__14461;
count__11923_14445 = G__14462;
i__11924_14446 = G__14463;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.path.apply(null,a__9966__auto__);
};
var path = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return path__delegate.call(this,args__9965__auto__);};
path.cljs$lang$maxFixedArity = 0;
path.cljs$lang$applyTo = (function (arglist__14464){
var args__9965__auto__ = cljs.core.seq(arglist__14464);
return path__delegate(args__9965__auto__);
});
path.cljs$core$IFn$_invoke$arity$variadic = path__delegate;
return path;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.polygon = (function() { 
var polygon__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11929_14465 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11930_14466 = null;var count__11931_14467 = 0;var i__11932_14468 = 0;while(true){
if((i__11932_14468 < count__11931_14467))
{var arg__9967__auto___14469 = cljs.core._nth.call(null,chunk__11930_14466,i__11932_14468);a__9966__auto__.push(arg__9967__auto___14469);
{
var G__14470 = seq__11929_14465;
var G__14471 = chunk__11930_14466;
var G__14472 = count__11931_14467;
var G__14473 = (i__11932_14468 + 1);
seq__11929_14465 = G__14470;
chunk__11930_14466 = G__14471;
count__11931_14467 = G__14472;
i__11932_14468 = G__14473;
continue;
}
} else
{var temp__4092__auto___14474 = cljs.core.seq.call(null,seq__11929_14465);if(temp__4092__auto___14474)
{var seq__11929_14475__$1 = temp__4092__auto___14474;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11929_14475__$1))
{var c__7246__auto___14476 = cljs.core.chunk_first.call(null,seq__11929_14475__$1);{
var G__14477 = cljs.core.chunk_rest.call(null,seq__11929_14475__$1);
var G__14478 = c__7246__auto___14476;
var G__14479 = cljs.core.count.call(null,c__7246__auto___14476);
var G__14480 = 0;
seq__11929_14465 = G__14477;
chunk__11930_14466 = G__14478;
count__11931_14467 = G__14479;
i__11932_14468 = G__14480;
continue;
}
} else
{var arg__9967__auto___14481 = cljs.core.first.call(null,seq__11929_14475__$1);a__9966__auto__.push(arg__9967__auto___14481);
{
var G__14482 = cljs.core.next.call(null,seq__11929_14475__$1);
var G__14483 = null;
var G__14484 = 0;
var G__14485 = 0;
seq__11929_14465 = G__14482;
chunk__11930_14466 = G__14483;
count__11931_14467 = G__14484;
i__11932_14468 = G__14485;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.polygon.apply(null,a__9966__auto__);
};
var polygon = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return polygon__delegate.call(this,args__9965__auto__);};
polygon.cljs$lang$maxFixedArity = 0;
polygon.cljs$lang$applyTo = (function (arglist__14486){
var args__9965__auto__ = cljs.core.seq(arglist__14486);
return polygon__delegate(args__9965__auto__);
});
polygon.cljs$core$IFn$_invoke$arity$variadic = polygon__delegate;
return polygon;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.polyline = (function() { 
var polyline__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11937_14487 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11938_14488 = null;var count__11939_14489 = 0;var i__11940_14490 = 0;while(true){
if((i__11940_14490 < count__11939_14489))
{var arg__9967__auto___14491 = cljs.core._nth.call(null,chunk__11938_14488,i__11940_14490);a__9966__auto__.push(arg__9967__auto___14491);
{
var G__14492 = seq__11937_14487;
var G__14493 = chunk__11938_14488;
var G__14494 = count__11939_14489;
var G__14495 = (i__11940_14490 + 1);
seq__11937_14487 = G__14492;
chunk__11938_14488 = G__14493;
count__11939_14489 = G__14494;
i__11940_14490 = G__14495;
continue;
}
} else
{var temp__4092__auto___14496 = cljs.core.seq.call(null,seq__11937_14487);if(temp__4092__auto___14496)
{var seq__11937_14497__$1 = temp__4092__auto___14496;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11937_14497__$1))
{var c__7246__auto___14498 = cljs.core.chunk_first.call(null,seq__11937_14497__$1);{
var G__14499 = cljs.core.chunk_rest.call(null,seq__11937_14497__$1);
var G__14500 = c__7246__auto___14498;
var G__14501 = cljs.core.count.call(null,c__7246__auto___14498);
var G__14502 = 0;
seq__11937_14487 = G__14499;
chunk__11938_14488 = G__14500;
count__11939_14489 = G__14501;
i__11940_14490 = G__14502;
continue;
}
} else
{var arg__9967__auto___14503 = cljs.core.first.call(null,seq__11937_14497__$1);a__9966__auto__.push(arg__9967__auto___14503);
{
var G__14504 = cljs.core.next.call(null,seq__11937_14497__$1);
var G__14505 = null;
var G__14506 = 0;
var G__14507 = 0;
seq__11937_14487 = G__14504;
chunk__11938_14488 = G__14505;
count__11939_14489 = G__14506;
i__11940_14490 = G__14507;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.polyline.apply(null,a__9966__auto__);
};
var polyline = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return polyline__delegate.call(this,args__9965__auto__);};
polyline.cljs$lang$maxFixedArity = 0;
polyline.cljs$lang$applyTo = (function (arglist__14508){
var args__9965__auto__ = cljs.core.seq(arglist__14508);
return polyline__delegate(args__9965__auto__);
});
polyline.cljs$core$IFn$_invoke$arity$variadic = polyline__delegate;
return polyline;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.rect = (function() { 
var rect__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11945_14509 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11946_14510 = null;var count__11947_14511 = 0;var i__11948_14512 = 0;while(true){
if((i__11948_14512 < count__11947_14511))
{var arg__9967__auto___14513 = cljs.core._nth.call(null,chunk__11946_14510,i__11948_14512);a__9966__auto__.push(arg__9967__auto___14513);
{
var G__14514 = seq__11945_14509;
var G__14515 = chunk__11946_14510;
var G__14516 = count__11947_14511;
var G__14517 = (i__11948_14512 + 1);
seq__11945_14509 = G__14514;
chunk__11946_14510 = G__14515;
count__11947_14511 = G__14516;
i__11948_14512 = G__14517;
continue;
}
} else
{var temp__4092__auto___14518 = cljs.core.seq.call(null,seq__11945_14509);if(temp__4092__auto___14518)
{var seq__11945_14519__$1 = temp__4092__auto___14518;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11945_14519__$1))
{var c__7246__auto___14520 = cljs.core.chunk_first.call(null,seq__11945_14519__$1);{
var G__14521 = cljs.core.chunk_rest.call(null,seq__11945_14519__$1);
var G__14522 = c__7246__auto___14520;
var G__14523 = cljs.core.count.call(null,c__7246__auto___14520);
var G__14524 = 0;
seq__11945_14509 = G__14521;
chunk__11946_14510 = G__14522;
count__11947_14511 = G__14523;
i__11948_14512 = G__14524;
continue;
}
} else
{var arg__9967__auto___14525 = cljs.core.first.call(null,seq__11945_14519__$1);a__9966__auto__.push(arg__9967__auto___14525);
{
var G__14526 = cljs.core.next.call(null,seq__11945_14519__$1);
var G__14527 = null;
var G__14528 = 0;
var G__14529 = 0;
seq__11945_14509 = G__14526;
chunk__11946_14510 = G__14527;
count__11947_14511 = G__14528;
i__11948_14512 = G__14529;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.rect.apply(null,a__9966__auto__);
};
var rect = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return rect__delegate.call(this,args__9965__auto__);};
rect.cljs$lang$maxFixedArity = 0;
rect.cljs$lang$applyTo = (function (arglist__14530){
var args__9965__auto__ = cljs.core.seq(arglist__14530);
return rect__delegate(args__9965__auto__);
});
rect.cljs$core$IFn$_invoke$arity$variadic = rect__delegate;
return rect;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.svg = (function() { 
var svg__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11953_14531 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11954_14532 = null;var count__11955_14533 = 0;var i__11956_14534 = 0;while(true){
if((i__11956_14534 < count__11955_14533))
{var arg__9967__auto___14535 = cljs.core._nth.call(null,chunk__11954_14532,i__11956_14534);a__9966__auto__.push(arg__9967__auto___14535);
{
var G__14536 = seq__11953_14531;
var G__14537 = chunk__11954_14532;
var G__14538 = count__11955_14533;
var G__14539 = (i__11956_14534 + 1);
seq__11953_14531 = G__14536;
chunk__11954_14532 = G__14537;
count__11955_14533 = G__14538;
i__11956_14534 = G__14539;
continue;
}
} else
{var temp__4092__auto___14540 = cljs.core.seq.call(null,seq__11953_14531);if(temp__4092__auto___14540)
{var seq__11953_14541__$1 = temp__4092__auto___14540;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11953_14541__$1))
{var c__7246__auto___14542 = cljs.core.chunk_first.call(null,seq__11953_14541__$1);{
var G__14543 = cljs.core.chunk_rest.call(null,seq__11953_14541__$1);
var G__14544 = c__7246__auto___14542;
var G__14545 = cljs.core.count.call(null,c__7246__auto___14542);
var G__14546 = 0;
seq__11953_14531 = G__14543;
chunk__11954_14532 = G__14544;
count__11955_14533 = G__14545;
i__11956_14534 = G__14546;
continue;
}
} else
{var arg__9967__auto___14547 = cljs.core.first.call(null,seq__11953_14541__$1);a__9966__auto__.push(arg__9967__auto___14547);
{
var G__14548 = cljs.core.next.call(null,seq__11953_14541__$1);
var G__14549 = null;
var G__14550 = 0;
var G__14551 = 0;
seq__11953_14531 = G__14548;
chunk__11954_14532 = G__14549;
count__11955_14533 = G__14550;
i__11956_14534 = G__14551;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.svg.apply(null,a__9966__auto__);
};
var svg = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return svg__delegate.call(this,args__9965__auto__);};
svg.cljs$lang$maxFixedArity = 0;
svg.cljs$lang$applyTo = (function (arglist__14552){
var args__9965__auto__ = cljs.core.seq(arglist__14552);
return svg__delegate(args__9965__auto__);
});
svg.cljs$core$IFn$_invoke$arity$variadic = svg__delegate;
return svg;
})()
;
/**
* @param {...*} var_args
*/
quiescent.dom.text = (function() { 
var text__delegate = function (args__9965__auto__){var a__9966__auto__ = [];a__9966__auto__.push(quiescent.js_props.call(null,cljs.core.first.call(null,args__9965__auto__)));
var seq__11265_14553 = cljs.core.seq.call(null,cljs.core.rest.call(null,args__9965__auto__));var chunk__11266_14554 = null;var count__11267_14555 = 0;var i__11268_14556 = 0;while(true){
if((i__11268_14556 < count__11267_14555))
{var arg__9967__auto___14557 = cljs.core._nth.call(null,chunk__11266_14554,i__11268_14556);a__9966__auto__.push(arg__9967__auto___14557);
{
var G__14558 = seq__11265_14553;
var G__14559 = chunk__11266_14554;
var G__14560 = count__11267_14555;
var G__14561 = (i__11268_14556 + 1);
seq__11265_14553 = G__14558;
chunk__11266_14554 = G__14559;
count__11267_14555 = G__14560;
i__11268_14556 = G__14561;
continue;
}
} else
{var temp__4092__auto___14562 = cljs.core.seq.call(null,seq__11265_14553);if(temp__4092__auto___14562)
{var seq__11265_14563__$1 = temp__4092__auto___14562;if(cljs.core.chunked_seq_QMARK_.call(null,seq__11265_14563__$1))
{var c__7246__auto___14564 = cljs.core.chunk_first.call(null,seq__11265_14563__$1);{
var G__14565 = cljs.core.chunk_rest.call(null,seq__11265_14563__$1);
var G__14566 = c__7246__auto___14564;
var G__14567 = cljs.core.count.call(null,c__7246__auto___14564);
var G__14568 = 0;
seq__11265_14553 = G__14565;
chunk__11266_14554 = G__14566;
count__11267_14555 = G__14567;
i__11268_14556 = G__14568;
continue;
}
} else
{var arg__9967__auto___14569 = cljs.core.first.call(null,seq__11265_14563__$1);a__9966__auto__.push(arg__9967__auto___14569);
{
var G__14570 = cljs.core.next.call(null,seq__11265_14563__$1);
var G__14571 = null;
var G__14572 = 0;
var G__14573 = 0;
seq__11265_14553 = G__14570;
chunk__11266_14554 = G__14571;
count__11267_14555 = G__14572;
i__11268_14556 = G__14573;
continue;
}
}
} else
{}
}
break;
}
return React.DOM.text.apply(null,a__9966__auto__);
};
var text = function (var_args){
var args__9965__auto__ = null;if (arguments.length > 0) {
  args__9965__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0),0);} 
return text__delegate.call(this,args__9965__auto__);};
text.cljs$lang$maxFixedArity = 0;
text.cljs$lang$applyTo = (function (arglist__14574){
var args__9965__auto__ = cljs.core.seq(arglist__14574);
return text__delegate(args__9965__auto__);
});
text.cljs$core$IFn$_invoke$arity$variadic = text__delegate;
return text;
})()
;
quiescent.dom.defined_tags = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,"colgroup","colgroup",4672673905),new cljs.core.Keyword(null,"path","path",1017337751),new cljs.core.Keyword(null,"menuitem","menuitem",4705729636),new cljs.core.Keyword(null,"optgroup","optgroup",933131038),new cljs.core.Keyword(null,"tbody","tbody",1124062088),new cljs.core.Keyword(null,"html","html",1017117469),new cljs.core.Keyword(null,"dfn","dfn",1014003614),new cljs.core.Keyword(null,"sub","sub",1014018482),new cljs.core.Keyword(null,"text","text",1017460895),new cljs.core.Keyword(null,"strong","strong",4416891401),new cljs.core.Keyword(null,"data","data",1016980252),new cljs.core.Keyword(null,"progress","progress",4307793311),new cljs.core.Keyword(null,"polyline","polyline",1575843122),new cljs.core.Keyword(null,"ul","ul",1013907977),new cljs.core.Keyword(null,"img","img",1014008629),new cljs.core.Keyword(null,"em","em",1013907482),new cljs.core.Keyword(null,"rt","rt",1013907892),new cljs.core.Keyword(null,"details","details",2571625908),new cljs.core.Keyword(null,"fieldset","fieldset",4379882650),new cljs.core.Keyword(null,"keygen","keygen",4174205955),new cljs.core.Keyword(null,"map","map",1014012110),new cljs.core.Keyword(null,"div","div",1014003715),new cljs.core.Keyword(null,"video","video",1126107117),new cljs.core.Keyword(null,"link","link",1017226092),new cljs.core.Keyword(null,"dt","dt",1013907458),new cljs.core.Keyword(null,"ol","ol",1013907791),new cljs.core.Keyword(null,"form","form",1017053238),new cljs.core.Keyword(null,"menu","menu",1017252049),new cljs.core.Keyword(null,"a","a",1013904339),new cljs.core.Keyword(null,"del","del",1014003581),new cljs.core.Keyword(null,"hr","hr",1013907580),new cljs.core.Keyword(null,"header","header",4087600639),new cljs.core.Keyword(null,"param","param",1120340991),new cljs.core.Keyword(null,"head","head",1017102674),new cljs.core.Keyword(null,"area","area",1016906751),new cljs.core.Keyword(null,"legend","legend",4202297215),new cljs.core.Keyword(null,"meter","meter",1117691643),new cljs.core.Keyword(null,"dl","dl",1013907450),new cljs.core.Keyword(null,"figcaption","figcaption",1313617108),new cljs.core.Keyword(null,"tfoot","tfoot",1124181588),new cljs.core.Keyword(null,"blockquote","blockquote",2317106561),new cljs.core.Keyword(null,"b","b",1013904340),new cljs.core.Keyword(null,"abbr","abbr",1016891299),new cljs.core.Keyword(null,"caption","caption",1566477656),new cljs.core.Keyword(null,"style","style",1123684643),new cljs.core.Keyword(null,"bdi","bdi",1014001625),new cljs.core.Keyword(null,"g","g",1013904345),new cljs.core.Keyword(null,"ruby","ruby",1017416012),new cljs.core.Keyword(null,"rp","rp",1013907888),new cljs.core.Keyword(null,"figure","figure",4034231894),new cljs.core.Keyword(null,"svg","svg",1014018518),new cljs.core.Keyword(null,"rect","rect",1017400662),new cljs.core.Keyword(null,"embed","embed",1110524491),new cljs.core.Keyword(null,"button","button",3931183780),new cljs.core.Keyword(null,"canvas","canvas",3941165258),new cljs.core.Keyword(null,"section","section",2984145495),new cljs.core.Keyword(null,"object","object",4285503153),new cljs.core.Keyword(null,"title","title",1124275658),new cljs.core.Keyword(null,"output","output",4303359091),new cljs.core.Keyword(null,"audio","audio",1107070792),new cljs.core.Keyword(null,"col","col",1014002930),new cljs.core.Keyword(null,"dd","dd",1013907442),new cljs.core.Keyword(null,"bdo","bdo",1014001631),new cljs.core.Keyword(null,"cite","cite",1016958153),new cljs.core.Keyword(null,"code","code",1016963423),new cljs.core.Keyword(null,"kbd","kbd",1014010207),new cljs.core.Keyword(null,"big","big",1014001778),new cljs.core.Keyword(null,"thead","thead",1124231110),new cljs.core.Keyword(null,"i","i",1013904347),new cljs.core.Keyword(null,"ins","ins",1014008672),new cljs.core.Keyword(null,"base","base",1016920643),new cljs.core.Keyword(null,"circle","circle",3948654658),new cljs.core.Keyword(null,"br","br",1013907394),new cljs.core.Keyword(null,"polygon","polygon",616384684),new cljs.core.Keyword(null,"wbr","wbr",1014021753),new cljs.core.Keyword(null,"textarea","textarea",4305627820),new cljs.core.Keyword(null,"small","small",1123453049),new cljs.core.Keyword(null,"main","main",1017248043),new cljs.core.Keyword(null,"meta","meta",1017252215),new cljs.core.Keyword(null,"aside","aside",1107015850),new cljs.core.Keyword(null,"article","article",4576493672),new cljs.core.Keyword(null,"noscript","noscript",2565455166),new cljs.core.Keyword(null,"h4","h4",1013907518),new cljs.core.Keyword(null,"h3","h3",1013907517),new cljs.core.Keyword(null,"script","script",4401185853),new cljs.core.Keyword(null,"track","track",1124525245),new cljs.core.Keyword(null,"time","time",1017464383),new cljs.core.Keyword(null,"h2","h2",1013907516),new cljs.core.Keyword(null,"mark","mark",1017248319),new cljs.core.Keyword(null,"h5","h5",1013907519),new cljs.core.Keyword(null,"span","span",1017440956),new cljs.core.Keyword(null,"input","input",1114262332),new cljs.core.Keyword(null,"sup","sup",1014018496),new cljs.core.Keyword(null,"h1","h1",1013907515),new cljs.core.Keyword(null,"table","table",1124020032),new cljs.core.Keyword(null,"th","th",1013907942),new cljs.core.Keyword(null,"label","label",1116631654),new cljs.core.Keyword(null,"h6","h6",1013907520),new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"pre","pre",1014015509),new cljs.core.Keyword(null,"nav","nav",1014013077),new cljs.core.Keyword(null,"address","address",4161179494),new cljs.core.Keyword(null,"u","u",1013904359),new cljs.core.Keyword(null,"body","body",1016933652),new cljs.core.Keyword(null,"option","option",4298734567),new cljs.core.Keyword(null,"datalist","datalist",2803674810),new cljs.core.Keyword(null,"q","q",1013904355),new cljs.core.Keyword(null,"samp","samp",1017426915),new cljs.core.Keyword(null,"source","source",4412365709),new cljs.core.Keyword(null,"summary","summary",3451231000),new cljs.core.Keyword(null,"footer","footer",4040009997),new cljs.core.Keyword(null,"select","select",4402849902),new cljs.core.Keyword(null,"var","var",1014020761),new cljs.core.Keyword(null,"td","td",1013907938),new cljs.core.Keyword(null,"li","li",1013907695),new cljs.core.Keyword(null,"p","p",1013904354),new cljs.core.Keyword(null,"tr","tr",1013907952),new cljs.core.Keyword(null,"s","s",1013904357),new cljs.core.Keyword(null,"iframe","iframe",4117657110)],[quiescent.dom.colgroup,quiescent.dom.path,quiescent.dom.menuitem,quiescent.dom.optgroup,quiescent.dom.tbody,quiescent.dom.html,quiescent.dom.dfn,quiescent.dom.sub,quiescent.dom.text,quiescent.dom.strong,quiescent.dom.data,quiescent.dom.progress,quiescent.dom.polyline,quiescent.dom.ul,quiescent.dom.img,quiescent.dom.em,quiescent.dom.rt,quiescent.dom.details,quiescent.dom.fieldset,quiescent.dom.keygen,quiescent.dom.map,quiescent.dom.div,quiescent.dom.video,quiescent.dom.link,quiescent.dom.dt,quiescent.dom.ol,quiescent.dom.form,quiescent.dom.menu,quiescent.dom.a,quiescent.dom.del,quiescent.dom.hr,quiescent.dom.header,quiescent.dom.param,quiescent.dom.head,quiescent.dom.area,quiescent.dom.legend,quiescent.dom.meter,quiescent.dom.dl,quiescent.dom.figcaption,quiescent.dom.tfoot,quiescent.dom.blockquote,quiescent.dom.b,quiescent.dom.abbr,quiescent.dom.caption,quiescent.dom.style,quiescent.dom.bdi,quiescent.dom.g,quiescent.dom.ruby,quiescent.dom.rp,quiescent.dom.figure,quiescent.dom.svg,quiescent.dom.rect,quiescent.dom.embed,quiescent.dom.button,quiescent.dom.canvas,quiescent.dom.section,quiescent.dom.object,quiescent.dom.title,quiescent.dom.output,quiescent.dom.audio,quiescent.dom.col,quiescent.dom.dd,quiescent.dom.bdo,quiescent.dom.cite,quiescent.dom.code,quiescent.dom.kbd,quiescent.dom.big,quiescent.dom.thead,quiescent.dom.i,quiescent.dom.ins,quiescent.dom.base,quiescent.dom.circle,quiescent.dom.br,quiescent.dom.polygon,quiescent.dom.wbr,quiescent.dom.textarea,quiescent.dom.small,quiescent.dom.main,quiescent.dom.meta,quiescent.dom.aside,quiescent.dom.article,quiescent.dom.noscript,quiescent.dom.h4,quiescent.dom.h3,quiescent.dom.script,quiescent.dom.track,quiescent.dom.time,quiescent.dom.h2,quiescent.dom.mark,quiescent.dom.h5,quiescent.dom.span,quiescent.dom.input,quiescent.dom.sup,quiescent.dom.h1,quiescent.dom.table,quiescent.dom.th,quiescent.dom.label,quiescent.dom.h6,quiescent.dom.line,quiescent.dom.pre,quiescent.dom.nav,quiescent.dom.address,quiescent.dom.u,quiescent.dom.body,quiescent.dom.option,quiescent.dom.datalist,quiescent.dom.q,quiescent.dom.samp,quiescent.dom.source,quiescent.dom.summary,quiescent.dom.footer,quiescent.dom.select,quiescent.dom.var$,quiescent.dom.td,quiescent.dom.li,quiescent.dom.p,quiescent.dom.tr,quiescent.dom.s,quiescent.dom.iframe]);
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.nsbrowser')) {
goog.provide('lt.plugins.cljrefactor.nsbrowser');
goog.require('cljs.core');
goog.require('lt.objs.sidebar.command');
goog.require('lt.objs.sidebar.command');
goog.require('lt.util.dom');
goog.require('quiescent');
goog.require('lt.objs.sidebar');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('quiescent.dom');
goog.require('lt.objs.notifos');
goog.require('lt.util.dom');
goog.require('lt.objs.sidebar');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('quiescent');
goog.require('quiescent.dom');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.nsbrowser.handle_keypress = (function handle_keypress(props,ev){var kk = ev.which;var G__10942 = kk;if(cljs.core._EQ_.call(null,27,G__10942))
{ev.preventDefault();
return new cljs.core.Keyword(null,"on-escape","on-escape",674318241).cljs$core$IFn$_invoke$arity$1(props).call(null);
} else
{if(cljs.core._EQ_.call(null,13,G__10942))
{ev.preventDefault();
return new cljs.core.Keyword(null,"on-select","on-select",1062468636).cljs$core$IFn$_invoke$arity$1(props).call(null);
} else
{if(cljs.core._EQ_.call(null,40,G__10942))
{ev.preventDefault();
return new cljs.core.Keyword(null,"on-down","on-down",3936419650).cljs$core$IFn$_invoke$arity$1(props).call(null);
} else
{if(cljs.core._EQ_.call(null,38,G__10942))
{ev.preventDefault();
return new cljs.core.Keyword(null,"on-up","on-up",1119739067).cljs$core$IFn$_invoke$arity$1(props).call(null);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return new cljs.core.Keyword(null,"default","default",2558708147);
} else
{return null;
}
}
}
}
}
});
lt.plugins.cljrefactor.nsbrowser.selected_idx = (function selected_idx(items){return cljs.core.first.call(null,cljs.core.keep_indexed.call(null,(function (p1__10944_SHARP_,p2__10943_SHARP_){if(cljs.core.truth_(new cljs.core.Keyword(null,"selected","selected",2205476365).cljs$core$IFn$_invoke$arity$1(p2__10943_SHARP_)))
{return p1__10944_SHARP_;
} else
{return null;
}
}),items));
});
lt.plugins.cljrefactor.nsbrowser.move_down = (function move_down(items){var currIdx = lt.plugins.cljrefactor.nsbrowser.selected_idx.call(null,items);if(!((currIdx < (cljs.core.count.call(null,items) - 1))))
{return items;
} else
{return cljs.core.assoc_in.call(null,cljs.core.assoc_in.call(null,items,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [currIdx,new cljs.core.Keyword(null,"selected","selected",2205476365)], null),false),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(currIdx + 1),new cljs.core.Keyword(null,"selected","selected",2205476365)], null),true);
}
});
lt.plugins.cljrefactor.nsbrowser.move_up = (function move_up(items){var currIdx = lt.plugins.cljrefactor.nsbrowser.selected_idx.call(null,items);if(!((currIdx > 0)))
{return items;
} else
{return cljs.core.assoc_in.call(null,cljs.core.assoc_in.call(null,items,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [currIdx,new cljs.core.Keyword(null,"selected","selected",2205476365)], null),false),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(currIdx - 1),new cljs.core.Keyword(null,"selected","selected",2205476365)], null),true);
}
});
lt.plugins.cljrefactor.nsbrowser.ns_abbr = (function ns_abbr(ns_str){return clojure.string.join.call(null,"",cljs.core.map.call(null,cljs.core.first,clojure.string.split.call(null,ns_str,/\./)));
});
lt.plugins.cljrefactor.nsbrowser.filter_items = (function filter_items(search_for,items){if(cljs.core.empty_QMARK_.call(null,search_for))
{return items;
} else
{return cljs.core.filter.call(null,(function (p__10947){var map__10948 = p__10947;var map__10948__$1 = ((cljs.core.seq_QMARK_.call(null,map__10948))?cljs.core.apply.call(null,cljs.core.hash_map,map__10948):map__10948);var name = cljs.core.get.call(null,map__10948__$1,new cljs.core.Keyword(null,"name","name",1017277949));return ((name.indexOf(search_for) > -1)) || (cljs.core._EQ_.call(null,lt.plugins.cljrefactor.nsbrowser.ns_abbr.call(null,name).indexOf(search_for),0));
}),items);
}
});
lt.plugins.cljrefactor.nsbrowser.maybe_select_first = (function maybe_select_first(items){if(cljs.core.not.call(null,cljs.core.seq.call(null,items)))
{return items;
} else
{return cljs.core.assoc_in.call(null,cljs.core.vec.call(null,items),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0,new cljs.core.Keyword(null,"selected","selected",2205476365)], null),true);
}
});
/**
* 
*/
lt.plugins.cljrefactor.nsbrowser.SearchInput = quiescent.component.call(null,(function (props){return quiescent.dom.input.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"placeholder","placeholder",1612151013),"search",new cljs.core.Keyword(null,"value","value",1125876963),new cljs.core.Keyword(null,"search-for","search-for",4597237398).cljs$core$IFn$_invoke$arity$1(props),new cljs.core.Keyword(null,"onKeyDown","onKeyDown",1534256180),cljs.core.partial.call(null,lt.plugins.cljrefactor.nsbrowser.handle_keypress,props),new cljs.core.Keyword(null,"onChange","onChange",2050678241),(function (p1__10949_SHARP_){return new cljs.core.Keyword(null,"on-change","on-change",606853840).cljs$core$IFn$_invoke$arity$1(props).call(null,(p1__10949_SHARP_["target"]["value"]));
}),new cljs.core.Keyword(null,"autoFocus","autoFocus",2651959259),new cljs.core.Keyword(null,"focus","focus",1111509066).cljs$core$IFn$_invoke$arity$1(props)], null));
}));
/**
* 
*/
lt.plugins.cljrefactor.nsbrowser.ResultItem = quiescent.component.call(null,(function (item){return quiescent.dom.li.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"className","className",1004015509),(cljs.core.truth_(new cljs.core.Keyword(null,"selected","selected",2205476365).cljs$core$IFn$_invoke$arity$1(item))?"selected":null)], null),new cljs.core.Keyword(null,"name","name",1017277949).cljs$core$IFn$_invoke$arity$1(item));
}));
/**
* 
*/
lt.plugins.cljrefactor.nsbrowser.ResultList = quiescent.component.call(null,(function (props){return cljs.core.apply.call(null,quiescent.dom.ul,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"className","className",1004015509),(cljs.core.truth_(new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(props))?" nsselection":null)], null),cljs.core.map.call(null,lt.plugins.cljrefactor.nsbrowser.ResultItem,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(props)));
}));
/**
* 
*/
lt.plugins.cljrefactor.nsbrowser.Searcher = quiescent.component.call(null,(function (props){return quiescent.dom.div.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"className","className",1004015509),"filter-list"], null),lt.plugins.cljrefactor.nsbrowser.SearchInput.call(null,props),(function (){var temp__4092__auto__ = new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(props);if(cljs.core.truth_(temp__4092__auto__))
{var sel_ns = temp__4092__auto__;return quiescent.dom.div.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"className","className",1004015509),"nstitle"], null),sel_ns);
} else
{return null;
}
})(),lt.plugins.cljrefactor.nsbrowser.ResultList.call(null,cljs.core.select_keys.call(null,props,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"items","items",1114430258),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865)], null))));
}));
lt.plugins.cljrefactor.nsbrowser.wrapper = (function wrapper(this$){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.jalla","div.jalla",2032626207),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div","div",1014003715),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"id","id",1013907597),"nsbrowser-wrapper"], null),"Retrieving namespaces..."], null)], null));var seq__10956_10979 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__10957_10980 = null;var count__10958_10981 = 0;var i__10959_10982 = 0;while(true){
if((i__10959_10982 < count__10958_10981))
{var vec__10960_10983 = cljs.core._nth.call(null,chunk__10957_10980,i__10959_10982);var ev__7926__auto___10984 = cljs.core.nth.call(null,vec__10960_10983,0,null);var func__7927__auto___10985 = cljs.core.nth.call(null,vec__10960_10983,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___10984,func__7927__auto___10985);
{
var G__10986 = seq__10956_10979;
var G__10987 = chunk__10957_10980;
var G__10988 = count__10958_10981;
var G__10989 = (i__10959_10982 + 1);
seq__10956_10979 = G__10986;
chunk__10957_10980 = G__10987;
count__10958_10981 = G__10988;
i__10959_10982 = G__10989;
continue;
}
} else
{var temp__4092__auto___10990 = cljs.core.seq.call(null,seq__10956_10979);if(temp__4092__auto___10990)
{var seq__10956_10991__$1 = temp__4092__auto___10990;if(cljs.core.chunked_seq_QMARK_.call(null,seq__10956_10991__$1))
{var c__7246__auto___10992 = cljs.core.chunk_first.call(null,seq__10956_10991__$1);{
var G__10993 = cljs.core.chunk_rest.call(null,seq__10956_10991__$1);
var G__10994 = c__7246__auto___10992;
var G__10995 = cljs.core.count.call(null,c__7246__auto___10992);
var G__10996 = 0;
seq__10956_10979 = G__10993;
chunk__10957_10980 = G__10994;
count__10958_10981 = G__10995;
i__10959_10982 = G__10996;
continue;
}
} else
{var vec__10961_10997 = cljs.core.first.call(null,seq__10956_10991__$1);var ev__7926__auto___10998 = cljs.core.nth.call(null,vec__10961_10997,0,null);var func__7927__auto___10999 = cljs.core.nth.call(null,vec__10961_10997,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___10998,func__7927__auto___10999);
{
var G__11000 = cljs.core.next.call(null,seq__10956_10991__$1);
var G__11001 = null;
var G__11002 = 0;
var G__11003 = 0;
seq__10956_10979 = G__11000;
chunk__10957_10980 = G__11001;
count__10958_10981 = G__11002;
i__10959_10982 = G__11003;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.nsbrowser.__BEH__move_up_BANG_ = (function __BEH__move_up_BANG_(this$){var moved = lt.plugins.cljrefactor.nsbrowser.move_up.call(null,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),moved], null));
lt.plugins.cljrefactor.nsbrowser.render.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"items","items",1114430258),moved,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),new cljs.core.Keyword(null,"search-for","search-for",4597237398),new cljs.core.Keyword(null,"search-for","search-for",4597237398).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))], null));
return lt.objs.sidebar.command.ensure_visible.call(null,this$);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","move-up!","lt.plugins.cljrefactor.nsbrowser/move-up!",4342145385),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__move_up_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move-up!","move-up!",908335196),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__move_down_BANG_ = (function __BEH__move_down_BANG_(this$){var moved = lt.plugins.cljrefactor.nsbrowser.move_down.call(null,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),moved], null));
lt.plugins.cljrefactor.nsbrowser.render.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"items","items",1114430258),moved,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),new cljs.core.Keyword(null,"search-for","search-for",4597237398),new cljs.core.Keyword(null,"search-for","search-for",4597237398).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))], null));
return lt.objs.sidebar.command.ensure_visible.call(null,this$);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","move-down!","lt.plugins.cljrefactor.nsbrowser/move-down!",2074813250),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__move_down_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"move-down!","move-down!",2625622581),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__select_BANG_ = (function __BEH__select_BANG_(this$){var temp__4092__auto__ = lt.plugins.cljrefactor.nsbrowser.selected_idx.call(null,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));if(cljs.core.truth_(temp__4092__auto__))
{var sel_idx = temp__4092__auto__;var temp__4092__auto____$1 = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto____$1))
{var ed = temp__4092__auto____$1;var item_name = new cljs.core.Keyword(null,"name","name",1017277949).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),sel_idx));if(cljs.core.not.call(null,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"search-for","search-for",4597237398),"",new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),item_name], null));
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"list-ns-vars","list-ns-vars",1033834103),item_name);
} else
{var sym = [cljs.core.str(new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))),cljs.core.str("/"),cljs.core.str(item_name)].join('');lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.jump-to-definition!","editor.jump-to-definition!",3261820364),sym);
return lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"clear!","clear!",3951036134));
}
} else
{return null;
}
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","select!","lt.plugins.cljrefactor.nsbrowser/select!",2239870884),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__select_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"select!","select!",2992004631),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__search_BANG_ = (function __BEH__search_BANG_(this$,search_for){var items = (cljs.core.truth_(new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)))?new cljs.core.Keyword(null,"vars","vars",1017516446).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)):new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));var filtered = cljs.core.vec.call(null,lt.plugins.cljrefactor.nsbrowser.maybe_select_first.call(null,lt.plugins.cljrefactor.nsbrowser.filter_items.call(null,search_for,items)));lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),filtered,new cljs.core.Keyword(null,"search-for","search-for",4597237398),search_for], null));
return lt.plugins.cljrefactor.nsbrowser.render.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"items","items",1114430258),filtered,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),new cljs.core.Keyword(null,"search-for","search-for",4597237398),search_for], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","search!","lt.plugins.cljrefactor.nsbrowser/search!",2255278720),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__search_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"search!","search!",2982232811),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__update_ns_list_BANG_ = (function __BEH__update_ns_list_BANG_(this$,ns_items){var filtered_items = lt.plugins.cljrefactor.nsbrowser.maybe_select_first.call(null,ns_items);lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"items","items",1114430258),ns_items,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),filtered_items,new cljs.core.Keyword(null,"search-for","search-for",4597237398),null,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),null], null));
return lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"focus!","focus!",4039653819));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","update-ns-list!","lt.plugins.cljrefactor.nsbrowser/update-ns-list!",2737155142),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__update_ns_list_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"update-ns-list!","update-ns-list!",3589958961),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__focus_BANG_ = (function __BEH__focus_BANG_(this$){lt.plugins.cljrefactor.nsbrowser.render.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"items","items",1114430258),new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),new cljs.core.Keyword(null,"search-for","search-for",4597237398),new cljs.core.Keyword(null,"search-for","search-for",4597237398).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)),new cljs.core.Keyword(null,"focus","focus",1111509066),true], null));
var input = lt.util.dom.$.call(null,"#nsbrowser-wrapper input");return input.focus();
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","focus!","lt.plugins.cljrefactor.nsbrowser/focus!",3346250448),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__focus_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"focus!","focus!",4039653819),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__clear_BANG_ = (function __BEH__clear_BANG_(this$){lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),null,new cljs.core.Keyword(null,"items","items",1114430258),null,new cljs.core.Keyword(null,"vars","vars",1017516446),null,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),null,new cljs.core.Keyword(null,"search-for","search-for",4597237398),null], null));
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"close-sidebar","close-sidebar",1108494329));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","clear!","lt.plugins.cljrefactor.nsbrowser/clear!",3433762291),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__clear_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"clear!","clear!",3951036134),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__escape_BANG_ = (function __BEH__escape_BANG_(this$){if(cljs.core.not.call(null,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{return lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"clear!","clear!",3951036134));
} else
{var filtered = lt.plugins.cljrefactor.nsbrowser.maybe_select_first.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),null,new cljs.core.Keyword(null,"search-for","search-for",4597237398),null,new cljs.core.Keyword(null,"vars","vars",1017516446),null,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),filtered], null));
return lt.plugins.cljrefactor.nsbrowser.render.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"items","items",1114430258),filtered], null));
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","escape!","lt.plugins.cljrefactor.nsbrowser/escape!",3016593991),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__escape_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"escape!","escape!",3844244274),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__set_nsbrowser_filters = (function __BEH__set_nsbrowser_filters(this$,exclusions){return lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"exclusions","exclusions",1759440855),exclusions], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","set-nsbrowser-filters","lt.plugins.cljrefactor.nsbrowser/set-nsbrowser-filters",545391565),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__set_nsbrowser_filters,new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure Refactor: Configure filter for nsbrowser",new cljs.core.Keyword(null,"params","params",4313443576),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"label","label",1116631654),"exclusions",new cljs.core.Keyword(null,"type","type",1017479852),new cljs.core.Keyword(null,"list","list",1017226256)], null)], null),new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"object.instant","object.instant",773332388),null], null), null),new cljs.core.Keyword(null,"type","type",1017479852),new cljs.core.Keyword(null,"user","user",1017503549),new cljs.core.Keyword(null,"exclusive","exclusive",2700522000),true);
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","nsbrowser","lt.plugins.cljrefactor.nsbrowser/nsbrowser",1948778562),new cljs.core.Keyword(null,"tags","tags",1017456523),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"clojure.nsbrowser","clojure.nsbrowser",2392486571),null], null), null),new cljs.core.Keyword(null,"label","label",1116631654),"Clojure ns browser",new cljs.core.Keyword(null,"order","order",1119910592),2,new cljs.core.Keyword(null,"init","init",1017141378),(function (this$){return lt.plugins.cljrefactor.nsbrowser.wrapper.call(null,this$);
}));
lt.plugins.cljrefactor.nsbrowser.ns_bar = lt.object.create.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","nsbrowser","lt.plugins.cljrefactor.nsbrowser/nsbrowser",1948778562));
lt.objs.sidebar.add_item.call(null,lt.objs.sidebar.rightbar,lt.plugins.cljrefactor.nsbrowser.ns_bar);
lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns_vars = (function __BEH__list_ns_vars(ed,z_ns){return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"ns-vars",new cljs.core.Keyword(null,"ns","ns",1013907767),z_ns], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.list-ns-vars-res","refactor.list-ns-vars-res",2111679606),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","list-ns-vars","lt.plugins.cljrefactor.nsbrowser/list-ns-vars",4736083460),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns_vars,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"list-ns-vars","list-ns-vars",1033834103),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns_vars_res = (function __BEH__list_ns_vars_res(ed,res){var vec__10964 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ns-vars","ns-vars",3192584358),new cljs.core.Keyword(null,"results","results",2111450984)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__10964,0,null);var ret = cljs.core.nth.call(null,vec__10964,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{var items_11004 = lt.plugins.cljrefactor.nsbrowser.maybe_select_first.call(null,cljs.core.map.call(null,((function (vec__10964,ok_QMARK_,ret){
return (function (p1__10962_SHARP_){return cljs.core.PersistentHashMap.fromArrays.call(null,[new cljs.core.Keyword(null,"name","name",1017277949)],[p1__10962_SHARP_]);
});})(vec__10964,ok_QMARK_,ret))
,new cljs.core.Keyword(null,"ns-vars","ns-vars",3192584358).cljs$core$IFn$_invoke$arity$1(ret)));lt.object.merge_BANG_.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"vars","vars",1017516446),items_11004,new cljs.core.Keyword(null,"filtered-items","filtered-items",622763004),items_11004], null));
lt.plugins.cljrefactor.nsbrowser.render.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"items","items",1114430258),items_11004,new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865),new cljs.core.Keyword(null,"selected-ns","selected-ns",1234365865).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar)),new cljs.core.Keyword(null,"focus","focus",1111509066),true], null));
}
return lt.objs.notifos.done_working.call(null);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","list-ns-vars-res","lt.plugins.cljrefactor.nsbrowser/list-ns-vars-res",1973536863),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns_vars_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.list-ns-vars-res","editor.eval.clj.result.refactor.list-ns-vars-res",3804778467),null], null), null));
lt.plugins.cljrefactor.nsbrowser.maybe_exclude = (function maybe_exclude(exclusions,items){var temp__4090__auto__ = cljs.core.map.call(null,cljs.core.re_pattern,exclusions);if(cljs.core.truth_(temp__4090__auto__))
{var ps = temp__4090__auto__;return cljs.core.filter.call(null,((function (ps,temp__4090__auto__){
return (function (item){return cljs.core.not.call(null,cljs.core.seq.call(null,cljs.core.remove.call(null,cljs.core.nil_QMARK_,cljs.core.map.call(null,((function (ps,temp__4090__auto__){
return (function (p1__10965_SHARP_){return cljs.core.re_find.call(null,p1__10965_SHARP_,item);
});})(ps,temp__4090__auto__))
,ps))));
});})(ps,temp__4090__auto__))
,items);
} else
{return items;
}
});
lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns_res = (function __BEH__list_ns_res(ed,res){var vec__10968 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ns-list","ns-list",3192294168),new cljs.core.Keyword(null,"results","results",2111450984)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__10968,0,null);var ret = cljs.core.nth.call(null,vec__10968,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{lt.object.raise.call(null,lt.objs.sidebar.rightbar,new cljs.core.Keyword(null,"toggle","toggle",4440567494),lt.plugins.cljrefactor.nsbrowser.ns_bar);
return lt.object.raise.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.Keyword(null,"update-ns-list!","update-ns-list!",3589958961),cljs.core.map.call(null,((function (vec__10968,ok_QMARK_,ret){
return (function (p1__10966_SHARP_){return cljs.core.PersistentHashMap.fromArrays.call(null,[new cljs.core.Keyword(null,"name","name",1017277949)],[p1__10966_SHARP_]);
});})(vec__10968,ok_QMARK_,ret))
,lt.plugins.cljrefactor.nsbrowser.maybe_exclude.call(null,new cljs.core.Keyword(null,"exclusions","exclusions",1759440855).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar)),new cljs.core.Keyword(null,"ns-list","ns-list",3192294168).cljs$core$IFn$_invoke$arity$1(ret))));
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","list-ns-res","lt.plugins.cljrefactor.nsbrowser/list-ns-res",3717450158),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.list-ns-res","editor.eval.clj.result.refactor.list-ns-res",918656480),null], null), null));
lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns = (function __BEH__list_ns(ed){return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"op","op",1013907795),"ns-list"], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.list-ns-res","refactor.list-ns-res",2708695405),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.nsbrowser","list-ns","lt.plugins.cljrefactor.nsbrowser/list-ns",4596059091),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.nsbrowser.__BEH__list_ns,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"list-ns","list-ns",1195822278),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword(null,"show-nsbrowser","show-nsbrowser",2115493477),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Show ns-browser",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"list-ns","list-ns",1195822278));
} else
{return null;
}
})], null));
lt.plugins.cljrefactor.nsbrowser.render = (function render(props){return quiescent.render.call(null,lt.plugins.cljrefactor.nsbrowser.Searcher.call(null,cljs.core.merge.call(null,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"on-down","on-down",3936419650),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.Keyword(null,"move-down!","move-down!",2625622581));
}),new cljs.core.Keyword(null,"on-up","on-up",1119739067),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.Keyword(null,"move-up!","move-up!",908335196));
}),new cljs.core.Keyword(null,"on-select","on-select",1062468636),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.Keyword(null,"select!","select!",2992004631));
}),new cljs.core.Keyword(null,"on-escape","on-escape",674318241),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.Keyword(null,"escape!","escape!",3844244274));
}),new cljs.core.Keyword(null,"on-change","on-change",606853840),(function (search_for){return lt.object.raise.call(null,lt.plugins.cljrefactor.nsbrowser.ns_bar,new cljs.core.Keyword(null,"search!","search!",2982232811),search_for);
})], null),props)),document.getElementById("nsbrowser-wrapper"));
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.pprint')) {
goog.provide('lt.plugins.cljrefactor.pprint');
goog.require('cljs.core');
goog.require('clojure.string');
goog.require('clojure.string');
lt.plugins.cljrefactor.pprint.libspec_QMARK_ = (function libspec_QMARK_(thing){return (cljs.core.vector_QMARK_.call(null,thing)) || ((thing instanceof cljs.core.Symbol));
});
/**
* True if the vector is of the form [prefix libspec1 libspec2...]
*/
lt.plugins.cljrefactor.pprint.prefix_form_QMARK_ = (function prefix_form_QMARK_(v){return (cljs.core.vector_QMARK_.call(null,v)) && ((cljs.core.first.call(null,v) instanceof cljs.core.Symbol)) && (cljs.core.every_QMARK_.call(null,lt.plugins.cljrefactor.pprint.libspec_QMARK_,cljs.core.rest.call(null,v)));
});
lt.plugins.cljrefactor.pprint.trim_newline = (function trim_newline(line){return clojure.string.replace.call(null,line,/(\r\n|\n|\r)$/,"");
});
lt.plugins.cljrefactor.pprint.pprint = (function pprint(obj){return cljs.core.print.call(null,obj);
});
lt.plugins.cljrefactor.pprint.libspec_vectors_last = (function libspec_vectors_last(libspecs){return cljs.core.vec.call(null,cljs.core.concat.call(null,cljs.core.remove.call(null,cljs.core.sequential_QMARK_,libspecs),cljs.core.filter.call(null,cljs.core.sequential_QMARK_,libspecs)));
});
lt.plugins.cljrefactor.pprint.pprint_prefix_form = (function pprint_prefix_form(p__14628){var vec__14630 = p__14628;var name = cljs.core.nth.call(null,vec__14630,0,null);var libspecs = cljs.core.nthnext.call(null,vec__14630,1);cljs.core.print.call(null,[cljs.core.str("["),cljs.core.str(name)].join(''));
var ordered_libspecs = lt.plugins.cljrefactor.pprint.libspec_vectors_last.call(null,libspecs);return cljs.core.dorun.call(null,cljs.core.map_indexed.call(null,((function (ordered_libspecs,vec__14630,name,libspecs){
return (function (idx,libspec){if((cljs.core.vector_QMARK_.call(null,libspec)) && (((idx === 0)) || ((cljs.core.get.call(null,ordered_libspecs,(idx - 1)) instanceof cljs.core.Symbol))))
{cljs.core.println.call(null);
} else
{}
if(cljs.core._EQ_.call(null,idx,(cljs.core.count.call(null,ordered_libspecs) - 1)))
{return cljs.core.println.call(null,[cljs.core.str(libspec),cljs.core.str("]")].join(''));
} else
{if(cljs.core.vector_QMARK_.call(null,libspec))
{return lt.plugins.cljrefactor.pprint.pprint.call(null,[cljs.core.str(libspec),cljs.core.str("\n")].join(''));
} else
{if((idx === 0))
{return cljs.core.print.call(null,[cljs.core.str(" "),cljs.core.str(libspec),cljs.core.str(" ")].join(''));
} else
{if(cljs.core.vector_QMARK_.call(null,cljs.core.get.call(null,ordered_libspecs,(idx + 1))))
{return cljs.core.print.call(null,libspec);
} else
{return cljs.core.print.call(null,[cljs.core.str(libspec),cljs.core.str(" ")].join(''));
}
}
}
}
});})(ordered_libspecs,vec__14630,name,libspecs))
,ordered_libspecs));
});
lt.plugins.cljrefactor.pprint.pprint_require_form = (function pprint_require_form(p__14631){var vec__14634 = p__14631;var _ = cljs.core.nth.call(null,vec__14634,0,null);var libspecs = cljs.core.nthnext.call(null,vec__14634,1);cljs.core.print.call(null,"(:require ");
return cljs.core.dorun.call(null,cljs.core.map_indexed.call(null,((function (vec__14634,_,libspecs){
return (function (idx,libspec){if(cljs.core._EQ_.call(null,idx,(cljs.core.count.call(null,libspecs) - 1)))
{return cljs.core.println.call(null,[cljs.core.str(lt.plugins.cljrefactor.pprint.trim_newline.call(null,(function (){var sb__7417__auto__ = (new goog.string.StringBuffer());var _STAR_print_fn_STAR_14635_14653 = cljs.core._STAR_print_fn_STAR_;try{cljs.core._STAR_print_fn_STAR_ = ((function (_STAR_print_fn_STAR_14635_14653,sb__7417__auto__,vec__14634,_,libspecs){
return (function (x__7418__auto__){return sb__7417__auto__.append(x__7418__auto__);
});})(_STAR_print_fn_STAR_14635_14653,sb__7417__auto__,vec__14634,_,libspecs))
;
if(lt.plugins.cljrefactor.pprint.prefix_form_QMARK_.call(null,libspec))
{lt.plugins.cljrefactor.pprint.pprint_prefix_form.call(null,libspec);
} else
{cljs.core.print.call(null,libspec);
}
}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_14635_14653;
}return [cljs.core.str(sb__7417__auto__)].join('');
})())),cljs.core.str(")")].join(''));
} else
{if(lt.plugins.cljrefactor.pprint.prefix_form_QMARK_.call(null,libspec))
{return lt.plugins.cljrefactor.pprint.pprint_prefix_form.call(null,libspec);
} else
{return cljs.core.println.call(null,libspec);
}
}
});})(vec__14634,_,libspecs))
,libspecs));
});
lt.plugins.cljrefactor.pprint.form_is_QMARK_ = (function form_is_QMARK_(form,type){return (cljs.core.sequential_QMARK_.call(null,form)) && (cljs.core._EQ_.call(null,cljs.core.keyword.call(null,cljs.core.first.call(null,form)),type));
});
lt.plugins.cljrefactor.pprint.pprint_gen_class_form = (function pprint_gen_class_form(p__14636){var vec__14640 = p__14636;var _ = cljs.core.nth.call(null,vec__14640,0,null);var elems = cljs.core.nthnext.call(null,vec__14640,1);if(cljs.core.empty_QMARK_.call(null,elems))
{cljs.core.println.call(null,"(:gen-class)");
} else
{cljs.core.println.call(null,"(:gen-class");
}
return cljs.core.dorun.call(null,cljs.core.map_indexed.call(null,((function (vec__14640,_,elems){
return (function (idx,p__14641){var vec__14642 = p__14641;var key = cljs.core.nth.call(null,vec__14642,0,null);var val = cljs.core.nth.call(null,vec__14642,1,null);if(cljs.core._EQ_.call(null,idx,(cljs.core.count.call(null,cljs.core.partition.call(null,2,elems)) - 1)))
{return cljs.core.println.call(null,[cljs.core.str(key),cljs.core.str(val),cljs.core.str(")")].join(''));
} else
{return cljs.core.println.call(null,key,val);
}
});})(vec__14640,_,elems))
,cljs.core.partition.call(null,2,elems)));
});
lt.plugins.cljrefactor.pprint.pprint_import_form = (function pprint_import_form(p__14643){var vec__14645 = p__14643;var _ = cljs.core.nth.call(null,vec__14645,0,null);var imports = cljs.core.nthnext.call(null,vec__14645,1);cljs.core.print.call(null,"(:import ");
return cljs.core.dorun.call(null,cljs.core.map_indexed.call(null,((function (vec__14645,_,imports){
return (function (idx,import$){if(cljs.core._EQ_.call(null,idx,(cljs.core.count.call(null,imports) - 1)))
{return cljs.core.println.call(null,[cljs.core.str(import$),cljs.core.str(")")].join(''));
} else
{return cljs.core.println.call(null,import$);
}
});})(vec__14645,_,imports))
,imports));
});
lt.plugins.cljrefactor.pprint.pprint_ns = (function pprint_ns(p__14646){var vec__14650 = p__14646;var _ = cljs.core.nth.call(null,vec__14650,0,null);var name = cljs.core.nth.call(null,vec__14650,1,null);var more = cljs.core.nthnext.call(null,vec__14650,2);var ns_form = vec__14650;var docstring_QMARK_ = ((typeof cljs.core.first.call(null,more) === 'string')?cljs.core.first.call(null,more):null);var attrs_QMARK_ = ((cljs.core.map_QMARK_.call(null,cljs.core.second.call(null,more)))?cljs.core.second.call(null,more):null);var forms = (cljs.core.truth_((function (){var and__6486__auto__ = docstring_QMARK_;if(cljs.core.truth_(and__6486__auto__))
{return attrs_QMARK_;
} else
{return and__6486__auto__;
}
})())?lt.plugins.cljrefactor.pprint.nthrest.call(null,more,2):((cljs.core.not.call(null,(function (){var or__6498__auto__ = docstring_QMARK_;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return attrs_QMARK_;
}
})()))?more:((new cljs.core.Keyword(null,"else","else",1017020587))?cljs.core.rest.call(null,more):null)));return clojure.string.replace.call(null,(function (){var sb__7417__auto__ = (new goog.string.StringBuffer());var _STAR_print_fn_STAR_14651_14654 = cljs.core._STAR_print_fn_STAR_;try{cljs.core._STAR_print_fn_STAR_ = ((function (_STAR_print_fn_STAR_14651_14654,sb__7417__auto__,docstring_QMARK_,attrs_QMARK_,forms,vec__14650,_,name,more,ns_form){
return (function (x__7418__auto__){return sb__7417__auto__.append(x__7418__auto__);
});})(_STAR_print_fn_STAR_14651_14654,sb__7417__auto__,docstring_QMARK_,attrs_QMARK_,forms,vec__14650,_,name,more,ns_form))
;
cljs.core.print.call(null,[cljs.core.str("(ns "),cljs.core.str(name)].join(''));
if(cljs.core.truth_((function (){var or__6498__auto__ = docstring_QMARK_;if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{var or__6498__auto____$1 = attrs_QMARK_;if(cljs.core.truth_(or__6498__auto____$1))
{return or__6498__auto____$1;
} else
{return forms;
}
}
})()))
{cljs.core.println.call(null);
} else
{cljs.core.print.call(null,")");
}
if(cljs.core.truth_(docstring_QMARK_))
{cljs.core.println.call(null,[cljs.core.str("\""),cljs.core.str(docstring_QMARK_),cljs.core.str("\"")].join(''));
} else
{}
if(cljs.core.truth_(attrs_QMARK_))
{lt.plugins.cljrefactor.pprint.pprint.call(null,attrs_QMARK_);
} else
{}
cljs.core.dorun.call(null,cljs.core.map_indexed.call(null,((function (_STAR_print_fn_STAR_14651_14654,sb__7417__auto__,docstring_QMARK_,attrs_QMARK_,forms,vec__14650,_,name,more,ns_form){
return (function (idx,form){if(cljs.core._EQ_.call(null,idx,(cljs.core.count.call(null,forms) - 1)))
{return cljs.core.println.call(null,[cljs.core.str(lt.plugins.cljrefactor.pprint.trim_newline.call(null,(function (){var sb__7417__auto____$1 = (new goog.string.StringBuffer());var _STAR_print_fn_STAR_14652_14655 = cljs.core._STAR_print_fn_STAR_;try{cljs.core._STAR_print_fn_STAR_ = ((function (_STAR_print_fn_STAR_14652_14655,sb__7417__auto____$1,_STAR_print_fn_STAR_14651_14654,sb__7417__auto__,docstring_QMARK_,attrs_QMARK_,forms,vec__14650,_,name,more,ns_form){
return (function (x__7418__auto__){return sb__7417__auto____$1.append(x__7418__auto__);
});})(_STAR_print_fn_STAR_14652_14655,sb__7417__auto____$1,_STAR_print_fn_STAR_14651_14654,sb__7417__auto__,docstring_QMARK_,attrs_QMARK_,forms,vec__14650,_,name,more,ns_form))
;
if(lt.plugins.cljrefactor.pprint.form_is_QMARK_.call(null,form,new cljs.core.Keyword(null,"require","require",2109600983)))
{lt.plugins.cljrefactor.pprint.pprint_require_form.call(null,form);
} else
{if(lt.plugins.cljrefactor.pprint.form_is_QMARK_.call(null,form,new cljs.core.Keyword(null,"gen-class","gen-class",3979052077)))
{lt.plugins.cljrefactor.pprint.pprint_gen_class_form.call(null,form);
} else
{if(lt.plugins.cljrefactor.pprint.form_is_QMARK_.call(null,form,new cljs.core.Keyword(null,"import","import",4124075799)))
{lt.plugins.cljrefactor.pprint.pprint_import_form.call(null,form);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{lt.plugins.cljrefactor.pprint.pprint.call(null,form);
} else
{}
}
}
}
}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_14652_14655;
}return [cljs.core.str(sb__7417__auto____$1)].join('');
})())),cljs.core.str(")")].join(''));
} else
{if(lt.plugins.cljrefactor.pprint.form_is_QMARK_.call(null,form,new cljs.core.Keyword(null,"require","require",2109600983)))
{return lt.plugins.cljrefactor.pprint.pprint_require_form.call(null,form);
} else
{if(lt.plugins.cljrefactor.pprint.form_is_QMARK_.call(null,form,new cljs.core.Keyword(null,"gen-class","gen-class",3979052077)))
{return lt.plugins.cljrefactor.pprint.pprint_gen_class_form.call(null,form);
} else
{if(lt.plugins.cljrefactor.pprint.form_is_QMARK_.call(null,form,new cljs.core.Keyword(null,"import","import",4124075799)))
{return lt.plugins.cljrefactor.pprint.pprint_import_form.call(null,form);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return lt.plugins.cljrefactor.pprint.pprint.call(null,form);
} else
{return null;
}
}
}
}
}
});})(_STAR_print_fn_STAR_14651_14654,sb__7417__auto__,docstring_QMARK_,attrs_QMARK_,forms,vec__14650,_,name,more,ns_form))
,forms));
}finally {cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_14651_14654;
}return [cljs.core.str(sb__7417__auto__)].join('');
})(),/\r/,"");
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.namespace')) {
goog.provide('lt.plugins.cljrefactor.namespace');
goog.require('cljs.core');
goog.require('lt.plugins.cljrefactor.pprint');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.plugins.cljrefactor.pprint');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('lt.plugins.clojure');
goog.require('lt.plugins.cljrefactor.prj_parser');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.plugins.cljrefactor.prj_parser');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.plugins.clojure');
lt.plugins.cljrefactor.namespace.nsify = (function nsify(sub_path){return (function (p1__9923_SHARP_){return [cljs.core.str("(ns "),cljs.core.str(p1__9923_SHARP_),cljs.core.str(")\n")].join('');
}).call(null,(function (p1__9922_SHARP_){return clojure.string.join.call(null,".",p1__9922_SHARP_);
}).call(null,(function (parts){return cljs.core.map.call(null,(function (p1__9921_SHARP_){return clojure.string.replace.call(null,p1__9921_SHARP_,/_/,"-");
}),parts);
}).call(null,clojure.string.split.call(null,lt.objs.files.without_ext.call(null,sub_path),cljs.core.re_pattern.call(null,lt.objs.files.separator)))));
});
lt.plugins.cljrefactor.namespace.find_line_containing = (function find_line_containing(ed,txt){var res = [];lt.objs.editor.__GT_cm_ed.call(null,ed).getDoc().eachLine(((function (res){
return (function (line_handle){if((line_handle.text.indexOf(txt) > -1))
{return res.push(lt.objs.editor.__GT_cm_ed.call(null,ed).lineInfo(line_handle).line);
} else
{return null;
}
});})(res))
);
return cljs.core.first.call(null,cljs.core.seq.call(null,res));
});
lt.plugins.cljrefactor.namespace.get_ns_decl = (function get_ns_decl(ed){var pos = lt.objs.editor.__GT_cursor.call(null,ed);var bm = lt.objs.editor.bookmark.call(null,ed,pos,null);var nsl = lt.plugins.cljrefactor.namespace.find_line_containing.call(null,ed,"(ns");var start = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),nsl,new cljs.core.Keyword(null,"ch","ch",1013907415),1], null);if(cljs.core.truth_(nsl))
{lt.objs.editor.move_cursor.call(null,ed,start);
lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"paredit.select.parent","paredit.select.parent",4454322891));
var curr_ns = lt.objs.editor.selection.call(null,ed);var bounds = lt.objs.editor.selection_bounds.call(null,ed);lt.objs.editor.move_cursor.call(null,ed,lt.util.cljs.js__GT_clj.call(null,bm.find()));
bm.clear();
return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"bounds","bounds",3925666343),bounds,new cljs.core.Keyword(null,"ns","ns",1013907767),cljs.reader.read_string.call(null,curr_ns)], null);
} else
{return null;
}
});
lt.plugins.cljrefactor.namespace.replace_ns = (function replace_ns(ed,new_ns){var curr_ns = lt.plugins.cljrefactor.namespace.get_ns_decl.call(null,ed);var pos = lt.objs.editor.__GT_cursor.call(null,ed);var bm = lt.objs.editor.bookmark.call(null,ed,pos,null);lt.objs.editor.set_selection.call(null,ed,new cljs.core.Keyword(null,"from","from",1017056028).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(curr_ns)),new cljs.core.Keyword(null,"to","to",1013907949).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(curr_ns)));
lt.objs.editor.replace_selection.call(null,ed,new_ns);
lt.objs.editor.set_selection.call(null,ed,new cljs.core.Keyword(null,"from","from",1017056028).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(curr_ns)),lt.objs.editor.__GT_cursor.call(null,ed));
lt.objs.editor.indent_selection.call(null,ed,"smart");
lt.objs.editor.move_cursor.call(null,ed,lt.util.cljs.js__GT_clj.call(null,bm.find()));
return bm.clear();
});
lt.plugins.cljrefactor.namespace.index_of_ns_type = (function index_of_ns_type(ns_decl,t){return cljs.core.first.call(null,cljs.core.keep_indexed.call(null,(function (p1__9925_SHARP_,p2__9924_SHARP_){if(cljs.core._EQ_.call(null,cljs.core.keyword.call(null,cljs.core.first.call(null,p2__9924_SHARP_)),t))
{return p1__9925_SHARP_;
} else
{return null;
}
}),cljs.core.drop.call(null,2,ns_decl)));
});
lt.plugins.cljrefactor.namespace.calc_imp_idx = (function calc_imp_idx(ns_decl){var req_idx = lt.plugins.cljrefactor.namespace.index_of_ns_type.call(null,ns_decl,new cljs.core.Keyword(null,"require","require",2109600983));var imp_idx = lt.plugins.cljrefactor.namespace.index_of_ns_type.call(null,ns_decl,new cljs.core.Keyword(null,"import","import",4124075799));return (2 + (cljs.core.truth_(imp_idx)?imp_idx:(function (){var x__6805__auto__ = 1;var y__6806__auto__ = req_idx;return ((x__6805__auto__ > y__6806__auto__) ? x__6805__auto__ : y__6806__auto__);
})()));
});
lt.plugins.cljrefactor.namespace.add_import = (function add_import(ns_decl,imp){var vec__9927 = cljs.core.split_at.call(null,lt.plugins.cljrefactor.namespace.calc_imp_idx.call(null,ns_decl),ns_decl);var pre = cljs.core.nth.call(null,vec__9927,0,null);var post = cljs.core.nth.call(null,vec__9927,1,null);if((cljs.core.seq.call(null,post)) && (cljs.core._EQ_.call(null,cljs.core.ffirst.call(null,post),new cljs.core.Keyword(null,"import","import",4124075799))))
{return cljs.core.concat.call(null,pre,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.concat.call(null,cljs.core.first.call(null,post),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [imp], null))),cljs.core.rest.call(null,post));
} else
{if(cljs.core.seq.call(null,post))
{return cljs.core.concat.call(null,pre,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,imp),new cljs.core.Keyword(null,"import","import",4124075799))),post);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.concat.call(null,pre,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,imp),new cljs.core.Keyword(null,"import","import",4124075799))));
} else
{return null;
}
}
}
});
lt.plugins.cljrefactor.namespace.add_require = (function add_require(ns_decl,req){var req_idx = lt.plugins.cljrefactor.namespace.index_of_ns_type.call(null,ns_decl,new cljs.core.Keyword(null,"require","require",2109600983));var vec__9929 = cljs.core.split_at.call(null,(cljs.core.truth_(req_idx)?(req_idx + 2):2),ns_decl);var pre = cljs.core.nth.call(null,vec__9929,0,null);var post = cljs.core.nth.call(null,vec__9929,1,null);if((cljs.core.seq.call(null,post)) && (cljs.core._EQ_.call(null,cljs.core.ffirst.call(null,post),new cljs.core.Keyword(null,"require","require",2109600983))))
{return cljs.core.concat.call(null,pre,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core.concat.call(null,cljs.core.first.call(null,post),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [req], null))),cljs.core.rest.call(null,post));
} else
{if(cljs.core.seq.call(null,post))
{return cljs.core.concat.call(null,pre,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,req),new cljs.core.Keyword(null,"require","require",2109600983))),post);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return cljs.core.concat.call(null,pre,cljs.core._conj.call(null,cljs.core.List.EMPTY,cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,req),new cljs.core.Keyword(null,"require","require",2109600983))));
} else
{return null;
}
}
}
});
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.namespace","introduce-ns","lt.plugins.cljrefactor.namespace/introduce-ns",1495593912),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Introduce ns",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var ed = lt.objs.editor.pool.last_active.call(null);var pos = lt.objs.editor.__GT_cursor.call(null,ed);var prj_file = lt.plugins.cljrefactor.prj_parser.get_project_file.call(null,ed);var path = new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));var src_dirs = (cljs.core.truth_(prj_file)?lt.plugins.cljrefactor.prj_parser.src_dirs.call(null,lt.plugins.cljrefactor.prj_parser.parse_project_file.call(null,prj_file)):null);if(cljs.core.truth_(prj_file))
{var ns_stmt = lt.plugins.cljrefactor.namespace.nsify.call(null,lt.plugins.cljrefactor.prj_parser.find_sub_path.call(null,lt.plugins.cljrefactor.prj_parser.project_path.call(null,ed),path,src_dirs));lt.objs.editor.move_cursor.call(null,ed,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),0,new cljs.core.Keyword(null,"ch","ch",1013907415),0], null));
lt.objs.editor.insert_at_cursor.call(null,ed,ns_stmt);
return lt.objs.editor.move_cursor.call(null,ed,cljs.core.update_in.call(null,pos,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"line","line",1017226086)], null),cljs.core.inc));
} else
{return null;
}
})], null));
lt.plugins.cljrefactor.namespace.clean_ns_op = (function clean_ns_op(path){return lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"clean-ns",new cljs.core.Keyword(null,"path","path",1017337751),path], null));
});
lt.plugins.cljrefactor.namespace.__BEH__clean_ns_res = (function __BEH__clean_ns_res(ed,res){var vec__9931 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ns","ns",1013907767)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__9931,0,null);var ret = cljs.core.nth.call(null,vec__9931,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{if(cljs.core.seq.call(null,new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(ret)))
{lt.plugins.cljrefactor.namespace.replace_ns.call(null,ed,new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(ret));
return lt.objs.notifos.set_msg_BANG_.call(null,"Namespace cleaned !");
} else
{return null;
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.namespace","clean-ns-res","lt.plugins.cljrefactor.namespace/clean-ns-res",2843051529),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.namespace.__BEH__clean_ns_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.clean-ns","editor.eval.clj.result.refactor.clean-ns",514468564),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.namespace","clean-ns","lt.plugins.cljrefactor.namespace/clean-ns",2356718878),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Cleanup ns",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var ed = lt.objs.editor.pool.last_active.call(null);var temp__4092__auto__ = new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));if(cljs.core.truth_(temp__4092__auto__))
{var path = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.namespace.clean_ns_op.call(null,path),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.clean-ns","refactor.clean-ns",1837288039),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.input-prompt')) {
goog.provide('lt.plugins.cljrefactor.input_prompt');
goog.require('cljs.core');
goog.require('lt.objs.files');
goog.require('lt.util.dom');
goog.require('clojure.string');
goog.require('lt.util.dom');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.input_prompt.remove_form = (function remove_form(this$){if(cljs.core.truth_(new cljs.core.Keyword(null,"deleted","deleted",2564367243).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{return null;
} else
{lt.object.merge_BANG_.call(null,this$,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"deleted","deleted",2564367243),true], null));
return lt.object.destroy_BANG_.call(null,this$);
}
});
lt.plugins.cljrefactor.input_prompt.prompt_form = (function prompt_form(this$,init_value){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.refactor-prompt","div.refactor-prompt",3754652772),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",1013904354),"Enter new name: "], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"input","input",1114262332),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"name","name",1017277949),"refactor-prompt",new cljs.core.Keyword(null,"type","type",1017479852),"text",new cljs.core.Keyword(null,"value","value",1125876963),init_value], null)], null)], null));var seq__8651_8667 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__8652_8668 = null;var count__8653_8669 = 0;var i__8654_8670 = 0;while(true){
if((i__8654_8670 < count__8653_8669))
{var vec__8655_8671 = cljs.core._nth.call(null,chunk__8652_8668,i__8654_8670);var ev__7926__auto___8672 = cljs.core.nth.call(null,vec__8655_8671,0,null);var func__7927__auto___8673 = cljs.core.nth.call(null,vec__8655_8671,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___8672,func__7927__auto___8673);
{
var G__8674 = seq__8651_8667;
var G__8675 = chunk__8652_8668;
var G__8676 = count__8653_8669;
var G__8677 = (i__8654_8670 + 1);
seq__8651_8667 = G__8674;
chunk__8652_8668 = G__8675;
count__8653_8669 = G__8676;
i__8654_8670 = G__8677;
continue;
}
} else
{var temp__4092__auto___8678 = cljs.core.seq.call(null,seq__8651_8667);if(temp__4092__auto___8678)
{var seq__8651_8679__$1 = temp__4092__auto___8678;if(cljs.core.chunked_seq_QMARK_.call(null,seq__8651_8679__$1))
{var c__7246__auto___8680 = cljs.core.chunk_first.call(null,seq__8651_8679__$1);{
var G__8681 = cljs.core.chunk_rest.call(null,seq__8651_8679__$1);
var G__8682 = c__7246__auto___8680;
var G__8683 = cljs.core.count.call(null,c__7246__auto___8680);
var G__8684 = 0;
seq__8651_8667 = G__8681;
chunk__8652_8668 = G__8682;
count__8653_8669 = G__8683;
i__8654_8670 = G__8684;
continue;
}
} else
{var vec__8656_8685 = cljs.core.first.call(null,seq__8651_8679__$1);var ev__7926__auto___8686 = cljs.core.nth.call(null,vec__8656_8685,0,null);var func__7927__auto___8687 = cljs.core.nth.call(null,vec__8656_8685,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___8686,func__7927__auto___8687);
{
var G__8688 = cljs.core.next.call(null,seq__8651_8679__$1);
var G__8689 = null;
var G__8690 = 0;
var G__8691 = 0;
seq__8651_8667 = G__8688;
chunk__8652_8668 = G__8689;
count__8653_8669 = G__8690;
i__8654_8670 = G__8691;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.input_prompt.on_keydown = (function on_keydown(this$,ed,ev){var kc = ev.keyCode;var el = ev.target;if(cljs.core._EQ_.call(null,13,kc))
{lt.util.dom.stop_propagation.call(null,ev);
lt.util.dom.prevent.call(null,ev);
var old = new cljs.core.Keyword(null,"init-value","init-value",4481282534).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));var new$ = el.value;var the_ed = new cljs.core.Keyword(null,"ed","ed",1013907473).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));var beh = new cljs.core.Keyword(null,"behavior","behavior",2524816836).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));lt.object.raise.call(null,the_ed,beh,old,new$);
return lt.plugins.cljrefactor.input_prompt.remove_form.call(null,this$);
} else
{if(cljs.core._EQ_.call(null,27,kc))
{lt.util.dom.stop_propagation.call(null,ev);
lt.util.dom.prevent.call(null,ev);
lt.plugins.cljrefactor.input_prompt.remove_form.call(null,this$);
return lt.objs.editor.focus.call(null,ed);
} else
{return null;
}
}
});
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.input-prompt","refactor-prompt-form","lt.plugins.cljrefactor.input-prompt/refactor-prompt-form",3453773883),new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"click","click",1108654330),null,new cljs.core.Keyword(null,"clear!","clear!",3951036134),null], null), null),new cljs.core.Keyword(null,"tags","tags",1017456523),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"inline.refactor.prompt.form","inline.refactor.prompt.form",3898711049),null,new cljs.core.Keyword(null,"inline","inline",4124874251),null], null), null),new cljs.core.Keyword(null,"init","init",1017141378),(function (this$,info){var temp__4092__auto__ = lt.objs.editor.__GT_cm_ed.call(null,new cljs.core.Keyword(null,"ed","ed",1013907473).cljs$core$IFn$_invoke$arity$1(info));if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;lt.object.merge_BANG_.call(null,this$,info);
var content = lt.plugins.cljrefactor.input_prompt.prompt_form.call(null,this$,new cljs.core.Keyword(null,"init-value","init-value",4481282534).cljs$core$IFn$_invoke$arity$1(info));lt.util.dom.on.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"input","input",1114262332),content),"blur",((function (content,ed,temp__4092__auto__){
return (function (){return lt.plugins.cljrefactor.input_prompt.remove_form.call(null,this$);
});})(content,ed,temp__4092__auto__))
);
lt.util.dom.on.call(null,content,"keydown",cljs.core.partial.call(null,lt.plugins.cljrefactor.input_prompt.on_keydown,this$,ed));
CodeMirror.positionHint(ed,content,new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"pos","pos",1014015430).cljs$core$IFn$_invoke$arity$1(info)));
lt.util.dom.focus.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"input","input",1114262332),content));
return content;
} else
{return null;
}
}));
lt.plugins.cljrefactor.input_prompt.make = (function make(info){return lt.object.create.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.input-prompt","refactor-prompt-form","lt.plugins.cljrefactor.input-prompt/refactor-prompt-form",3453773883),info);
});
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.usages')) {
goog.provide('lt.plugins.cljrefactor.usages');
goog.require('cljs.core');
goog.require('crate.binding');
goog.require('lt.objs.files');
goog.require('lt.util.dom');
goog.require('lt.plugins.cljrefactor.input_prompt');
goog.require('lt.objs.tabs');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('crate.core');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.util.dom');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('crate.binding');
goog.require('lt.plugins.cljrefactor.input_prompt');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.console');
goog.require('lt.objs.tabs');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('crate.core');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.objs.document');
goog.require('lt.objs.document');
lt.plugins.cljrefactor.usages.__BEH__on_close = (function __BEH__on_close(this$){return lt.objs.tabs.rem_BANG_.call(null,this$);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","on-close","lt.plugins.cljrefactor.usages/on-close",757312783),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__on_close,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"close","close",1108660586),null], null), null));
lt.plugins.cljrefactor.usages.__BEH__clear_BANG_ = (function __BEH__clear_BANG_(this$){return lt.util.dom.empty.call(null,lt.util.dom.$.call(null,new cljs.core.Keyword(null,"ul.res","ul.res",4464738363),lt.object.__GT_content.call(null,this$)));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","clear!","lt.plugins.cljrefactor.usages/clear!",4298270169),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__clear_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"clear!","clear!",3951036134),null], null), null));
lt.plugins.cljrefactor.usages.highlight = (function highlight(line,sym){return clojure.string.replace.call(null,line,sym,[cljs.core.str("<em>"),cljs.core.str(sym),cljs.core.str("</em>")].join('')).substring(0,150);
});
lt.plugins.cljrefactor.usages.result_entry = (function result_entry(this$,entry){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",1013904354),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",1108647146),"entry".concat((cljs.core.truth_(new cljs.core.Keyword(null,"active","active",3885920888).cljs$core$IFn$_invoke$arity$1(entry))?" active":""))], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.line","span.line",4619821962),new cljs.core.Keyword(null,"line-beg","line-beg",2201385629).cljs$core$IFn$_invoke$arity$1(entry)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"pre","pre",1014015509),crate.core.raw.call(null,lt.plugins.cljrefactor.usages.highlight.call(null,new cljs.core.Keyword(null,"match","match",1117572407).cljs$core$IFn$_invoke$arity$1(entry),new cljs.core.Keyword(null,"symbol","symbol",4421347594).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"search-for","search-for",4597237398).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)))))], null)], null));var seq__15547_15601 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"click","click",1108654330),((function (e__7925__auto__){
return (function (){lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2513940794),new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(entry));
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"goto-line","goto-line",2802035088),new cljs.core.Keyword(null,"line-beg","line-beg",2201385629).cljs$core$IFn$_invoke$arity$1(entry));
});})(e__7925__auto__))
], null)));var chunk__15548_15602 = null;var count__15549_15603 = 0;var i__15550_15604 = 0;while(true){
if((i__15550_15604 < count__15549_15603))
{var vec__15551_15605 = cljs.core._nth.call(null,chunk__15548_15602,i__15550_15604);var ev__7926__auto___15606 = cljs.core.nth.call(null,vec__15551_15605,0,null);var func__7927__auto___15607 = cljs.core.nth.call(null,vec__15551_15605,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___15606,func__7927__auto___15607);
{
var G__15608 = seq__15547_15601;
var G__15609 = chunk__15548_15602;
var G__15610 = count__15549_15603;
var G__15611 = (i__15550_15604 + 1);
seq__15547_15601 = G__15608;
chunk__15548_15602 = G__15609;
count__15549_15603 = G__15610;
i__15550_15604 = G__15611;
continue;
}
} else
{var temp__4092__auto___15612 = cljs.core.seq.call(null,seq__15547_15601);if(temp__4092__auto___15612)
{var seq__15547_15613__$1 = temp__4092__auto___15612;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15547_15613__$1))
{var c__7246__auto___15614 = cljs.core.chunk_first.call(null,seq__15547_15613__$1);{
var G__15615 = cljs.core.chunk_rest.call(null,seq__15547_15613__$1);
var G__15616 = c__7246__auto___15614;
var G__15617 = cljs.core.count.call(null,c__7246__auto___15614);
var G__15618 = 0;
seq__15547_15601 = G__15615;
chunk__15548_15602 = G__15616;
count__15549_15603 = G__15617;
i__15550_15604 = G__15618;
continue;
}
} else
{var vec__15552_15619 = cljs.core.first.call(null,seq__15547_15613__$1);var ev__7926__auto___15620 = cljs.core.nth.call(null,vec__15552_15619,0,null);var func__7927__auto___15621 = cljs.core.nth.call(null,vec__15552_15619,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___15620,func__7927__auto___15621);
{
var G__15622 = cljs.core.next.call(null,seq__15547_15613__$1);
var G__15623 = null;
var G__15624 = 0;
var G__15625 = 0;
seq__15547_15601 = G__15622;
chunk__15548_15602 = G__15623;
count__15549_15603 = G__15624;
i__15550_15604 = G__15625;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.usages.result_item = (function result_item(this$,item){var e__7925__auto__ = crate.core.html.call(null,(function (){var file = new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(item);return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"li","li",1013907695),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p.path","p.path",4266284629),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span.file","span.file",4619643154),lt.objs.files.basename.call(null,file)], null),"(",lt.objs.files.parent.call(null,file),")"], null),cljs.core.map.call(null,((function (file){
return (function (p1__15553_SHARP_){return lt.plugins.cljrefactor.usages.result_entry.call(null,this$,p1__15553_SHARP_);
});})(file))
,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(item))], null);
})());var seq__15560_15626 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__15561_15627 = null;var count__15562_15628 = 0;var i__15563_15629 = 0;while(true){
if((i__15563_15629 < count__15562_15628))
{var vec__15564_15630 = cljs.core._nth.call(null,chunk__15561_15627,i__15563_15629);var ev__7926__auto___15631 = cljs.core.nth.call(null,vec__15564_15630,0,null);var func__7927__auto___15632 = cljs.core.nth.call(null,vec__15564_15630,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___15631,func__7927__auto___15632);
{
var G__15633 = seq__15560_15626;
var G__15634 = chunk__15561_15627;
var G__15635 = count__15562_15628;
var G__15636 = (i__15563_15629 + 1);
seq__15560_15626 = G__15633;
chunk__15561_15627 = G__15634;
count__15562_15628 = G__15635;
i__15563_15629 = G__15636;
continue;
}
} else
{var temp__4092__auto___15637 = cljs.core.seq.call(null,seq__15560_15626);if(temp__4092__auto___15637)
{var seq__15560_15638__$1 = temp__4092__auto___15637;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15560_15638__$1))
{var c__7246__auto___15639 = cljs.core.chunk_first.call(null,seq__15560_15638__$1);{
var G__15640 = cljs.core.chunk_rest.call(null,seq__15560_15638__$1);
var G__15641 = c__7246__auto___15639;
var G__15642 = cljs.core.count.call(null,c__7246__auto___15639);
var G__15643 = 0;
seq__15560_15626 = G__15640;
chunk__15561_15627 = G__15641;
count__15562_15628 = G__15642;
i__15563_15629 = G__15643;
continue;
}
} else
{var vec__15565_15644 = cljs.core.first.call(null,seq__15560_15638__$1);var ev__7926__auto___15645 = cljs.core.nth.call(null,vec__15565_15644,0,null);var func__7927__auto___15646 = cljs.core.nth.call(null,vec__15565_15644,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___15645,func__7927__auto___15646);
{
var G__15647 = cljs.core.next.call(null,seq__15560_15638__$1);
var G__15648 = null;
var G__15649 = 0;
var G__15650 = 0;
seq__15560_15626 = G__15647;
chunk__15561_15627 = G__15648;
count__15562_15628 = G__15649;
i__15563_15629 = G__15650;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.usages.search_results = (function search_results(this$,res){var e__7925__auto__ = crate.core.html.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ul.res","ul.res",4464738363),cljs.core.map.call(null,(function (p1__15566_SHARP_){return lt.plugins.cljrefactor.usages.result_item.call(null,this$,p1__15566_SHARP_);
}),res)], null));var seq__15573_15651 = cljs.core.seq.call(null,cljs.core.partition.call(null,2,cljs.core.PersistentVector.EMPTY));var chunk__15574_15652 = null;var count__15575_15653 = 0;var i__15576_15654 = 0;while(true){
if((i__15576_15654 < count__15575_15653))
{var vec__15577_15655 = cljs.core._nth.call(null,chunk__15574_15652,i__15576_15654);var ev__7926__auto___15656 = cljs.core.nth.call(null,vec__15577_15655,0,null);var func__7927__auto___15657 = cljs.core.nth.call(null,vec__15577_15655,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___15656,func__7927__auto___15657);
{
var G__15658 = seq__15573_15651;
var G__15659 = chunk__15574_15652;
var G__15660 = count__15575_15653;
var G__15661 = (i__15576_15654 + 1);
seq__15573_15651 = G__15658;
chunk__15574_15652 = G__15659;
count__15575_15653 = G__15660;
i__15576_15654 = G__15661;
continue;
}
} else
{var temp__4092__auto___15662 = cljs.core.seq.call(null,seq__15573_15651);if(temp__4092__auto___15662)
{var seq__15573_15663__$1 = temp__4092__auto___15662;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15573_15663__$1))
{var c__7246__auto___15664 = cljs.core.chunk_first.call(null,seq__15573_15663__$1);{
var G__15665 = cljs.core.chunk_rest.call(null,seq__15573_15663__$1);
var G__15666 = c__7246__auto___15664;
var G__15667 = cljs.core.count.call(null,c__7246__auto___15664);
var G__15668 = 0;
seq__15573_15651 = G__15665;
chunk__15574_15652 = G__15666;
count__15575_15653 = G__15667;
i__15576_15654 = G__15668;
continue;
}
} else
{var vec__15578_15669 = cljs.core.first.call(null,seq__15573_15663__$1);var ev__7926__auto___15670 = cljs.core.nth.call(null,vec__15578_15669,0,null);var func__7927__auto___15671 = cljs.core.nth.call(null,vec__15578_15669,1,null);lt.util.dom.on.call(null,e__7925__auto__,ev__7926__auto___15670,func__7927__auto___15671);
{
var G__15672 = cljs.core.next.call(null,seq__15573_15663__$1);
var G__15673 = null;
var G__15674 = 0;
var G__15675 = 0;
seq__15573_15651 = G__15672;
chunk__15574_15652 = G__15673;
count__15575_15653 = G__15674;
i__15576_15654 = G__15675;
continue;
}
}
} else
{}
}
break;
}
return e__7925__auto__;
});
lt.plugins.cljrefactor.usages.show_results = (function show_results(this$,res){var container = lt.object.__GT_content.call(null,this$);var results_ul = lt.util.dom.$.call(null,new cljs.core.Keyword(null,"ul.res","ul.res",4464738363),container);return lt.util.dom.replace_with.call(null,results_ul,lt.plugins.cljrefactor.usages.search_results.call(null,this$,res));
});
lt.plugins.cljrefactor.usages.usages__GT_items = (function usages__GT_items(usages){return cljs.core.vec.call(null,cljs.core.map.call(null,(function (p__15581){var map__15582 = p__15581;var map__15582__$1 = ((cljs.core.seq_QMARK_.call(null,map__15582))?cljs.core.apply.call(null,cljs.core.hash_map,map__15582):map__15582);var x = cljs.core.get.call(null,map__15582__$1,new cljs.core.Keyword(null,"occurrence","occurrence",2701778243));return cljs.core.apply.call(null,cljs.core.hash_map,cljs.reader.read_string.call(null,x));
}),usages));
});
lt.plugins.cljrefactor.usages.items__GT_view = (function items__GT_view(items){return (function (x){return cljs.core.map.call(null,(function (k){var res = cljs.core.get.call(null,x,k);return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"file","file",1017047278),k,new cljs.core.Keyword(null,"items","items",1114430258),res], null);
}),cljs.core.keys.call(null,x));
}).call(null,cljs.core.group_by.call(null,new cljs.core.Keyword(null,"file","file",1017047278),items));
});
lt.plugins.cljrefactor.usages.find_symbol_op = (function find_symbol_op(ed,sym){var pos = lt.objs.editor.__GT_cursor.call(null,ed);return lt.plugins.cljrefactor.middleware.create_ns_op.call(null,ed,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"op","op",1013907795),"find-symbol",new cljs.core.Keyword(null,"file","file",1017047278),new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed))),new cljs.core.Keyword(null,"column","column",3954034376),(new cljs.core.Keyword(null,"ch","ch",1013907415).cljs$core$IFn$_invoke$arity$1(pos) + 1),new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(pos) + 1),new cljs.core.Keyword(null,"name","name",1017277949),sym], null));
});
lt.plugins.cljrefactor.usages.__BEH__find_symbol__DOT__res = (function __BEH__find_symbol__DOT__res(ed,res){var vec__15584 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"multiples","multiples",4102754261),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"occurrence","occurrence",2701778243)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__15584,0,null);var ret = cljs.core.nth.call(null,vec__15584,1,null);var items = lt.plugins.cljrefactor.usages.usages__GT_items.call(null,new cljs.core.Keyword(null,"occurrence","occurrence",2701778243).cljs$core$IFn$_invoke$arity$1(ret));if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{if(cljs.core.seq.call(null,items))
{lt.object.merge_BANG_.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"items","items",1114430258),cljs.core.assoc_in.call(null,items,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0,new cljs.core.Keyword(null,"active","active",3885920888)], null),true)], null));
} else
{lt.object.merge_BANG_.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"items","items",1114430258),null], null));
}
lt.plugins.cljrefactor.usages.show_results.call(null,lt.plugins.cljrefactor.usages.refactor_usages,lt.plugins.cljrefactor.usages.items__GT_view.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,lt.plugins.cljrefactor.usages.refactor_usages))));
lt.object.update_BANG_.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"search-for","search-for",4597237398),new cljs.core.Keyword(null,"namespace","namespace",2266122445)], null),((function (vec__15584,ok_QMARK_,ret,items){
return (function (_){return new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));
});})(vec__15584,ok_QMARK_,ret,items))
);
}
return lt.objs.notifos.done_working.call(null,"Find usages completed");
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","find-symbol.res","lt.plugins.cljrefactor.usages/find-symbol.res",2620470851),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__find_symbol__DOT__res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.find-symbol","editor.eval.clj.result.refactor.find-symbol",1593184613),null], null), null));
lt.plugins.cljrefactor.usages.__GT_idx_active = (function __GT_idx_active(items){return cljs.core.first.call(null,cljs.core.keep_indexed.call(null,(function (p1__15586_SHARP_,p2__15585_SHARP_){if(cljs.core.truth_(new cljs.core.Keyword(null,"active","active",3885920888).cljs$core$IFn$_invoke$arity$1(p2__15585_SHARP_)))
{return p1__15586_SHARP_;
} else
{return null;
}
}),items));
});
lt.plugins.cljrefactor.usages.__BEH__open_active = (function __BEH__open_active(this$){var temp__4092__auto__ = cljs.core.seq.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));if(temp__4092__auto__)
{var items = temp__4092__auto__;var idx = lt.plugins.cljrefactor.usages.__GT_idx_active.call(null,items);var item = cljs.core.nth.call(null,items,idx);lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"open-path","open-path",2513940794),new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(item));
return lt.objs.command.exec_BANG_.call(null,new cljs.core.Keyword(null,"goto-line","goto-line",2802035088),cljs.core.first.call(null,new cljs.core.Keyword(null,"loc","loc",1014011570).cljs$core$IFn$_invoke$arity$1(item)));
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","open-active","lt.plugins.cljrefactor.usages/open-active",3180301936),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__open_active,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.usages","open-active!","lt.plugins.cljrefactor.usages/open-active!",2657621949),null], null), null));
lt.plugins.cljrefactor.usages.__BEH__move_next = (function __BEH__move_next(this$){if(cljs.core.seq.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{var items = new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$));var idx = lt.plugins.cljrefactor.usages.__GT_idx_active.call(null,items);var cnt = cljs.core.count.call(null,items);if((cnt > (idx + 1)))
{lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"items","items",1114430258),idx,new cljs.core.Keyword(null,"active","active",3885920888)], null),((function (items,idx,cnt){
return (function (_){return false;
});})(items,idx,cnt))
);
lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"items","items",1114430258),(idx + 1),new cljs.core.Keyword(null,"active","active",3885920888)], null),((function (items,idx,cnt){
return (function (_){return true;
});})(items,idx,cnt))
);
return lt.plugins.cljrefactor.usages.show_results.call(null,this$,lt.plugins.cljrefactor.usages.items__GT_view.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))));
} else
{return null;
}
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","move-next","lt.plugins.cljrefactor.usages/move-next",1900625398),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__move_next,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.usages","move-next!","lt.plugins.cljrefactor.usages/move-next!",3581564695),null], null), null));
lt.plugins.cljrefactor.usages.__BEH__move_prev = (function __BEH__move_prev(this$){if(cljs.core.seq.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))))
{var idx = lt.plugins.cljrefactor.usages.__GT_idx_active.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$)));if((idx > 0))
{lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"items","items",1114430258),idx,new cljs.core.Keyword(null,"active","active",3885920888)], null),((function (idx){
return (function (_){return false;
});})(idx))
);
lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"items","items",1114430258),(idx - 1),new cljs.core.Keyword(null,"active","active",3885920888)], null),((function (idx){
return (function (_){return true;
});})(idx))
);
return lt.plugins.cljrefactor.usages.show_results.call(null,this$,lt.plugins.cljrefactor.usages.items__GT_view.call(null,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,this$))));
} else
{return null;
}
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","move-prev","lt.plugins.cljrefactor.usages/move-prev",1901483830),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__move_prev,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("lt.plugins.cljrefactor.usages","move-prev!","lt.plugins.cljrefactor.usages/move-prev!",3579340247),null], null), null));
lt.plugins.cljrefactor.usages.__BEH__find_symbol__DOT__start = (function __BEH__find_symbol__DOT__start(this$,ed,token){var ns = (function (){var or__6498__auto__ = new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));
}
})();var sym = new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(token);if(cljs.core._EQ_.call(null,sym.indexOf("/"),-1))
{lt.objs.tabs.add_or_focus_BANG_.call(null,lt.plugins.cljrefactor.usages.refactor_usages);
lt.object.raise.call(null,this$,new cljs.core.Keyword(null,"clear!","clear!",3951036134));
lt.object.update_BANG_.call(null,this$,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"search-for","search-for",4597237398)], null),((function (ns,sym){
return (function (_){return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"symbol","symbol",4421347594),sym,new cljs.core.Keyword(null,"namespace","namespace",2266122445),ns], null);
});})(ns,sym))
);
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.usages.find_symbol_op.call(null,ed,sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.find-symbol","refactor.find-symbol",3383223538),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true,new cljs.core.Keyword(null,"symbol","symbol",4421347594),sym], null));
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","find-symbol.start","lt.plugins.cljrefactor.usages/find-symbol.start",4504937093),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__find_symbol__DOT__start,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.find-symbol","refactor.find-symbol",3383223538),null], null), null));
lt.plugins.cljrefactor.usages.search_for = (function search_for(this$){return cljs.core._conj.call(null,cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"span","span",1017440956),(function (){var temp__4092__auto__ = new cljs.core.Keyword(null,"search-for","search-for",4597237398).cljs$core$IFn$_invoke$arity$1(this$);if(cljs.core.truth_(temp__4092__auto__))
{var info = temp__4092__auto__;return [cljs.core.str(new cljs.core.Keyword(null,"namespace","namespace",2266122445).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str("/"),cljs.core.str(new cljs.core.Keyword(null,"symbol","symbol",4421347594).cljs$core$IFn$_invoke$arity$1(info))].join('');
} else
{return null;
}
})()], null)),"Find usages for: ");
});
lt.plugins.cljrefactor.usages.replace_in_hidden_ed_BANG_ = (function replace_in_hidden_ed_BANG_(file,selections,new$){var content = new cljs.core.Keyword(null,"content","content",1965434859).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,file));var ed = lt.objs.editor.pool.create.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"mime","mime",1017255846),"text/x-clojure",new cljs.core.Keyword(null,"content","content",1965434859),content], null));var cm_ed = lt.objs.editor.__GT_cm_ed.call(null,ed);cm_ed.setSelections(cljs.core.clj__GT_js.call(null,selections));
cm_ed.replaceSelections(cljs.core.clj__GT_js.call(null,cljs.core.repeat.call(null,cljs.core.count.call(null,selections),new$)));
lt.objs.files.save.call(null,file,lt.objs.editor.__GT_val.call(null,ed));
return lt.object.destroy_BANG_.call(null,ed);
});
lt.plugins.cljrefactor.usages.replace_in_open_ed_BANG_ = (function replace_in_open_ed_BANG_(ed,selections,new$){var cm_ed = lt.objs.editor.__GT_cm_ed.call(null,ed);cm_ed.setSelections(cljs.core.clj__GT_js.call(null,selections));
cm_ed.replaceSelections(cljs.core.clj__GT_js.call(null,cljs.core.repeat.call(null,cljs.core.count.call(null,selections),new$)));
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"save","save",1017427183));
});
lt.plugins.cljrefactor.usages.create_replace_selections = (function create_replace_selections(fileItems,old){var origin_QMARK_ = (function (item){return (new cljs.core.Keyword(null,"line-end","line-end",2201388788).cljs$core$IFn$_invoke$arity$1(item) > new cljs.core.Keyword(null,"line-beg","line-beg",2201385629).cljs$core$IFn$_invoke$arity$1(item));
});var calc_col_start = ((function (origin_QMARK_){
return (function (item){if(origin_QMARK_.call(null,item))
{return new cljs.core.Keyword(null,"match","match",1117572407).cljs$core$IFn$_invoke$arity$1(item).indexOf(old);
} else
{return ((new cljs.core.Keyword(null,"col-end","col-end",1961472640).cljs$core$IFn$_invoke$arity$1(item) - 2) - cljs.core.count.call(null,old));
}
});})(origin_QMARK_))
;var calc_col_end = ((function (origin_QMARK_,calc_col_start){
return (function (item){if(origin_QMARK_.call(null,item))
{return (new cljs.core.Keyword(null,"match","match",1117572407).cljs$core$IFn$_invoke$arity$1(item).indexOf(old) + cljs.core.count.call(null,old));
} else
{return (new cljs.core.Keyword(null,"col-end","col-end",1961472640).cljs$core$IFn$_invoke$arity$1(item) - 2);
}
});})(origin_QMARK_,calc_col_start))
;return cljs.core.vec.call(null,cljs.core.map.call(null,((function (origin_QMARK_,calc_col_start,calc_col_end){
return (function (item){return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"anchor","anchor",3895572007),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line-beg","line-beg",2201385629).cljs$core$IFn$_invoke$arity$1(item) - 1),new cljs.core.Keyword(null,"ch","ch",1013907415),calc_col_start.call(null,item)], null),new cljs.core.Keyword(null,"head","head",1017102674),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line-beg","line-beg",2201385629).cljs$core$IFn$_invoke$arity$1(item) - 1),new cljs.core.Keyword(null,"ch","ch",1013907415),calc_col_end.call(null,item)], null)], null);
});})(origin_QMARK_,calc_col_start,calc_col_end))
,new cljs.core.Keyword(null,"items","items",1114430258).cljs$core$IFn$_invoke$arity$1(fileItems)));
});
lt.plugins.cljrefactor.usages.replace_in_editors_BANG_ = (function replace_in_editors_BANG_(itemsByFile,p__15588){var map__15594 = p__15588;var map__15594__$1 = ((cljs.core.seq_QMARK_.call(null,map__15594))?cljs.core.apply.call(null,cljs.core.hash_map,map__15594):map__15594);var new$ = cljs.core.get.call(null,map__15594__$1,new cljs.core.Keyword(null,"new","new",1014013202));var old = cljs.core.get.call(null,map__15594__$1,new cljs.core.Keyword(null,"old","old",1014014361));var open_eds = lt.object.by_tag.call(null,new cljs.core.Keyword(null,"editor.clj","editor.clj",3751346322));var open_ed_QMARK_ = ((function (open_eds,map__15594,map__15594__$1,new$,old){
return (function (file){return cljs.core.some.call(null,((function (open_eds,map__15594,map__15594__$1,new$,old){
return (function (p1__15587_SHARP_){if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,p1__15587_SHARP_))),file))
{return p1__15587_SHARP_;
} else
{return null;
}
});})(open_eds,map__15594,map__15594__$1,new$,old))
,open_eds);
});})(open_eds,map__15594,map__15594__$1,new$,old))
;var seq__15595 = cljs.core.seq.call(null,itemsByFile);var chunk__15596 = null;var count__15597 = 0;var i__15598 = 0;while(true){
if((i__15598 < count__15597))
{var fileItems = cljs.core._nth.call(null,chunk__15596,i__15598);var temp__4090__auto___15676 = open_ed_QMARK_.call(null,new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(fileItems));if(cljs.core.truth_(temp__4090__auto___15676))
{var open_ed_15677 = temp__4090__auto___15676;lt.plugins.cljrefactor.usages.replace_in_open_ed_BANG_.call(null,open_ed_15677,lt.plugins.cljrefactor.usages.create_replace_selections.call(null,fileItems,old),new$);
} else
{lt.plugins.cljrefactor.usages.replace_in_hidden_ed_BANG_.call(null,new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(fileItems),lt.plugins.cljrefactor.usages.create_replace_selections.call(null,fileItems,old),new$);
}
{
var G__15678 = seq__15595;
var G__15679 = chunk__15596;
var G__15680 = count__15597;
var G__15681 = (i__15598 + 1);
seq__15595 = G__15678;
chunk__15596 = G__15679;
count__15597 = G__15680;
i__15598 = G__15681;
continue;
}
} else
{var temp__4092__auto__ = cljs.core.seq.call(null,seq__15595);if(temp__4092__auto__)
{var seq__15595__$1 = temp__4092__auto__;if(cljs.core.chunked_seq_QMARK_.call(null,seq__15595__$1))
{var c__7246__auto__ = cljs.core.chunk_first.call(null,seq__15595__$1);{
var G__15682 = cljs.core.chunk_rest.call(null,seq__15595__$1);
var G__15683 = c__7246__auto__;
var G__15684 = cljs.core.count.call(null,c__7246__auto__);
var G__15685 = 0;
seq__15595 = G__15682;
chunk__15596 = G__15683;
count__15597 = G__15684;
i__15598 = G__15685;
continue;
}
} else
{var fileItems = cljs.core.first.call(null,seq__15595__$1);var temp__4090__auto___15686 = open_ed_QMARK_.call(null,new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(fileItems));if(cljs.core.truth_(temp__4090__auto___15686))
{var open_ed_15687 = temp__4090__auto___15686;lt.plugins.cljrefactor.usages.replace_in_open_ed_BANG_.call(null,open_ed_15687,lt.plugins.cljrefactor.usages.create_replace_selections.call(null,fileItems,old),new$);
} else
{lt.plugins.cljrefactor.usages.replace_in_hidden_ed_BANG_.call(null,new cljs.core.Keyword(null,"file","file",1017047278).cljs$core$IFn$_invoke$arity$1(fileItems),lt.plugins.cljrefactor.usages.create_replace_selections.call(null,fileItems,old),new$);
}
{
var G__15688 = cljs.core.next.call(null,seq__15595__$1);
var G__15689 = null;
var G__15690 = 0;
var G__15691 = 0;
seq__15595 = G__15688;
chunk__15596 = G__15689;
count__15597 = G__15690;
i__15598 = G__15691;
continue;
}
}
} else
{return null;
}
}
break;
}
});
lt.plugins.cljrefactor.usages.__BEH__rename_symbol__DOT__res = (function __BEH__rename_symbol__DOT__res(ed,res){var vec__15600 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"multiples","multiples",4102754261),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"occurrence","occurrence",2701778243)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__15600,0,null);var ret = cljs.core.nth.call(null,vec__15600,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{var itemsByFile_15692 = lt.plugins.cljrefactor.usages.items__GT_view.call(null,lt.plugins.cljrefactor.usages.usages__GT_items.call(null,new cljs.core.Keyword(null,"occurrence","occurrence",2701778243).cljs$core$IFn$_invoke$arity$1(ret)));var pos_15693 = new cljs.core.Keyword(null,"pos","pos",1014015430).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret));lt.plugins.cljrefactor.usages.replace_in_editors_BANG_.call(null,itemsByFile_15692,new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret));
lt.objs.editor.focus.call(null,ed);
lt.objs.editor.move_cursor.call(null,ed,pos_15693);
lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.result","editor.result",4030217008),"Renamed ok !",pos_15693);
}
return lt.objs.notifos.done_working.call(null,"Rename completed");
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","rename-symbol.res","lt.plugins.cljrefactor.usages/rename-symbol.res",1052900768),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__rename_symbol__DOT__res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.rename-symbol","editor.eval.clj.result.refactor.rename-symbol",3323570816),null], null), null));
lt.plugins.cljrefactor.usages.__BEH__rename_symbol__DOT__start = (function __BEH__rename_symbol__DOT__start(ed,old,new$){if(cljs.core.seq.call(null,clojure.string.trim.call(null,new$)))
{var ns = (function (){var or__6498__auto__ = new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));
}
})();var pos = lt.objs.editor.__GT_cursor.call(null,ed);lt.objs.notifos.set_msg_BANG_.call(null,[cljs.core.str("Replacing: "),cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(old),cljs.core.str(" with "),cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(new$)].join(''));
return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.usages.find_symbol_op.call(null,ed,old),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.rename-symbol","refactor.rename-symbol",1269092045),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true,new cljs.core.Keyword(null,"old","old",1014014361),old,new cljs.core.Keyword(null,"new","new",1014013202),new$,new cljs.core.Keyword(null,"pos","pos",1014015430),pos], null));
} else
{lt.objs.console.log.call(null,"Can't rename to empty !");
return lt.objs.editor.focus.call(null,ed);
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","rename-symbol.start","lt.plugins.cljrefactor.usages/rename-symbol.start",1349763874),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__rename_symbol__DOT__start,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.rename-symbol","refactor.rename-symbol",1269092045),null], null), null));
lt.plugins.cljrefactor.usages.__BEH__rename_symbol__DOT__prompt = (function __BEH__rename_symbol__DOT__prompt(ed,token){var ns = (function (){var or__6498__auto__ = new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{return new cljs.core.Keyword(null,"path","path",1017337751).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed)));
}
})();var sym = new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(token);return lt.plugins.cljrefactor.input_prompt.make.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"ed","ed",1013907473),ed,new cljs.core.Keyword(null,"behavior","behavior",2524816836),new cljs.core.Keyword(null,"refactor.rename-symbol","refactor.rename-symbol",1269092045),new cljs.core.Keyword(null,"init-value","init-value",4481282534),sym,new cljs.core.Keyword(null,"pos","pos",1014015430),lt.objs.editor.__GT_cursor.call(null,ed)], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","rename-symbol.prompt","lt.plugins.cljrefactor.usages/rename-symbol.prompt",2907883698),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.usages.__BEH__rename_symbol__DOT__prompt,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.rename-symbol.prompt","refactor.rename-symbol.prompt",1828694729),null], null), null));
lt.object.object_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","refactor-usages","lt.plugins.cljrefactor.usages/refactor-usages",808406084),new cljs.core.Keyword(null,"tags","tags",1017456523),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.usages","refactor.usages",1885039760),null], null), null),new cljs.core.Keyword(null,"name","name",1017277949),"Find usages",new cljs.core.Keyword(null,"init","init",1017141378),(function (this$){return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.search-results","div.search-results",980356928),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ul.res","ul.res",4464738363)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"div.searcher","div.searcher",3267271812),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"p","p",1013904354),crate.binding.bound.call(null,this$,lt.plugins.cljrefactor.usages.search_for)], null)], null)], null);
}));
lt.plugins.cljrefactor.usages.refactor_usages = lt.object.create.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","refactor-usages","lt.plugins.cljrefactor.usages/refactor-usages",808406084));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.usages","find-symbol-next","lt.plugins.cljrefactor.usages/find-symbol-next",2278373977),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Find usages - move next",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","move-next!","lt.plugins.cljrefactor.usages/move-next!",3581564695));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.usages","find-symbol-prev","lt.plugins.cljrefactor.usages/find-symbol-prev",2278183833),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Find usages - move previous",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","move-prev!","lt.plugins.cljrefactor.usages/move-prev!",3579340247));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.usages","find-symbol-open-active","lt.plugins.cljrefactor.usages/find-symbol-open-active",761837133),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Find usages - open selected",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){return lt.object.raise.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.Keyword("lt.plugins.cljrefactor.usages","open-active!","lt.plugins.cljrefactor.usages/open-active!",2657621949));
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.usages","find-symbol","lt.plugins.cljrefactor.usages/find-symbol",1461043889),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Find usages",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;var temp__4092__auto____$1 = lt.plugins.clojure.find_symbol_at_cursor.call(null,ed);if(cljs.core.truth_(temp__4092__auto____$1))
{var token = temp__4092__auto____$1;return lt.object.raise.call(null,lt.plugins.cljrefactor.usages.refactor_usages,new cljs.core.Keyword(null,"refactor.find-symbol","refactor.find-symbol",3383223538),ed,token);
} else
{return null;
}
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.usages","replace-symbol","lt.plugins.cljrefactor.usages/replace-symbol",3870887768),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Rename symbol",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;var temp__4092__auto____$1 = lt.plugins.clojure.find_symbol_at_cursor.call(null,ed);if(cljs.core.truth_(temp__4092__auto____$1))
{var token = temp__4092__auto____$1;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.rename-symbol.prompt","refactor.rename-symbol.prompt",1828694729),token);
} else
{return null;
}
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor')) {
goog.provide('lt.plugins.cljrefactor');
goog.require('cljs.core');
goog.require('lt.plugins.cljrefactor.pprint');
goog.require('lt.objs.files');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.plugins.cljrefactor.pprint');
goog.require('lt.plugins.cljrefactor.namespace');
goog.require('lt.plugins.cljrefactor.namespace');
goog.require('lt.plugins.cljrefactor.selector');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('clojure.string');
goog.require('lt.objs.editor');
goog.require('lt.plugins.cljrefactor.selector');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.console');
goog.require('lt.objs.editor');
goog.require('lt.objs.console');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.__BEH__clj_refactor__DOT__maybe_project = (function __BEH__clj_refactor__DOT__maybe_project(ed){if((cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"name","name",1017277949).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed))),"project.clj")) && (cljs.core.not.call(null,lt.object.has_tag_QMARK_.call(null,ed,new cljs.core.Keyword(null,"editor.clj.project-file","editor.clj.project-file",4785715504)))))
{return lt.object.add_tags.call(null,ed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"editor.clj.project-file","editor.clj.project-file",4785715504)], null));
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor","clj-refactor.maybe-project","lt.plugins.cljrefactor/clj-refactor.maybe-project",4351178672),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.__BEH__clj_refactor__DOT__maybe_project,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"active","active",3885920888),null], null), null),new cljs.core.Keyword(null,"description","description",3584325486),"Add tag to indicate that the file is a lein project file");
lt.plugins.cljrefactor.__BEH__ensure_connected = (function __BEH__ensure_connected(ed){return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),"(println \"ping\")",new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"no-op","no-op",1118845151),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor","ensure-connected","lt.plugins.cljrefactor/ensure-connected",4599780010),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.__BEH__ensure_connected,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.connect","refactor.connect",3351801776),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor","ping-repl","lt.plugins.cljrefactor/ping-repl",680439130),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Ensure editor connected",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.connect","refactor.connect",3351801776));
} else
{return null;
}
})], null));
lt.plugins.cljrefactor.get_symbol_token = (function get_symbol_token(ed){var temp__4092__auto__ = lt.plugins.clojure.find_symbol_at_cursor.call(null,ed);if(cljs.core.truth_(temp__4092__auto__))
{var token = temp__4092__auto__;return cljs.core.zipmap.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"symbol","symbol",4421347594),new cljs.core.Keyword(null,"alias","alias",1106807234)], null),cljs.core.reverse.call(null,clojure.string.split.call(null,new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(token),"/")));
} else
{return null;
}
});
lt.plugins.cljrefactor.add_missing_require = (function add_missing_require(ed,item){var symbol_token = lt.plugins.cljrefactor.get_symbol_token.call(null,ed);var a = (function (){var temp__4090__auto__ = new cljs.core.Keyword(null,"alias","alias",1106807234).cljs$core$IFn$_invoke$arity$1(symbol_token);if(cljs.core.truth_(temp__4090__auto__))
{var a = temp__4090__auto__;return a;
} else
{return cljs.core.last.call(null,clojure.string.split.call(null,new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item),"."));
}
})();return lt.plugins.cljrefactor.namespace.replace_ns.call(null,ed,lt.plugins.cljrefactor.pprint.pprint_ns.call(null,lt.plugins.cljrefactor.namespace.add_require.call(null,new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(lt.plugins.cljrefactor.namespace.get_ns_decl.call(null,ed)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item),new cljs.core.Keyword(null,"as","as",1013907364),a], null))));
});
lt.plugins.cljrefactor.add_missing_import = (function add_missing_import(ed,item){return lt.plugins.cljrefactor.namespace.replace_ns.call(null,ed,lt.plugins.cljrefactor.pprint.pprint_ns.call(null,lt.plugins.cljrefactor.namespace.add_import.call(null,new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(lt.plugins.cljrefactor.namespace.get_ns_decl.call(null,ed)),cljs.core._conj.call(null,cljs.core.List.EMPTY,new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item)))));
});
lt.plugins.cljrefactor.add_missing_type = (function add_missing_type(ed,item){var req = clojure.string.replace.call(null,[cljs.core.str(new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item))].join(''),/\.([^.]*)$/,"");var imp = new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item);var ns_decl = new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(lt.plugins.cljrefactor.namespace.get_ns_decl.call(null,ed));return lt.plugins.cljrefactor.namespace.replace_ns.call(null,ed,lt.plugins.cljrefactor.pprint.pprint_ns.call(null,lt.plugins.cljrefactor.namespace.add_import.call(null,lt.plugins.cljrefactor.namespace.add_require.call(null,new cljs.core.Keyword(null,"ns","ns",1013907767).cljs$core$IFn$_invoke$arity$1(lt.plugins.cljrefactor.namespace.get_ns_decl.call(null,ed)),req),cljs.core._conj.call(null,cljs.core.List.EMPTY,imp))));
});
lt.plugins.cljrefactor.__BEH__resolve_missing_selected = (function __BEH__resolve_missing_selected(ed,item){var G__8045_8059 = new cljs.core.Keyword(null,"type","type",1017479852).cljs$core$IFn$_invoke$arity$1(item);if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"type","type",1017479852),G__8045_8059))
{lt.plugins.cljrefactor.add_missing_type.call(null,ed,item);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"class","class",1108647146),G__8045_8059))
{lt.plugins.cljrefactor.add_missing_import.call(null,ed,item);
} else
{if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"ns","ns",1013907767),G__8045_8059))
{lt.plugins.cljrefactor.add_missing_require.call(null,ed,item);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{lt.objs.console.error.call(null,[cljs.core.str("Unsupported candidate: "),cljs.core.str(item)].join(''));
} else
{}
}
}
}
lt.objs.notifos.set_msg_BANG_.call(null,[cljs.core.str("Symbol: "),cljs.core.str(new cljs.core.Keyword(null,"label","label",1116631654).cljs$core$IFn$_invoke$arity$1(item)),cljs.core.str(" added to namespace declaration")].join(''));
return lt.objs.editor.focus.call(null,ed);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor","resolve-missing-selected","lt.plugins.cljrefactor/resolve-missing-selected",671061857),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.__BEH__resolve_missing_selected,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"resolve-missing.selected","resolve-missing.selected",3085476694),null], null), null));
lt.plugins.cljrefactor.resolve_missing_op = (function resolve_missing_op(sym){return lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"resolve-missing",new cljs.core.Keyword(null,"symbol","symbol",4421347594),sym], null));
});
lt.plugins.cljrefactor.parse_missing = (function parse_missing(res){var candidates = new cljs.core.Keyword(null,"candidates","candidates",3897560770).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null,new cljs.core.Keyword(null,"result","result",4374444943).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null,new cljs.core.Keyword(null,"results","results",2111450984).cljs$core$IFn$_invoke$arity$1(res)))));if(typeof candidates === 'string')
{return cljs.core.vec.call(null,cljs.core.map.call(null,((function (candidates){
return (function (p1__8046_SHARP_){return cljs.core.PersistentHashMap.fromArrays.call(null,[new cljs.core.Keyword(null,"label","label",1116631654),new cljs.core.Keyword(null,"type","type",1017479852)],[cljs.core.first.call(null,p1__8046_SHARP_),cljs.core.second.call(null,p1__8046_SHARP_)]);
});})(candidates))
,cljs.reader.read_string.call(null,candidates)));
} else
{return null;
}
});
lt.plugins.cljrefactor.__BEH__resolve_missing_res = (function __BEH__resolve_missing_res(ed,res){var vec__8048 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"candidates","candidates",3897560770)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__8048,0,null);var ret = cljs.core.nth.call(null,vec__8048,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{var temp__4090__auto__ = lt.plugins.cljrefactor.parse_missing.call(null,res);if(cljs.core.truth_(temp__4090__auto__))
{var candidates = temp__4090__auto__;if(cljs.core._EQ_.call(null,cljs.core.count.call(null,candidates),1))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"resolve-missing.selected","resolve-missing.selected",3085476694),cljs.core.first.call(null,candidates));
} else
{return lt.plugins.cljrefactor.selector.make.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"ed","ed",1013907473),ed,new cljs.core.Keyword(null,"behavior","behavior",2524816836),new cljs.core.Keyword(null,"resolve-missing.selected","resolve-missing.selected",3085476694),new cljs.core.Keyword(null,"pos","pos",1014015430),lt.objs.editor.__GT_cursor.call(null,ed),new cljs.core.Keyword(null,"items","items",1114430258),candidates], null));
}
} else
{return cljs.core.println.call(null,"Couldn't find any suggestion for symbol");
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor","resolve-missing-res","lt.plugins.cljrefactor/resolve-missing-res",935277452),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.__BEH__resolve_missing_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.resolve-missing","editor.eval.clj.result.refactor.resolve-missing",1162041406),null], null), null));
lt.plugins.cljrefactor.__BEH__resolve_missing_BANG_ = (function __BEH__resolve_missing_BANG_(ed,sym){return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),lt.plugins.cljrefactor.resolve_missing_op.call(null,sym),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.resolve-missing","refactor.resolve-missing",2492898635),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor","resolve-missing!","lt.plugins.cljrefactor/resolve-missing!",1565569160),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.__BEH__resolve_missing_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.resolve-missing!","refactor.resolve-missing!",3913057498),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor","resolve-missing","lt.plugins.cljrefactor/resolve-missing",4428370879),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Resolve missing",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;var temp__4092__auto____$1 = lt.plugins.cljrefactor.get_symbol_token.call(null,ed);if(cljs.core.truth_(temp__4092__auto____$1))
{var t = temp__4092__auto____$1;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.resolve-missing!","refactor.resolve-missing!",3913057498),new cljs.core.Keyword(null,"symbol","symbol",4421347594).cljs$core$IFn$_invoke$arity$1(t));
} else
{return null;
}
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.form-refactor')) {
goog.provide('lt.plugins.cljrefactor.form_refactor');
goog.require('cljs.core');
goog.require('lt.plugins.paredit');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.paredit');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('clojure.string');
goog.require('clojure.zip');
goog.require('lt.objs.editor.pool');
goog.require('clojure.zip');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.util');
goog.require('clojure.string');
goog.require('lt.plugins.clojure');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.plugins.clojure');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.form_refactor.top = (function top(zipnode){var n = zipnode;while(true){
if(cljs.core.not.call(null,clojure.zip.up.call(null,n)))
{return n;
} else
{{
var G__8557 = clojure.zip.up.call(null,n);
n = G__8557;
continue;
}
}
break;
}
});
lt.plugins.cljrefactor.form_refactor.if_node_QMARK_ = (function if_node_QMARK_(loc){if((cljs.core.seq.call(null,loc)) && (cljs.core.list_QMARK_.call(null,clojure.zip.node.call(null,loc))))
{return (function (s){return cljs.core.some.call(null,cljs.core.PersistentHashSet.fromArray([s], true),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"if","if",-1640528170,null),new cljs.core.Symbol(null,"if-not","if-not",1461178332,null)], null));
}).call(null,clojure.zip.node.call(null,clojure.zip.down.call(null,loc)));
} else
{return null;
}
});
lt.plugins.cljrefactor.form_refactor.swap_if_nodes = (function swap_if_nodes(loc){var move = clojure.zip.node.call(null,clojure.zip.right.call(null,clojure.zip.right.call(null,clojure.zip.down.call(null,loc))));return clojure.zip.append_child.call(null,lt.plugins.cljrefactor.form_refactor.top.call(null,clojure.zip.remove.call(null,clojure.zip.right.call(null,clojure.zip.right.call(null,clojure.zip.down.call(null,loc))))),move);
});
lt.plugins.cljrefactor.form_refactor.cycle_if = (function cycle_if(form_str){var root = lt.plugins.cljrefactor.parser.str__GT_seq_zip.call(null,form_str);var if_node = lt.plugins.cljrefactor.form_refactor.if_node_QMARK_.call(null,root);if(cljs.core.truth_(if_node))
{return lt.plugins.cljrefactor.parser.zip__GT_str.call(null,clojure.zip.replace.call(null,clojure.zip.down.call(null,lt.plugins.cljrefactor.form_refactor.swap_if_nodes.call(null,root)),((cljs.core._EQ_.call(null,if_node,new cljs.core.Symbol(null,"if","if",-1640528170,null)))?new cljs.core.Symbol(null,"if-not","if-not",1461178332,null):new cljs.core.Symbol(null,"if","if",-1640528170,null))));
} else
{return null;
}
});
lt.plugins.cljrefactor.form_refactor.cycle_col = (function cycle_col(form_str){if((cljs.core.count.call(null,form_str) > 1))
{var wrap_in = (function (a,b,n){return clojure.string.join.call(null,"",cljs.core.concat.call(null,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [a], null),cljs.core.drop.call(null,n,cljs.core.drop_last.call(null,form_str)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [b], null)));
});if(cljs.core._EQ_.call(null,cljs.core.first.call(null,form_str),"("))
{return wrap_in.call(null,"[","]",1);
} else
{if(cljs.core._EQ_.call(null,cljs.core.first.call(null,form_str),"["))
{return wrap_in.call(null,"{","}",1);
} else
{if(cljs.core._EQ_.call(null,cljs.core.first.call(null,form_str),"{"))
{return wrap_in.call(null,"#{","}",1);
} else
{if(cljs.core._EQ_.call(null,form_str.substr(0,2),"#{"))
{return wrap_in.call(null,"(",")",2);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return null;
} else
{return null;
}
}
}
}
}
} else
{return null;
}
});
lt.plugins.cljrefactor.form_refactor.find_node = (function find_node(start,candidate_str){var cur = start;while(true){
if(cljs.core._EQ_.call(null,[cljs.core.str(clojure.zip.node.call(null,cur))].join(''),candidate_str))
{return cur;
} else
{if(!(clojure.zip.end_QMARK_.call(null,cur)))
{{
var G__8558 = clojure.zip.next.call(null,cur);
cur = G__8558;
continue;
}
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return null;
} else
{return null;
}
}
}
break;
}
});
lt.plugins.cljrefactor.form_refactor.move_up = (function move_up(form_str,candidate_str){var root = lt.plugins.cljrefactor.parser.str__GT_seq_zip.call(null,form_str);var loc_QMARK_ = ((cljs.core.seq.call(null,root))?lt.plugins.cljrefactor.form_refactor.find_node.call(null,root,candidate_str):null);if(cljs.core.truth_((function (){var and__6486__auto__ = loc_QMARK_;if(cljs.core.truth_(and__6486__auto__))
{return clojure.zip.node.call(null,clojure.zip.remove.call(null,loc_QMARK_));
} else
{return and__6486__auto__;
}
})()))
{return clojure.zip.root.call(null,clojure.zip.insert_left.call(null,clojure.zip.remove.call(null,loc_QMARK_),clojure.zip.node.call(null,loc_QMARK_)));
} else
{return null;
}
});
lt.plugins.cljrefactor.form_refactor.inject_nl = (function inject_nl(form_str){var idx_a = form_str.indexOf("if (");var idx_b = form_str.indexOf("if-not (");if(cljs.core._EQ_.call(null,-1,idx_a,idx_b))
{return clojure.string.replace.call(null,form_str,/\s\(/,"\n(");
} else
{if((idx_a > idx_b))
{return [cljs.core.str(form_str.substr(0,(idx_a + 4))),cljs.core.str(inject_nl.call(null,form_str.substr((idx_a + 4))))].join('');
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return [cljs.core.str(form_str.substr(0,(idx_b + 8))),cljs.core.str(inject_nl.call(null,form_str.substr((idx_b + 8))))].join('');
} else
{return null;
}
}
}
});
lt.plugins.cljrefactor.form_refactor.format_form = (function format_form(form_str){return lt.plugins.cljrefactor.form_refactor.inject_nl.call(null,form_str);
});
/**
* @param {...*} var_args
*/
lt.plugins.cljrefactor.form_refactor.replace_cmd = (function() { 
var replace_cmd__delegate = function (ed,replace_fn,p__8538){var map__8543 = p__8538;var map__8543__$1 = ((cljs.core.seq_QMARK_.call(null,map__8543))?cljs.core.apply.call(null,cljs.core.hash_map,map__8543):map__8543);var fmt = cljs.core.get.call(null,map__8543__$1,new cljs.core.Keyword(null,"fmt","fmt",1014005759));var map__8544 = lt.plugins.cljrefactor.util.get_form.call(null,ed);var map__8544__$1 = ((cljs.core.seq_QMARK_.call(null,map__8544))?cljs.core.apply.call(null,cljs.core.hash_map,map__8544):map__8544);var form_str = cljs.core.get.call(null,map__8544__$1,new cljs.core.Keyword(null,"form-str","form-str",1486434586));var end = cljs.core.get.call(null,map__8544__$1,new cljs.core.Keyword(null,"end","end",1014004813));var start = cljs.core.get.call(null,map__8544__$1,new cljs.core.Keyword(null,"start","start",1123661780));if(cljs.core.truth_(form_str))
{var temp__4092__auto__ = (function (){var G__8545 = form_str;var G__8545__$1 = (((G__8545 == null))?null:replace_fn.call(null,G__8545));var G__8545__$2 = (((G__8545__$1 == null))?null:((function (G__8545,G__8545__$1,map__8544,map__8544__$1,form_str,end,start,map__8543,map__8543__$1,fmt){
return (function (p1__8536_SHARP_){if(cljs.core.truth_(fmt))
{return lt.plugins.cljrefactor.form_refactor.format_form.call(null,p1__8536_SHARP_);
} else
{return p1__8536_SHARP_;
}
});})(G__8545,G__8545__$1,map__8544,map__8544__$1,form_str,end,start,map__8543,map__8543__$1,fmt))
.call(null,G__8545__$1));return G__8545__$2;
})();if(cljs.core.truth_(temp__4092__auto__))
{var res = temp__4092__auto__;lt.objs.editor.replace.call(null,ed,start,end,res);
var p = ((lt.plugins.cljrefactor.util.set_form_QMARK_.call(null,res))?cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),((function (res,temp__4092__auto__,map__8544,map__8544__$1,form_str,end,start,map__8543,map__8543__$1,fmt){
return (function (p1__8537_SHARP_){return (p1__8537_SHARP_ + 2);
});})(res,temp__4092__auto__,map__8544,map__8544__$1,form_str,end,start,map__8543,map__8543__$1,fmt))
):cljs.core.update_in.call(null,start,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"ch","ch",1013907415)], null),cljs.core.inc));var map__8546 = lt.plugins.cljrefactor.util.get_form.call(null,ed,p);var map__8546__$1 = ((cljs.core.seq_QMARK_.call(null,map__8546))?cljs.core.apply.call(null,cljs.core.hash_map,map__8546):map__8546);var s1 = cljs.core.get.call(null,map__8546__$1,new cljs.core.Keyword(null,"start","start",1123661780));var s2 = cljs.core.get.call(null,map__8546__$1,new cljs.core.Keyword(null,"end","end",1014004813));lt.objs.editor.set_selection.call(null,ed,s1,s2);
lt.objs.editor.indent_selection.call(null,ed,"smart");
return lt.objs.editor.move_cursor.call(null,ed,p);
} else
{return null;
}
} else
{return null;
}
};
var replace_cmd = function (ed,replace_fn,var_args){
var p__8538 = null;if (arguments.length > 2) {
  p__8538 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2),0);} 
return replace_cmd__delegate.call(this,ed,replace_fn,p__8538);};
replace_cmd.cljs$lang$maxFixedArity = 2;
replace_cmd.cljs$lang$applyTo = (function (arglist__8559){
var ed = cljs.core.first(arglist__8559);
arglist__8559 = cljs.core.next(arglist__8559);
var replace_fn = cljs.core.first(arglist__8559);
var p__8538 = cljs.core.rest(arglist__8559);
return replace_cmd__delegate(ed,replace_fn,p__8538);
});
replace_cmd.cljs$core$IFn$_invoke$arity$variadic = replace_cmd__delegate;
return replace_cmd;
})()
;
lt.plugins.cljrefactor.form_refactor.__BEH__cycle_if_BANG_ = (function __BEH__cycle_if_BANG_(ed){return lt.plugins.cljrefactor.form_refactor.replace_cmd.call(null,ed,lt.plugins.cljrefactor.form_refactor.cycle_if,new cljs.core.Keyword(null,"fmt","fmt",1014005759),true);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.form-refactor","cycle-if!","lt.plugins.cljrefactor.form-refactor/cycle-if!",3230909094),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.form_refactor.__BEH__cycle_if_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.cycle-if!","refactor.cycle-if!",4777259779),null], null), null));
lt.plugins.cljrefactor.form_refactor.__BEH__cycle_col_BANG_ = (function __BEH__cycle_col_BANG_(ed){return lt.plugins.cljrefactor.form_refactor.replace_cmd.call(null,ed,lt.plugins.cljrefactor.form_refactor.cycle_col);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.form-refactor","cycle-col!","lt.plugins.cljrefactor.form-refactor/cycle-col!",3600489529),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.form_refactor.__BEH__cycle_col_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.cycle-col!","refactor.cycle-col!",1713641158),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.form-refactor","cycle-if","lt.plugins.cljrefactor.form-refactor/cycle-if",2040264829),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Cycle if",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.cycle-if!","refactor.cycle-if!",4777259779));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.form-refactor","cycle-col","lt.plugins.cljrefactor.form-refactor/cycle-col",3230922602),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Cycle col",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.cycle-col!","refactor.cycle-col!",1713641158));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.format')) {
goog.provide('lt.plugins.cljrefactor.format');
goog.require('cljs.core');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.format.__BEH__format_res = (function __BEH__format_res(ed,res){var vec__8616 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"formatted-code","formatted-code",3575261136)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__8616,0,null);var ret = cljs.core.nth.call(null,vec__8616,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{lt.objs.editor.replace.call(null,ed,new cljs.core.Keyword(null,"from","from",1017056028).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret))),new cljs.core.Keyword(null,"to","to",1013907949).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret))),new cljs.core.Keyword(null,"formatted-code","formatted-code",3575261136).cljs$core$IFn$_invoke$arity$1(ret));
lt.objs.editor.move_cursor.call(null,ed,new cljs.core.Keyword(null,"from","from",1017056028).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret))));
}
return lt.objs.notifos.done_working.call(null);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.format","format-res","lt.plugins.cljrefactor.format/format-res",3318811863),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.format.__BEH__format_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.format-code","editor.eval.clj.result.refactor.format-code",3438318396),null], null), null));
lt.plugins.cljrefactor.format.__BEH__format_code_BANG_ = (function __BEH__format_code_BANG_(ed,code,bounds){var op = lt.plugins.cljrefactor.middleware.create_op.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"op","op",1013907795),"format-code",new cljs.core.Keyword(null,"code","code",1016963423),code], null));return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),op,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.format-code","refactor.format-code",933390025),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true,new cljs.core.Keyword(null,"bounds","bounds",3925666343),bounds], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.format","format-code!","lt.plugins.cljrefactor.format/format-code!",3799105891),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.format.__BEH__format_code_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.format-code!","refactor.format-code!",2812930844),null], null), null));
lt.plugins.cljrefactor.format.__BEH__start_format_code = (function __BEH__start_format_code(ed){if(cljs.core.truth_(lt.objs.editor.selection_QMARK_.call(null,ed)))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.format-code!","refactor.format-code!",2812930844),lt.objs.editor.selection.call(null,ed),lt.objs.editor.selection_bounds.call(null,ed));
} else
{var temp__4092__auto__ = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed);if(cljs.core.truth_(temp__4092__auto__))
{var form = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.format-code!","refactor.format-code!",2812930844),new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"from","from",1017056028),new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"to","to",1013907949),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form)], null));
} else
{return null;
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.format","start-format-code","lt.plugins.cljrefactor.format/start-format-code",3061667833),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.format.__BEH__start_format_code,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.start-format-code","refactor.start-format-code",2735106782),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.format","format-code","lt.plugins.cljrefactor.format/format-code",4389602576),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Format code",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.start-format-code","refactor.start-format-code",2735106782));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.definition')) {
goog.provide('lt.plugins.cljrefactor.definition');
goog.require('cljs.core');
goog.require('lt.util.cljs');
goog.require('lt.objs.files');
goog.require('lt.plugins.paredit');
goog.require('lt.plugins.paredit');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.util.cljs');
goog.require('lt.objs.command');
goog.require('lt.objs.files');
goog.require('lt.objs.eval');
goog.require('lt.objs.clients');
goog.require('lt.objs.eval');
goog.require('lt.plugins.clojure');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.plugins.clojure');
goog.require('lt.objs.clients');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.definition.get_definition_in_hidden_ed = (function get_definition_in_hidden_ed(file,line){var content = new cljs.core.Keyword(null,"content","content",1965434859).cljs$core$IFn$_invoke$arity$1(lt.objs.files.open_sync.call(null,file));var ed = lt.objs.editor.pool.create.call(null,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"mime","mime",1017255846),"text/x-clojure",new cljs.core.Keyword(null,"content","content",1965434859),content], null));var vec__8450 = lt.plugins.paredit.form_boundary.call(null,ed,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"line","line",1017226086),(line - 1),new cljs.core.Keyword(null,"ch","ch",1013907415),(lt.objs.editor.line.call(null,ed,(line - 1)).indexOf("(") + 1)], null));var start = cljs.core.nth.call(null,vec__8450,0,null);var end = cljs.core.nth.call(null,vec__8450,1,null);var sel = (cljs.core.truth_((function (){var and__6486__auto__ = start;if(cljs.core.truth_(and__6486__auto__))
{return end;
} else
{return and__6486__auto__;
}
})())?(function (){lt.objs.editor.set_selection.call(null,ed,start,end);
return lt.objs.editor.selection.call(null,ed);
})():null);lt.object.destroy_BANG_.call(null,ed);
return sel;
});
lt.plugins.cljrefactor.definition.__BEH__show_definition_at_cursor = (function __BEH__show_definition_at_cursor(ed){var token = lt.plugins.clojure.find_symbol_at_cursor.call(null,ed);if(cljs.core.truth_(token))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.show-definition!","editor.show-definition!",4534037553),token);
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.definition","show-definition-at-cursor","lt.plugins.cljrefactor.definition/show-definition-at-cursor",4702447362),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.definition.__BEH__show_definition_at_cursor,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.show-definition-at-cursor!","editor.show-definition-at-cursor!",3982167662),null], null), null));
lt.plugins.cljrefactor.definition.__BEH__start_show_definition = (function __BEH__start_show_definition(ed,token){var info = new cljs.core.Keyword(null,"info","info",1017141280).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null,ed));var command = lt.util.cljs.__GT_dottedkw.call(null,new cljs.core.Keyword(null,"editor","editor",4001043679),lt.plugins.clojure.mime__GT_type.call(null,new cljs.core.Keyword(null,"mime","mime",1017255846).cljs$core$IFn$_invoke$arity$1(info)),new cljs.core.Keyword(null,"doc","doc",1014003882));var info__$1 = cljs.core.assoc.call(null,info,new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"show-def","show-def",673906855),new cljs.core.Keyword(null,"sym","sym",1014018617),new cljs.core.Keyword(null,"string","string",4416885635).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,"loc","loc",1014011570),new cljs.core.Keyword(null,"loc","loc",1014011570).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,"print-length","print-length",3960797560),lt.object.raise_reduce.call(null,ed,new cljs.core.Keyword(null,"clojure.print-length+","clojure.print-length+",4366367949),null));return lt.objs.clients.send.call(null,lt.objs.eval.get_client_BANG_.call(null,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"command","command",1964298941),command,new cljs.core.Keyword(null,"info","info",1017141280),info__$1,new cljs.core.Keyword(null,"origin","origin",4300251800),ed,new cljs.core.Keyword(null,"create","create",3956577390),lt.plugins.clojure.try_connect], null)),command,info__$1,new cljs.core.Keyword(null,"only","only",1017320222),ed);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.definition","start-show-definition","lt.plugins.cljrefactor.definition/start-show-definition",3909262168),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.definition.__BEH__start_show_definition,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.show-definition!","editor.show-definition!",4534037553),null], null), null));
lt.plugins.cljrefactor.definition.__BEH__finish_show_definition = (function __BEH__finish_show_definition(ed,p__8451){var map__8453 = p__8451;var map__8453__$1 = ((cljs.core.seq_QMARK_.call(null,map__8453))?cljs.core.apply.call(null,cljs.core.hash_map,map__8453):map__8453);var res = map__8453__$1;var line = cljs.core.get.call(null,map__8453__$1,new cljs.core.Keyword(null,"line","line",1017226086));var file = cljs.core.get.call(null,map__8453__$1,new cljs.core.Keyword(null,"file","file",1017047278));if(cljs.core._EQ_.call(null,new cljs.core.Keyword(null,"show-def","show-def",673906855),new cljs.core.Keyword(null,"result-type","result-type",4725630556).cljs$core$IFn$_invoke$arity$1(res)))
{if(cljs.core.truth_((function (){var and__6486__auto__ = res;if(cljs.core.truth_(and__6486__auto__))
{var and__6486__auto____$1 = file;if(cljs.core.truth_(and__6486__auto____$1))
{return line;
} else
{return and__6486__auto____$1;
}
} else
{return and__6486__auto__;
}
})()))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.result.underline","editor.result.underline",541343758),lt.plugins.cljrefactor.definition.get_definition_in_hidden_ed.call(null,file,line),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"loc","loc",1014011570).cljs$core$IFn$_invoke$arity$1(res))], null));
} else
{return lt.objs.notifos.set_msg_BANG_.call(null,"Definition not found",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"class","class",1108647146),"error"], null));
}
} else
{return null;
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.definition","finish-show-definition","lt.plugins.cljrefactor.definition/finish-show-definition",3232815397),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.definition.__BEH__finish_show_definition,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"editor.clj.doc","editor.clj.doc",4087602908),null,new cljs.core.Keyword(null,"editor.cljs.doc","editor.cljs.doc",1871386511),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.definition","show-definition","lt.plugins.cljrefactor.definition/show-definition",550559715),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Show definition",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.show-definition-at-cursor!","editor.show-definition-at-cursor!",3982167662));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.threading')) {
goog.provide('lt.plugins.cljrefactor.threading');
goog.require('cljs.core');
goog.require('rewrite_clj.zip');
goog.require('lt.plugins.cljrefactor.util');
goog.require('rewrite_clj.paredit');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('clojure.string');
goog.require('rewrite_clj.zip.utils');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip.utils');
goog.require('lt.objs.editor.pool');
goog.require('rewrite_clj.zip.whitespace');
goog.require('clojure.zip');
goog.require('rewrite_clj.zip');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.util');
goog.require('rewrite_clj.node');
goog.require('clojure.string');
goog.require('lt.plugins.cljrefactor.parser');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('cljs.reader');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('cljs.reader');
goog.require('lt.objs.editor.pool');
goog.require('rewrite_clj.paredit');
goog.require('lt.objs.command');
goog.require('rewrite_clj.node');
goog.require('rewrite_clj.zip.whitespace');
lt.plugins.cljrefactor.threading.unwrap_if_list_of_one = (function unwrap_if_list_of_one(zloc){if(cljs.core.truth_((function (){var and__6486__auto__ = (function (){var G__14850 = zloc;var G__14850__$1 = (((G__14850 == null))?null:rewrite_clj.zip.down.call(null,G__14850));var G__14850__$2 = (((G__14850__$1 == null))?null:rewrite_clj.zip.leftmost_QMARK_.call(null,G__14850__$1));return G__14850__$2;
})();if(cljs.core.truth_(and__6486__auto__))
{var G__14851 = zloc;var G__14851__$1 = (((G__14851 == null))?null:rewrite_clj.zip.down.call(null,G__14851));var G__14851__$2 = (((G__14851__$1 == null))?null:rewrite_clj.zip.rightmost_QMARK_.call(null,G__14851__$1));return G__14851__$2;
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.paredit.splice.call(null,zloc);
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.maybe_wrap_in_threading = (function maybe_wrap_in_threading(zloc,t){if(!(cljs.core._EQ_.call(null,[cljs.core.str(t)].join(''),(function (){var G__14853 = zloc;var G__14853__$1 = (((G__14853 == null))?null:rewrite_clj.zip.down.call(null,G__14853));var G__14853__$2 = (((G__14853__$1 == null))?null:rewrite_clj.zip.string.call(null,G__14853__$1));return G__14853__$2;
})())))
{return clojure.zip.up.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.paredit.wrap_around.call(null,zloc,new cljs.core.Keyword(null,"list","list",1017226256)),rewrite_clj.node.token_node.call(null,t)));
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.maybe_wrap_in_list = (function maybe_wrap_in_list(zloc){if(cljs.core.not.call(null,rewrite_clj.zip.list_QMARK_.call(null,zloc)))
{return clojure.zip.up.call(null,rewrite_clj.paredit.wrap_around.call(null,zloc,new cljs.core.Keyword(null,"list","list",1017226256)));
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.maybe_insert_promotee_lb = (function maybe_insert_promotee_lb(zloc,promotee){if(cljs.core.truth_((function (){var or__6498__auto__ = (function (){var G__14864 = promotee;var G__14864__$1 = (((G__14864 == null))?null:clojure.zip.right.call(null,G__14864));var G__14864__$2 = (((G__14864__$1 == null))?null:rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,G__14864__$1));return G__14864__$2;
})();if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{var and__6486__auto__ = (function (){var or__6498__auto____$1 = (function (){var G__14869 = promotee;var G__14869__$1 = (((G__14869 == null))?null:clojure.zip.left.call(null,G__14869));var G__14869__$2 = (((G__14869__$1 == null))?null:rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,G__14869__$1));return G__14869__$2;
})();if(cljs.core.truth_(or__6498__auto____$1))
{return or__6498__auto____$1;
} else
{var G__14870 = promotee;var G__14870__$1 = (((G__14870 == null))?null:clojure.zip.left.call(null,G__14870));var G__14870__$2 = (((G__14870__$1 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14870__$1));return G__14870__$2;
}
})();if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,(function (){var G__14871 = promotee;var G__14871__$1 = (((G__14871 == null))?null:clojure.zip.right.call(null,G__14871));var G__14871__$2 = (((G__14871__$1 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14871__$1));return G__14871__$2;
})());
} else
{return and__6486__auto__;
}
}
})()))
{return rewrite_clj.zip.whitespace.prepend_newline.call(null,zloc);
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.maybe_insert_promotee_comment = (function maybe_insert_promotee_comment(zloc,promotee){if(cljs.core.truth_((function (){var G__14873 = promotee;var G__14873__$1 = (((G__14873 == null))?null:clojure.zip.right.call(null,G__14873));var G__14873__$2 = (((G__14873__$1 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14873__$1));return G__14873__$2;
})()))
{return clojure.zip.insert_left.call(null,zloc,clojure.zip.node.call(null,clojure.zip.right.call(null,promotee)));
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.do_thread_first_one = (function do_thread_first_one(zloc){var promotee = (function (){var G__14875 = zloc;var G__14875__$1 = (((G__14875 == null))?null:rewrite_clj.zip.down.call(null,G__14875));var G__14875__$2 = (((G__14875__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14875__$1));var G__14875__$3 = (((G__14875__$2 == null))?null:rewrite_clj.zip.down.call(null,G__14875__$2));var G__14875__$4 = (((G__14875__$3 == null))?null:rewrite_clj.zip.right.call(null,G__14875__$3));var G__14875__$5 = (((G__14875__$4 == null))?null:rewrite_clj.zip.utils.remove_left_while.call(null,G__14875__$4,rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_));var G__14875__$6 = (((G__14875__$5 == null))?null:rewrite_clj.zip.utils.remove_right_while.call(null,G__14875__$5,rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_));return G__14875__$6;
})();return clojure.zip.up.call(null,lt.plugins.cljrefactor.threading.unwrap_if_list_of_one.call(null,lt.plugins.cljrefactor.threading.maybe_insert_promotee_comment.call(null,lt.plugins.cljrefactor.threading.maybe_insert_promotee_lb.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.zip.utils.remove_and_move_up.call(null,rewrite_clj.zip.whitespace.prepend_space.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,promotee,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_))),rewrite_clj.zip.node.call(null,promotee)),promotee),promotee)));
});
lt.plugins.cljrefactor.threading.do_thread_last_one = (function do_thread_last_one(zloc){var promotee = (function (){var G__14877 = zloc;var G__14877__$1 = (((G__14877 == null))?null:rewrite_clj.zip.down.call(null,G__14877));var G__14877__$2 = (((G__14877__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14877__$1));var G__14877__$3 = (((G__14877__$2 == null))?null:rewrite_clj.zip.down.call(null,G__14877__$2));var G__14877__$4 = (((G__14877__$3 == null))?null:rewrite_clj.zip.rightmost.call(null,G__14877__$3));var G__14877__$5 = (((G__14877__$4 == null))?null:rewrite_clj.zip.utils.remove_left_while.call(null,G__14877__$4,rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_));var G__14877__$6 = (((G__14877__$5 == null))?null:rewrite_clj.zip.utils.remove_right_while.call(null,G__14877__$5,rewrite_clj.zip.whitespace.whitespace_QMARK_));return G__14877__$6;
})();return clojure.zip.up.call(null,lt.plugins.cljrefactor.threading.unwrap_if_list_of_one.call(null,lt.plugins.cljrefactor.threading.maybe_insert_promotee_comment.call(null,lt.plugins.cljrefactor.threading.maybe_insert_promotee_lb.call(null,rewrite_clj.zip.insert_left.call(null,rewrite_clj.zip.utils.remove_and_move_up.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,promotee,rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_),rewrite_clj.zip.whitespace.whitespace_QMARK_)),rewrite_clj.zip.node.call(null,promotee)),promotee),promotee)));
});
lt.plugins.cljrefactor.threading.threading_node_QMARK_ = (function threading_node_QMARK_(zloc){return cljs.core.some.call(null,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, ["some->",null,"->>",null,"->",null,"some->>",null], null), null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__14879 = zloc;var G__14879__$1 = (((G__14879 == null))?null:rewrite_clj.zip.string.call(null,G__14879));return G__14879__$1;
})()], null));
});
lt.plugins.cljrefactor.threading.threadable_QMARK_ = (function threadable_QMARK_(zloc){var and__6486__auto__ = (function (){var G__14884 = zloc;var G__14884__$1 = (((G__14884 == null))?null:rewrite_clj.zip.down.call(null,G__14884));var G__14884__$2 = (((G__14884__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14884__$1));var G__14884__$3 = (((G__14884__$2 == null))?null:rewrite_clj.zip.list_QMARK_.call(null,G__14884__$2));return G__14884__$3;
})();if(cljs.core.truth_(and__6486__auto__))
{var G__14885 = zloc;var G__14885__$1 = (((G__14885 == null))?null:rewrite_clj.zip.down.call(null,G__14885));var G__14885__$2 = (((G__14885__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14885__$1));var G__14885__$3 = (((G__14885__$2 == null))?null:rewrite_clj.zip.down.call(null,G__14885__$2));var G__14885__$4 = (((G__14885__$3 == null))?null:rewrite_clj.zip.right.call(null,G__14885__$3));return G__14885__$4;
} else
{return and__6486__auto__;
}
});
lt.plugins.cljrefactor.threading.unwindable_QMARK_ = (function unwindable_QMARK_(zloc){var and__6486__auto__ = (function (){var G__14890 = zloc;var G__14890__$1 = (((G__14890 == null))?null:rewrite_clj.zip.down.call(null,G__14890));var G__14890__$2 = (((G__14890__$1 == null))?null:lt.plugins.cljrefactor.threading.threading_node_QMARK_.call(null,G__14890__$1));return G__14890__$2;
})();if(cljs.core.truth_(and__6486__auto__))
{var G__14891 = zloc;var G__14891__$1 = (((G__14891 == null))?null:rewrite_clj.zip.down.call(null,G__14891));var G__14891__$2 = (((G__14891__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14891__$1));var G__14891__$3 = (((G__14891__$2 == null))?null:rewrite_clj.zip.right.call(null,G__14891__$2));return G__14891__$3;
} else
{return and__6486__auto__;
}
});
lt.plugins.cljrefactor.threading.maybe_insert_demotee_comment = (function maybe_insert_demotee_comment(zloc,demotee){if(cljs.core.truth_((function (){var G__14893 = demotee;var G__14893__$1 = (((G__14893 == null))?null:clojure.zip.right.call(null,G__14893));var G__14893__$2 = (((G__14893__$1 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14893__$1));return G__14893__$2;
})()))
{return rewrite_clj.zip.insert_right.call(null,zloc,clojure.zip.node.call(null,clojure.zip.right.call(null,demotee)));
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.maybe_insert_demotee_lb = (function maybe_insert_demotee_lb(zloc,demotee){if(cljs.core.truth_((function (){var and__6486__auto__ = (function (){var or__6498__auto__ = (function (){var G__14905 = demotee;var G__14905__$1 = (((G__14905 == null))?null:clojure.zip.right.call(null,G__14905));var G__14905__$2 = (((G__14905__$1 == null))?null:rewrite_clj.zip.whitespace.linebreak_QMARK_.call(null,G__14905__$1));return G__14905__$2;
})();if(cljs.core.truth_(or__6498__auto__))
{return or__6498__auto__;
} else
{var G__14906 = demotee;var G__14906__$1 = (((G__14906 == null))?null:clojure.zip.right.call(null,G__14906));var G__14906__$2 = (((G__14906__$1 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14906__$1));return G__14906__$2;
}
})();if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,(function (){var G__14907 = zloc;var G__14907__$1 = (((G__14907 == null))?null:rewrite_clj.zip.utils.remove_left_while.call(null,G__14907,rewrite_clj.zip.whitespace.whitespace_QMARK_));var G__14907__$2 = (((G__14907__$1 == null))?null:clojure.zip.left.call(null,G__14907__$1));var G__14907__$3 = (((G__14907__$2 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14907__$2));return G__14907__$3;
})());
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.zip.whitespace.append_newline.call(null,zloc);
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.maybe_unwrap_threading = (function maybe_unwrap_threading(zloc){if(cljs.core.truth_((function (){var and__6486__auto__ = lt.plugins.cljrefactor.threading.threading_node_QMARK_.call(null,(function (){var G__14911 = zloc;var G__14911__$1 = (((G__14911 == null))?null:rewrite_clj.zip.down.call(null,G__14911));return G__14911__$1;
})());if(cljs.core.truth_(and__6486__auto__))
{return cljs.core.not.call(null,lt.plugins.cljrefactor.threading.unwindable_QMARK_.call(null,zloc));
} else
{return and__6486__auto__;
}
})()))
{return rewrite_clj.zip.splice.call(null,rewrite_clj.zip.utils.remove_and_move_up.call(null,rewrite_clj.zip.down.call(null,zloc)));
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.do_unwind_thread_first_one = (function do_unwind_thread_first_one(zloc){var demotee = (function (){var G__14915 = zloc;var G__14915__$1 = (((G__14915 == null))?null:rewrite_clj.zip.down.call(null,G__14915));var G__14915__$2 = (((G__14915__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14915__$1));var G__14915__$3 = (((G__14915__$2 == null))?null:rewrite_clj.zip.utils.remove_right_while.call(null,G__14915__$2,rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_));return G__14915__$3;
})();return lt.plugins.cljrefactor.threading.maybe_unwrap_threading.call(null,clojure.zip.up.call(null,clojure.zip.up.call(null,lt.plugins.cljrefactor.threading.maybe_insert_demotee_lb.call(null,rewrite_clj.zip.whitespace.skip_whitespace.call(null,rewrite_clj.zip.insert_right.call(null,lt.plugins.cljrefactor.threading.maybe_insert_demotee_comment.call(null,((function (demotee){
return (function (p1__14912_SHARP_){if(cljs.core.truth_((function (){var G__14916 = p1__14912_SHARP_;var G__14916__$1 = (((G__14916 == null))?null:clojure.zip.right.call(null,G__14916));var G__14916__$2 = (((G__14916__$1 == null))?null:rewrite_clj.zip.whitespace.comment_QMARK_.call(null,G__14916__$1));return G__14916__$2;
})()))
{return clojure.zip.right.call(null,p1__14912_SHARP_);
} else
{return p1__14912_SHARP_;
}
});})(demotee))
.call(null,rewrite_clj.zip.utils.remove_right_while.call(null,rewrite_clj.zip.down.call(null,lt.plugins.cljrefactor.threading.maybe_wrap_in_list.call(null,rewrite_clj.zip.utils.remove_left.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,rewrite_clj.zip.right.call(null,demotee),rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_)))),rewrite_clj.zip.whitespace.whitespace_QMARK_)),demotee),clojure.zip.node.call(null,demotee))),demotee))));
});
lt.plugins.cljrefactor.threading.do_unwind_thread_last_one = (function do_unwind_thread_last_one(zloc){var demotee = (function (){var G__14918 = zloc;var G__14918__$1 = (((G__14918 == null))?null:rewrite_clj.zip.down.call(null,G__14918));var G__14918__$2 = (((G__14918__$1 == null))?null:rewrite_clj.zip.right.call(null,G__14918__$1));var G__14918__$3 = (((G__14918__$2 == null))?null:rewrite_clj.zip.utils.remove_right_while.call(null,G__14918__$2,rewrite_clj.zip.whitespace.whitespace_not_linebreak_QMARK_));return G__14918__$3;
})();return lt.plugins.cljrefactor.threading.maybe_unwrap_threading.call(null,clojure.zip.up.call(null,clojure.zip.up.call(null,lt.plugins.cljrefactor.threading.maybe_insert_demotee_lb.call(null,rewrite_clj.zip.insert_right.call(null,lt.plugins.cljrefactor.threading.maybe_insert_demotee_comment.call(null,rewrite_clj.zip.whitespace.prepend_space.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,clojure.zip.rightmost.call(null,clojure.zip.down.call(null,lt.plugins.cljrefactor.threading.maybe_wrap_in_list.call(null,rewrite_clj.zip.utils.remove_left.call(null,rewrite_clj.zip.utils.remove_left_while.call(null,rewrite_clj.zip.right.call(null,demotee),rewrite_clj.zip.whitespace.whitespace_or_comment_QMARK_))))),rewrite_clj.zip.whitespace.whitespace_QMARK_)),demotee),clojure.zip.node.call(null,demotee)),demotee))));
});
lt.plugins.cljrefactor.threading.do_thread_first_fully = (function do_thread_first_fully(zloc){while(true){
if(cljs.core.not.call(null,lt.plugins.cljrefactor.threading.threadable_QMARK_.call(null,zloc)))
{return zloc;
} else
{{
var G__14943 = lt.plugins.cljrefactor.threading.do_thread_first_one.call(null,zloc);
zloc = G__14943;
continue;
}
}
break;
}
});
lt.plugins.cljrefactor.threading.do_thread_last_fully = (function do_thread_last_fully(zloc){while(true){
if(cljs.core.not.call(null,lt.plugins.cljrefactor.threading.threadable_QMARK_.call(null,zloc)))
{return zloc;
} else
{{
var G__14944 = lt.plugins.cljrefactor.threading.do_thread_last_one.call(null,zloc);
zloc = G__14944;
continue;
}
}
break;
}
});
lt.plugins.cljrefactor.threading.do_unwind_thread_first_fully = (function do_unwind_thread_first_fully(zloc){while(true){
if(cljs.core.not.call(null,lt.plugins.cljrefactor.threading.unwindable_QMARK_.call(null,zloc)))
{return zloc;
} else
{{
var G__14945 = lt.plugins.cljrefactor.threading.do_unwind_thread_first_one.call(null,zloc);
zloc = G__14945;
continue;
}
}
break;
}
});
lt.plugins.cljrefactor.threading.do_unwind_thread_last_fully = (function do_unwind_thread_last_fully(zloc){while(true){
if(cljs.core.not.call(null,lt.plugins.cljrefactor.threading.unwindable_QMARK_.call(null,zloc)))
{return zloc;
} else
{{
var G__14946 = lt.plugins.cljrefactor.threading.do_unwind_thread_last_one.call(null,zloc);
zloc = G__14946;
continue;
}
}
break;
}
});
lt.plugins.cljrefactor.threading.thread_first_fully_STAR_ = (function thread_first_fully_STAR_(t,zloc){return lt.plugins.cljrefactor.threading.do_thread_first_fully.call(null,lt.plugins.cljrefactor.threading.maybe_wrap_in_threading.call(null,zloc,t));
});
lt.plugins.cljrefactor.threading.thread_last_fully_STAR_ = (function thread_last_fully_STAR_(t,zloc){return lt.plugins.cljrefactor.threading.do_thread_last_fully.call(null,lt.plugins.cljrefactor.threading.maybe_wrap_in_threading.call(null,zloc,t));
});
lt.plugins.cljrefactor.threading.unwind_thread_first_fully_STAR_ = (function unwind_thread_first_fully_STAR_(zloc){return lt.plugins.cljrefactor.threading.do_unwind_thread_first_fully.call(null,zloc);
});
lt.plugins.cljrefactor.threading.unwind_thread_last_fully_STAR_ = (function unwind_thread_last_fully_STAR_(zloc){return lt.plugins.cljrefactor.threading.do_unwind_thread_last_fully.call(null,zloc);
});
lt.plugins.cljrefactor.threading.lookup_thread_fn = (function lookup_thread_fn(zloc){var G__14921 = (function (){var G__14922 = zloc;var G__14922__$1 = (((G__14922 == null))?null:rewrite_clj.zip.string.call(null,G__14922));return G__14922__$1;
})();if(cljs.core._EQ_.call(null,"some->>",G__14921))
{return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"thread-one","thread-one",4122742677),lt.plugins.cljrefactor.threading.do_thread_last_one,new cljs.core.Keyword(null,"thread-fully","thread-fully",3597276601),lt.plugins.cljrefactor.threading.do_thread_last_fully,new cljs.core.Keyword(null,"unwind-one","unwind-one",1422780460),lt.plugins.cljrefactor.threading.do_unwind_thread_last_one,new cljs.core.Keyword(null,"unwind-fully","unwind-fully",3093832848),lt.plugins.cljrefactor.threading.do_unwind_thread_last_fully], null);
} else
{if(cljs.core._EQ_.call(null,"->>",G__14921))
{return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"thread-one","thread-one",4122742677),lt.plugins.cljrefactor.threading.do_thread_last_one,new cljs.core.Keyword(null,"thread-fully","thread-fully",3597276601),lt.plugins.cljrefactor.threading.do_thread_last_fully,new cljs.core.Keyword(null,"unwind-one","unwind-one",1422780460),lt.plugins.cljrefactor.threading.do_unwind_thread_last_one,new cljs.core.Keyword(null,"unwind-fully","unwind-fully",3093832848),lt.plugins.cljrefactor.threading.do_unwind_thread_last_fully], null);
} else
{if(cljs.core._EQ_.call(null,"some->",G__14921))
{return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"thread-one","thread-one",4122742677),lt.plugins.cljrefactor.threading.do_thread_first_one,new cljs.core.Keyword(null,"thread-fully","thread-fully",3597276601),lt.plugins.cljrefactor.threading.do_thread_first_fully,new cljs.core.Keyword(null,"unwind-one","unwind-one",1422780460),lt.plugins.cljrefactor.threading.do_unwind_thread_first_one,new cljs.core.Keyword(null,"unwind-fully","unwind-fully",3093832848),lt.plugins.cljrefactor.threading.do_unwind_thread_first_fully], null);
} else
{if(cljs.core._EQ_.call(null,"->",G__14921))
{return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,"thread-one","thread-one",4122742677),lt.plugins.cljrefactor.threading.do_thread_first_one,new cljs.core.Keyword(null,"thread-fully","thread-fully",3597276601),lt.plugins.cljrefactor.threading.do_thread_first_fully,new cljs.core.Keyword(null,"unwind-one","unwind-one",1422780460),lt.plugins.cljrefactor.threading.do_unwind_thread_first_one,new cljs.core.Keyword(null,"unwind-fully","unwind-fully",3093832848),lt.plugins.cljrefactor.threading.do_unwind_thread_first_fully], null);
} else
{if(new cljs.core.Keyword(null,"else","else",1017020587))
{return null;
} else
{return null;
}
}
}
}
}
});
lt.plugins.cljrefactor.threading.thread_one_STAR_ = (function thread_one_STAR_(zloc){if(cljs.core.truth_(lt.plugins.cljrefactor.threading.threadable_QMARK_.call(null,zloc)))
{var temp__4092__auto__ = (function (){var G__14924 = zloc;var G__14924__$1 = (((G__14924 == null))?null:clojure.zip.down.call(null,G__14924));var G__14924__$2 = (((G__14924__$1 == null))?null:lt.plugins.cljrefactor.threading.lookup_thread_fn.call(null,G__14924__$1));var G__14924__$3 = (((G__14924__$2 == null))?null:new cljs.core.Keyword(null,"thread-one","thread-one",4122742677).cljs$core$IFn$_invoke$arity$1(G__14924__$2));return G__14924__$3;
})();if(cljs.core.truth_(temp__4092__auto__))
{var thread_fn = temp__4092__auto__;return thread_fn.call(null,zloc);
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.threading.thread_fully_STAR_ = (function thread_fully_STAR_(zloc){if(cljs.core.truth_(lt.plugins.cljrefactor.threading.threadable_QMARK_.call(null,zloc)))
{var temp__4092__auto__ = (function (){var G__14926 = zloc;var G__14926__$1 = (((G__14926 == null))?null:clojure.zip.down.call(null,G__14926));var G__14926__$2 = (((G__14926__$1 == null))?null:lt.plugins.cljrefactor.threading.lookup_thread_fn.call(null,G__14926__$1));var G__14926__$3 = (((G__14926__$2 == null))?null:new cljs.core.Keyword(null,"thread-fully","thread-fully",3597276601).cljs$core$IFn$_invoke$arity$1(G__14926__$2));return G__14926__$3;
})();if(cljs.core.truth_(temp__4092__auto__))
{var thread_fn = temp__4092__auto__;return thread_fn.call(null,zloc);
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.threading.unwind_one_STAR_ = (function unwind_one_STAR_(zloc){if(cljs.core.truth_(lt.plugins.cljrefactor.threading.unwindable_QMARK_.call(null,zloc)))
{var temp__4092__auto__ = (function (){var G__14928 = zloc;var G__14928__$1 = (((G__14928 == null))?null:clojure.zip.down.call(null,G__14928));var G__14928__$2 = (((G__14928__$1 == null))?null:lt.plugins.cljrefactor.threading.lookup_thread_fn.call(null,G__14928__$1));var G__14928__$3 = (((G__14928__$2 == null))?null:new cljs.core.Keyword(null,"unwind-one","unwind-one",1422780460).cljs$core$IFn$_invoke$arity$1(G__14928__$2));return G__14928__$3;
})();if(cljs.core.truth_(temp__4092__auto__))
{var thread_fn = temp__4092__auto__;return thread_fn.call(null,zloc);
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.threading.unwind_fully_STAR_ = (function unwind_fully_STAR_(zloc){if(cljs.core.truth_(lt.plugins.cljrefactor.threading.unwindable_QMARK_.call(null,zloc)))
{var temp__4092__auto__ = (function (){var G__14930 = zloc;var G__14930__$1 = (((G__14930 == null))?null:clojure.zip.down.call(null,G__14930));var G__14930__$2 = (((G__14930__$1 == null))?null:lt.plugins.cljrefactor.threading.lookup_thread_fn.call(null,G__14930__$1));var G__14930__$3 = (((G__14930__$2 == null))?null:new cljs.core.Keyword(null,"unwind-fully","unwind-fully",3093832848).cljs$core$IFn$_invoke$arity$1(G__14930__$2));return G__14930__$3;
})();if(cljs.core.truth_(temp__4092__auto__))
{var thread_fn = temp__4092__auto__;return thread_fn.call(null,zloc);
} else
{return null;
}
} else
{return null;
}
});
lt.plugins.cljrefactor.threading.maybe_reposition = (function maybe_reposition(zloc){if(cljs.core.truth_(lt.plugins.cljrefactor.threading.threading_node_QMARK_.call(null,zloc)))
{return clojure.zip.up.call(null,zloc);
} else
{return zloc;
}
});
lt.plugins.cljrefactor.threading.replace_cmd = (function replace_cmd(ed,replace_fn){var pos = lt.objs.editor.__GT_cursor.call(null,ed);var form = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed,pos);var zloc = (function (){var G__14932 = form;var G__14932__$1 = (((G__14932 == null))?null:new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(G__14932));var G__14932__$2 = (((G__14932__$1 == null))?null:rewrite_clj.zip.of_string.call(null,G__14932__$1));var G__14932__$3 = (((G__14932__$2 == null))?null:rewrite_clj.zip.find_last_by_pos.call(null,G__14932__$2,lt.plugins.cljrefactor.util.__GT_zipper_pos_start.call(null,pos,form)));var G__14932__$4 = (((G__14932__$3 == null))?null:lt.plugins.cljrefactor.threading.maybe_reposition.call(null,G__14932__$3));return G__14932__$4;
})();var temp__4092__auto__ = rewrite_clj.zip.root_string.call(null,replace_fn.call(null,zloc));if(cljs.core.truth_(temp__4092__auto__))
{var res = temp__4092__auto__;lt.objs.editor.replace.call(null,ed,new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form),res);
lt.objs.editor.move_cursor.call(null,ed,pos);
return lt.plugins.cljrefactor.util.format_keep_pos.call(null,ed);
} else
{return null;
}
});
lt.plugins.cljrefactor.threading.__BEH__thread_fully_BANG_ = (function __BEH__thread_fully_BANG_(ed){return lt.plugins.cljrefactor.threading.replace_cmd.call(null,ed,lt.plugins.cljrefactor.threading.thread_fully_STAR_);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-fully!","lt.plugins.cljrefactor.threading/thread-fully!",2430149273),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.threading.__BEH__thread_fully_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.thread-fully!","refactor.thread-fully!",4076490368),null], null), null));
lt.plugins.cljrefactor.threading.__BEH__thread_one_BANG_ = (function __BEH__thread_one_BANG_(ed){return lt.plugins.cljrefactor.threading.replace_cmd.call(null,ed,lt.plugins.cljrefactor.threading.thread_one_STAR_);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-one!","lt.plugins.cljrefactor.threading/thread-one!",1844339773),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.threading.__BEH__thread_one_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.thread-one!","refactor.thread-one!",1406178596),null], null), null));
lt.plugins.cljrefactor.threading.__BEH__thread_first_fully_BANG_ = (function __BEH__thread_first_fully_BANG_(ed){return lt.plugins.cljrefactor.threading.replace_cmd.call(null,ed,cljs.core.partial.call(null,lt.plugins.cljrefactor.threading.thread_first_fully_STAR_,new cljs.core.Symbol(null,"->","->",-1640530070,null)));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-first-fully!","lt.plugins.cljrefactor.threading/thread-first-fully!",790664744),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.threading.__BEH__thread_first_fully_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.thread-first-fully!","refactor.thread-first-fully!",1331120893),null], null), null));
lt.plugins.cljrefactor.threading.__BEH__thread_last_fully_BANG_ = (function __BEH__thread_last_fully_BANG_(ed){return lt.plugins.cljrefactor.threading.replace_cmd.call(null,ed,cljs.core.partial.call(null,lt.plugins.cljrefactor.threading.thread_last_fully_STAR_,new cljs.core.Symbol(null,"->>","->>",-1640486298,null)));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-last-fully!","lt.plugins.cljrefactor.threading/thread-last-fully!",1405270892),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.threading.__BEH__thread_last_fully_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.thread-last-fully!","refactor.thread-last-fully!",3258474761),null], null), null));
lt.plugins.cljrefactor.threading.__BEH__unwind_fully_BANG_ = (function __BEH__unwind_fully_BANG_(ed){return lt.plugins.cljrefactor.threading.replace_cmd.call(null,ed,lt.plugins.cljrefactor.threading.unwind_fully_STAR_);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.threading","unwind-fully!","lt.plugins.cljrefactor.threading/unwind-fully!",4020492500),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.threading.__BEH__unwind_fully_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.unwind-fully!","refactor.unwind-fully!",1354635913),null], null), null));
lt.plugins.cljrefactor.threading.__BEH__unwind_one_BANG_ = (function __BEH__unwind_one_BANG_(ed){return lt.plugins.cljrefactor.threading.replace_cmd.call(null,ed,lt.plugins.cljrefactor.threading.unwind_one_STAR_);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.threading","unwind-one!","lt.plugins.cljrefactor.threading/unwind-one!",3742803640),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.threading.__BEH__unwind_one_BANG_,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.unwind-one!","refactor.unwind-one!",3606695789),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-fully","lt.plugins.cljrefactor.threading/thread-fully",2223711832),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Thread fully",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.thread-fully!","refactor.thread-fully!",4076490368));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-one","lt.plugins.cljrefactor.threading/thread-one",616902708),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Thread one",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.thread-one!","refactor.thread-one!",1406178596));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-first-fully","lt.plugins.cljrefactor.threading/thread-first-fully",3311114537),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Thread first fully",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.thread-first-fully!","refactor.thread-first-fully!",1331120893));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.threading","thread-last-fully","lt.plugins.cljrefactor.threading/thread-last-fully",4481623909),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Thread last fully",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.thread-last-fully!","refactor.thread-last-fully!",3258474761));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.threading","unwind-fully","lt.plugins.cljrefactor.threading/unwind-fully",1988695805),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Unwind fully",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.unwind-fully!","refactor.unwind-fully!",1354635913));
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.threading","unwind-one","lt.plugins.cljrefactor.threading/unwind-one",4394965145),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Unwind one",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.unwind-one!","refactor.unwind-one!",3606695789));
} else
{return null;
}
})], null));
}
if(!lt.util.load.provided_QMARK_('lt.plugins.cljrefactor.macroexpand')) {
goog.provide('lt.plugins.cljrefactor.macroexpand');
goog.require('cljs.core');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.notifos');
goog.require('lt.objs.notifos');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
goog.require('lt.plugins.cljrefactor.util');
goog.require('lt.plugins.cljrefactor.middleware');
goog.require('lt.objs.editor');
goog.require('lt.object');
goog.require('lt.object');
goog.require('lt.objs.editor');
goog.require('lt.objs.editor.pool');
goog.require('lt.objs.command');
lt.plugins.cljrefactor.macroexpand.__BEH__macroexpand_res = (function __BEH__macroexpand_res(ed,res){var vec__9904 = lt.plugins.cljrefactor.middleware.extract_result.call(null,res,new cljs.core.Keyword(null,"singles","singles",3108436125),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"expansion","expansion",1031782449)], null));var ok_QMARK_ = cljs.core.nth.call(null,vec__9904,0,null);var ret = cljs.core.nth.call(null,vec__9904,1,null);if(cljs.core.not.call(null,ok_QMARK_))
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.exception","editor.exception",3983021184),new cljs.core.Keyword(null,"err","err",1014004951).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta","meta",1017252215).cljs$core$IFn$_invoke$arity$1(ret))], null));
} else
{lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"editor.result.underline","editor.result.underline",541343758),new cljs.core.Keyword(null,"expansion","expansion",1031782449).cljs$core$IFn$_invoke$arity$1(ret),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"line","line",1017226086),(new cljs.core.Keyword(null,"line","line",1017226086).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"to","to",1013907949).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"bounds","bounds",3925666343).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,"meta-lt","meta-lt",1969166786).cljs$core$IFn$_invoke$arity$1(ret)))) + 1)], null));
}
return lt.objs.notifos.done_working.call(null);
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.macroexpand","macroexpand-res","lt.plugins.cljrefactor.macroexpand/macroexpand-res",2658884789),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.macroexpand.__BEH__macroexpand_res,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"editor.eval.clj.result.refactor.macroexpand","editor.eval.clj.result.refactor.macroexpand",2847263391),null], null), null));
lt.plugins.cljrefactor.macroexpand.__BEH__macroexpand = (function __BEH__macroexpand(ed,code,bounds,expander){var op = lt.plugins.cljrefactor.middleware.create_ns_op.call(null,ed,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"op","op",1013907795),"macroexpand",new cljs.core.Keyword(null,"code","code",1016963423),code,new cljs.core.Keyword(null,"expander","expander",3369771065),expander], null));return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"eval.custom","eval.custom",3328560245),op,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"result-type","result-type",4725630556),new cljs.core.Keyword(null,"refactor.macroexpand","refactor.macroexpand",4637302316),new cljs.core.Keyword(null,"verbatim","verbatim",3307884968),true,new cljs.core.Keyword(null,"bounds","bounds",3925666343),bounds], null));
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.macroexpand","macroexpand","lt.plugins.cljrefactor.macroexpand/macroexpand",2686870120),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.macroexpand.__BEH__macroexpand,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.macroexpand","refactor.macroexpand",4637302316),null], null), null));
lt.plugins.cljrefactor.macroexpand.__BEH__start_macroexpand = (function __BEH__start_macroexpand(ed,expander){if(cljs.core.truth_(lt.objs.editor.selection_QMARK_.call(null,ed)))
{return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.macroexpand","refactor.macroexpand",4637302316),lt.objs.editor.selection.call(null,ed),lt.objs.editor.selection_bounds.call(null,ed),expander);
} else
{var temp__4092__auto__ = lt.plugins.cljrefactor.util.get_top_level_form.call(null,ed);if(cljs.core.truth_(temp__4092__auto__))
{var form = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.macroexpand","refactor.macroexpand",4637302316),new cljs.core.Keyword(null,"form-str","form-str",1486434586).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,"from","from",1017056028),new cljs.core.Keyword(null,"start","start",1123661780).cljs$core$IFn$_invoke$arity$1(form),new cljs.core.Keyword(null,"to","to",1013907949),new cljs.core.Keyword(null,"end","end",1014004813).cljs$core$IFn$_invoke$arity$1(form)], null),expander);
} else
{return null;
}
}
});
lt.object.behavior_STAR_.call(null,new cljs.core.Keyword("lt.plugins.cljrefactor.macroexpand","start-macroexpand","lt.plugins.cljrefactor.macroexpand/start-macroexpand",550442355),new cljs.core.Keyword(null,"reaction","reaction",4441361819),lt.plugins.cljrefactor.macroexpand.__BEH__start_macroexpand,new cljs.core.Keyword(null,"triggers","triggers",2516997421),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"refactor.start-macroexpand","refactor.start-macroexpand",2144051777),null], null), null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.macroexpand","macroexpand-default","lt.plugins.cljrefactor.macroexpand/macroexpand-default",4459754900),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Macroexpand",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.start-macroexpand","refactor.start-macroexpand",2144051777),"macroexpand");
} else
{return null;
}
})], null));
lt.objs.command.command.call(null,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"command","command",1964298941),new cljs.core.Keyword("lt.plugins.cljrefactor.macroexpand","macroexpand-all","lt.plugins.cljrefactor.macroexpand/macroexpand-all",2662571444),new cljs.core.Keyword(null,"desc","desc",1016984067),"Clojure refactor: Macroexpand all",new cljs.core.Keyword(null,"exec","exec",1017031683),(function (){var temp__4092__auto__ = lt.objs.editor.pool.last_active.call(null);if(cljs.core.truth_(temp__4092__auto__))
{var ed = temp__4092__auto__;return lt.object.raise.call(null,ed,new cljs.core.Keyword(null,"refactor.start-macroexpand","refactor.start-macroexpand",2144051777),"macroexpand-all");
} else
{return null;
}
})], null));
}

//# sourceMappingURL=clj-light-refactor_compiled.js.map