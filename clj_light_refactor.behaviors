[[:app :lt.objs.plugins/load-js ["react.min.js" "clj-light-refactor_compiled.js"]]
 [:app :lt.objs.plugins/load-css "css/refactor.css"]


 ;; Middleware independent refactorings
 [:editor.clj :lt.plugins.cljrefactor.threading/thread-fully!]
 [:editor.clj :lt.plugins.cljrefactor.threading/thread-one!]
 [:editor.clj :lt.plugins.cljrefactor.threading/thread-first-fully!]
 [:editor.clj :lt.plugins.cljrefactor.threading/thread-last-fully!]
 [:editor.clj :lt.plugins.cljrefactor.threading/unwind-fully!]
 [:editor.clj :lt.plugins.cljrefactor.threading/unwind-one!]
 [:editor.cljs :lt.plugins.cljrefactor.threading/thread-fully!]
 [:editor.cljs :lt.plugins.cljrefactor.threading/thread-one!]
 [:editor.cljs :lt.plugins.cljrefactor.threading/thread-first-fully!]
 [:editor.cljs :lt.plugins.cljrefactor.threading/thread-last-fully!]
 [:editor.cljs :lt.plugins.cljrefactor.threading/unwind-fully!]
 [:editor.cljs :lt.plugins.cljrefactor.threading/unwind-one!]

 [:editor.clj :lt.plugins.cljrefactor.definition/start-show-definition]
 [:editor.clj :lt.plugins.cljrefactor.definition/show-definition-at-cursor]
 [:editor.clj :lt.plugins.cljrefactor.definition/finish-show-definition]
 [:editor.cljs :lt.plugins.cljrefactor.definition/start-show-definition]
 [:editor.cljs :lt.plugins.cljrefactor.definition/show-definition-at-cursor]
 [:editor.cljs :lt.plugins.cljrefactor.definition/finish-show-definition]

 [:editor.clj :lt.plugins.cljrefactor.form-refactor/cycle-if!]
 [:editor.cljs :lt.plugins.cljrefactor.form-refactor/cycle-if!]

 [:editor.clj :lt.plugins.cljrefactor.form-refactor/cycle-col!]
 [:editor.cljs :lt.plugins.cljrefactor.form-refactor/cycle-col!]


 [:editor.clj :lt.plugins.cljrefactor/ensure-connected]
 [:editor.clj :lt.plugins.cljrefactor/clj-refactor.maybe-project]
 [:editor.clj :lt.plugins.cljrefactor.usages/find-symbol.res]
 [:editor.clj :lt.plugins.cljrefactor.usages/rename-symbol.start]
 [:editor.clj :lt.plugins.cljrefactor.usages/rename-symbol.prompt]
 [:editor.clj :lt.plugins.cljrefactor.usages/rename-symbol.res]
 [:editor.clj :lt.plugins.cljrefactor.namespace/clean-ns-res]
 [:editor.clj :lt.plugins.cljrefactor/resolve-missing!]
 [:editor.clj :lt.plugins.cljrefactor/resolve-missing-res]
 [:editor.clj :lt.plugins.cljrefactor/resolve-missing-selected]


 ;; Autocompleter
 [:editor.clj :lt.plugins.cljrefactor.completer/completer.start]
 [:editor.clj :lt.plugins.cljrefactor.completer/completer.res]
 [:editor.clj :-lt.plugins.clojure/use-local-hints] ; Override clojure plugin hints
 [:editor.clj :-lt.plugins.auto-complete/textual-hints] ; just messes with autocomplete of clojure stuff
 [:editor.clj :lt.plugins.cljrefactor.completer/use-local-hints]

 ;; Testing
 [:editor.clj :lt.plugins.cljrefactor.testing/test-all]
 [:editor.clj :lt.plugins.cljrefactor.testing/test-one]
 [:editor.clj :lt.plugins.cljrefactor.testing/test-res]


 ; Extract fn
 [:editor.clj :lt.plugins.cljrefactor.function/extract-fn!]
 [:editor.clj :lt.plugins.cljrefactor.function/unbound-res]

 ; Format code (clj-format)
 [:editor.clj :lt.plugins.cljrefactor.format/start-format-code]
 [:editor.clj :lt.plugins.cljrefactor.format/format-code!]
 [:editor.clj :lt.plugins.cljrefactor.format/format-res]

 ; Macroexpand
 [:editor.clj :lt.plugins.cljrefactor.macroexpand/start-macroexpand]
 [:editor.clj :lt.plugins.cljrefactor.macroexpand/macroexpand]
 [:editor.clj :lt.plugins.cljrefactor.macroexpand/macroexpand-res]


 [:editor.clj.project-file :-lt.plugins.auto-complete/textual-hints] ; just messes with the artifacts completions
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/artifact-hints]
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/finish-artifact-hints]
 [:refactor.artifacts :lt.plugins.cljrefactor.artifacts/trigger-artifact-hints]
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/finish-artifact-version-hints]
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/trigger-artifact-version-hints]
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/artifact-version-selected]
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/hotload-dep!]
 [:editor.clj.project-file :lt.plugins.cljrefactor.artifacts/hotload-dep.res]
 [:editor.clj.project-file :-lt.plugins.cljrefactor.completer/use-local-hints]


 [:refactor.usages :lt.plugins.cljrefactor.usages/on-close]
 [:refactor.usages :lt.plugins.cljrefactor.usages/find-symbol.start]
 [:refactor.usages :lt.plugins.cljrefactor.usages/move-next]
 [:refactor.usages :lt.plugins.cljrefactor.usages/move-prev]
 [:refactor.usages :lt.plugins.cljrefactor.usages/open-active]
 [:refactor.usages :lt.plugins.cljrefactor.usages/clear!]

 ;; Namespace browser
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/escape!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/clear!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/focus!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/move-up!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/move-down!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/update-ns-list!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/select!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/search!]
 [:clojure.nsbrowser :lt.plugins.cljrefactor.nsbrowser/set-nsbrowser-filters
  ["^cider\\.|^deps\\.|^refactor-nrepl\\.|^ibdknox\\.|^lighttable\\.nrepl"]]

 [:editor.clj :lt.plugins.cljrefactor.nsbrowser/list-ns]
 [:editor.clj :lt.plugins.cljrefactor.nsbrowser/list-ns-res]
 [:editor.clj :lt.plugins.cljrefactor.nsbrowser/list-ns-vars]
 [:editor.clj :lt.plugins.cljrefactor.nsbrowser/list-ns-vars-res]

 ;; jump to resource
 [:editor.clj :lt.plugins.cljrefactor.resource/find-resource]
 [:editor.clj :lt.plugins.cljrefactor.resource/find-resource.res]


 ;; Paredit
 [:editor.clj :lt.plugins.cljrefactor.paredit/open-pair!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/open-pair!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/slurp-forward!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/slurp-forward!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/slurp-backward!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/slurp-backward!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/barf-forward!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/barf-forward!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/barf-backward!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/barf-backward!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/kill!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/kill!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/wrap-around!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/wrap-around!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/split!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/split!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/join!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/join!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/splice!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/splice!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-to-previous!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-to-previous!]


 ; movements
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-next!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-next!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-prev!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-prev!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-down!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-down!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-up!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-up!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-up-pos-right!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-up-pos-right!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-right!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-right!]
 [:editor.clj :lt.plugins.cljrefactor.paredit/move-left!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/move-left!]

 ; Misc
 [:editor.clj :lt.plugins.cljrefactor.paredit/select!]
 [:editor.cljs :lt.plugins.cljrefactor.paredit/select!]


 ]
